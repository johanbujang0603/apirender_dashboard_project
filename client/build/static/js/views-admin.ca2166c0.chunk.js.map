{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","containers/navs/Footer.js","containers/navs/Topnav.Notifications.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/AdminTopnav.js","constants/adminMenu.js","containers/navs/AdminSidebar.js","layout/AdminLayout.js","views/admin/index.js","components/common/CustomBootstrap.js","helpers/IntlMessages.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","color","right","id","to","Footer","xxs","sm","TopnavNotifications","getColor","localStorage","getItem","themeColorStorageKey","defaultColor","TopnavDarkSwitch","switchChecked","setSwitchChecked","useState","tooltipOpen","setTooltipOpen","useEffect","indexOf","checked","onChange","replace","setItem","setTimeout","window","location","reload","Tooltip","placement","isOpen","target","toggle","injectIntl","connect","menu","settings","authUser","containerClassnames","menuClickCount","selectedMenuHasSubItems","locale","loginUser","user","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","logoutUserAction","logoutUser","changeLocaleAction","changeLocale","intl","history","searchKeyword","setSearchKeyword","search","push","searchPath","handleDocumentClickSearch","e","isSearchClick","classList","contains","parentElement","input","document","querySelector","remove","removeEventsSearch","removeEventListener","addEventsSearch","addEventListener","messages","onClick","_clickCount","_conClassnames","preventDefault","event","createEvent","initEvent","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","data-search-path","Input","name","placeholder","value","onKeyPress","key","handleSearchInputKeyPress","innerWidth","menuHiddenBreakpoint","elem","add","stopPropagation","handleSearchIconClick","UncontrolledDropdown","DropdownToggle","caret","size","toUpperCase","DropdownMenu","localeOptions","map","l","DropdownItem","_locale","direction","getDirection","setDirection","handleChangeLocale","href","isDarkSwitchActive","type","isFS","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","first_name","last_name","avatar","alt","src","divider","data","icon","label","subs","Sidebar","Component","constructor","props","super","handleWindowResize","isTrusted","this","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","setState","viewingParentMenu","classes","subHiddenBreakpoint","split","filter","windowWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","removeEvents","setSelectedLiActive","callback","oldli","oldliSub","selectedSublink","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","componentDidUpdate","prevProps","pathname","scrollTo","componentDidMount","setProjectMenuItems","userId","_id","role","componentWillUnmount","render","options","suppressScrollX","wheelPropagation","Nav","vertical","item","NavItem","classnames","active","newWindow","rel","IntlMessages","data-flag","data-parent","sub","index","Collapse","thirdSub","thirdIndex","Badge","pill","style","totalProjectsNumber","latestProjectMenus","project","project_name","withRouter","changeDefaultClassnames","mapActionToProps","receiveAuthUserAction","receiveAuthUser","children","Object","keys","AdminSidebar","Dashboard","React","lazy","Users","Projects","Settings","OrderList","Coupons","match","fallback","exact","from","url","path","Colxx","widths","Separator","withRef"],"mappings":"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","file":"static/js/views-admin.ca2166c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"/app/dashboard\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.dashboard\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/projects/list\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-briefcase d-block\" />{' '}\r\n            <IntlMessages id=\"menu.project-list\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/tools\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-wrench d-block\" />{' '}\r\n            <IntlMessages id=\"menu.tools\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/support\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-question d-block\" />{' '}\r\n            <IntlMessages id=\"menu.support\" />\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"/app/settings\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-settings d-block\" />{' '}\r\n            <IntlMessages id=\"menu.settings\" />\r\n          </NavLink>\r\n\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">© APIRender.com Pty Ltd</p>\r\n            </Colxx>\r\n            <Colxx className=\"col-sm-6 d-none d-sm-flex justify-content-end\">\r\n              <p className=\"mb-0 text-muted text-sm\">All Prices are in Australian Dollars and currency can be converted at checkout.</p>\r\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={'/app/privacy'}>\r\n                    Privacy Policy\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={`/app/terms`}>\r\n                    Terms & Conditions\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, {useEffect, useState} from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst NotificationItem = ({ title, link, date }) => {\r\n  return (\r\n    <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\">\r\n      <div className=\"pl-3 pr-2\">\r\n        <a href={`/app/${link}`}>\r\n          <p className=\"font-weight-medium mb-1\">{title}</p>\r\n          <p className=\"text-muted mb-0 text-small\">{moment(date).format('LLLL')}</p>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TopnavNotifications = () => {\r\n  \r\n  const [notifications, setNotifications] = useState([]);\r\n  // useEffect(() => {\r\n  //   axios.post(`/api/actions/get-latest`, {user_id: JSON.parse(localStorage.getItem('user')).uid})\r\n  //   .then((res) => {\r\n  //     return res.data;\r\n  //   })\r\n  //   .then((data) => {\r\n  //     setNotifications(data);\r\n  //   });\r\n  // }, []);\r\n  \r\n  return (\r\n    <div className=\"position-relative d-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle\r\n          className=\"header-icon notificationButton\"\r\n          color=\"empty\"\r\n        >\r\n          <i className=\"simple-icon-bell\" />\r\n          <span className=\"count\">3</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3 scroll\"\r\n          right\r\n          id=\"notificationDropdown\"\r\n        >\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            {notifications.map((notification, index) => {\r\n              return <NotificationItem key={index} {...notification} />;\r\n            })}\r\n          </PerfectScrollbar>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavNotifications;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nimport {\r\n  defaultColor,\r\n  themeColorStorageKey,\r\n} from '../../constants/defaultValues';\r\n\r\nconst getColor = () => {\r\n  return localStorage.getItem(themeColorStorageKey)\r\n    ? localStorage.getItem(themeColorStorageKey)\r\n    : defaultColor;\r\n};\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    localStorage.setItem(themeColorStorageKey, color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  receiveAuthUser,\r\n  changeLocale,\r\n} from '../../redux/actions';\r\n\r\nimport {\r\n  menuHiddenBreakpoint,\r\n  searchPath,\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n} from '../../constants/defaultValues';\r\n\r\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\r\nimport TopnavEasyAccess from './Topnav.EasyAccess';\r\nimport TopnavNotifications from './Topnav.Notifications';\r\nimport TopnavDarkSwitch from './Topnav.DarkSwitch';\r\n\r\nimport { getDirection, setDirection } from '../../helpers/Utils';\r\n\r\nconst AdminTopnav = ({\r\n  intl,\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  locale,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n  changeLocaleAction,\r\n  loginUser,\r\n}) => {\r\n  // const [isInFullScreen, setIsInFullScreen] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword('');\r\n  };\r\n\r\n  const handleChangeLocale = (_locale, direction) => {\r\n    changeLocaleAction(_locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const isInFullScreenFn = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  const handleSearchIconClick = (e) => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains('search')) {\r\n        if (e.target.parentElement.classList.contains('search')) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains('search')\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains('mobile-view')) {\r\n        search();\r\n        elem.classList.remove('mobile-view');\r\n        removeEventsSearch();\r\n      } else {\r\n        elem.classList.add('mobile-view');\r\n        addEventsSearch();\r\n      }\r\n    } else {\r\n      search();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('navbar') ||\r\n        e.target.classList.contains('simple-icon-magnifier'))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains('simple-icon-magnifier')) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains('search')\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector('.mobile-view');\r\n      if (input && input.classList) input.classList.remove('mobile-view');\r\n      removeEventsSearch();\r\n      setSearchKeyword('');\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const addEventsSearch = () => {\r\n    document.addEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const handleSearchInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      search();\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const isFS = isInFullScreenFn();\r\n\r\n    const docElm = document.documentElement;\r\n    if (!isFS) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n    // setIsInFullScreen(!isFS);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction(history);\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        <div className=\"search\" data-search-path=\"/app/pages/search\">\r\n          <Input\r\n            name=\"searchKeyword\"\r\n            id=\"searchKeyword\"\r\n            placeholder={messages['menu.search']}\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n            onKeyPress={(e) => handleSearchInputKeyPress(e)}\r\n          />\r\n          <span\r\n            className=\"search-icon\"\r\n            onClick={(e) => handleSearchIconClick(e)}\r\n          >\r\n            <i className=\"simple-icon-magnifier\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-inline-block\">\r\n          <UncontrolledDropdown className=\"ml-2\">\r\n            <DropdownToggle\r\n              caret\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              className=\"language-button\"\r\n            >\r\n              <span className=\"name\">{locale.toUpperCase()}</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              {localeOptions.map((l) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\r\n                    key={l.id}\r\n                  >\r\n                    {l.name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n      <a className=\"navbar-logo\" href=\"/\">\r\n        <span className=\"logo d-none d-xs-block\" />\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </a>\r\n\r\n      <div className=\"navbar-right\">\r\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n        <div className=\"header-icons d-inline-block align-middle\">\r\n          <TopnavEasyAccess />\r\n          {/* <TopnavNotifications /> */}\r\n          <button\r\n            className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\r\n            type=\"button\"\r\n            id=\"fullScreenButton\"\r\n            onClick={toggleFullScreen}\r\n          >\r\n            <i className=\"simple-icon-plus d-block\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span className=\"name mr-1\">{loginUser.first_name} {loginUser.last_name}</span>\r\n              <span>\r\n                {\r\n                  loginUser.avatar != null ? (\r\n                    <img alt=\"avatar\" src={`/${loginUser.avatar}`} width=\"40px\" height=\"40px\" />\r\n                  ): (\r\n                    <img alt=\"avatar\" src='/assets/img/avatar.png' />\r\n                  )\r\n                }\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <DropdownItem>\r\n                Dashboard\r\n              </DropdownItem>\r\n              <DropdownItem>Projects</DropdownItem>\r\n              <DropdownItem>Tools</DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink\r\n                  to=\"/admin/settings\"\r\n                >\r\n                  Settings\r\n                </NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings, authUser }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n    loginUser,\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale,\r\n  })(AdminTopnav)\r\n);\r\n","const data = [\r\n  {\r\n    id: 'dashboard',\r\n    icon: 'simple-icon-home',\r\n    label: 'menu.dashboard',\r\n    to: '/admin/dashboard',\r\n  },\r\n  {\r\n    id: 'users',\r\n    icon: 'simple-icon-people',\r\n    label: 'menu.users',\r\n    to: '/admin/users',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-plus',\r\n        label: 'menu.new-user',\r\n        to: '/admin/users/new',\r\n      },\r\n      {\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.users-list',\r\n        to: '/admin/users/list',\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: 'projects',\r\n    icon: 'simple-icon-briefcase',\r\n    label: 'menu.projects',\r\n    to: '/admin/projects',\r\n  },\r\n  {\r\n    id: 'orders',\r\n    icon: 'simple-icon-docs',\r\n    label: 'menu.orders',\r\n    to: '/admin/orders',\r\n  },\r\n  {\r\n    id: 'coupons',\r\n    icon: 'simple-icon-docs',\r\n    label: 'menu.coupons',\r\n    to: '/admin/coupons',\r\n  },\r\n];\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse, Badge } from 'reactstrap';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setProjectMenuItems,\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/adminMenu';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: '',\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter((x) => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes('menu-sub-hidden') &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes('menu-hidden') ||\r\n      currentClasses.includes('menu-mobile')\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      '.third-level-menu  a.active'\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            ),\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n    this.props.setProjectMenuItems({userId: this.props.loginUser._id, role: this.props.loginUser.role});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter((x) => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  menuItems.map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                menuItems.map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                  {\r\n                                    item.id === 'projects' && sub.id === 'projects-list' && (\r\n                                      <Badge pill\r\n                                        color=\"primary\"\r\n                                        className=\"position-absolute badge-top-right\"\r\n                                        style={{right: \"15px\"}}>\r\n                                      {this.props.totalProjectsNumber}\r\n                                      </Badge>\r\n                                    )\r\n                                  }\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                        {\r\n                          item.id==='projects' && this.props.latestProjectMenus.map((project, index) => {\r\n                            return (\r\n                              <NavItem key={project._id}>\r\n                                <NavLink className=\"d-flex align-items-center pr-2\" to={`/admin/projects/details/${project._id}`}>\r\n                                  <i className=\"simple-icon-doc\" />{' '}\r\n                                  {project.project_name}\r\n                                </NavLink>\r\n                              </NavItem>\r\n                            )\r\n                          })\r\n                        }\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n  } = menu;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n    loginUser\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n    setProjectMenuItems,\r\n  })(Sidebar)\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport AdminTopnav from '../containers/navs/AdminTopnav';\r\nimport AdminSidebar from '../containers/navs/AdminSidebar';\r\nimport Footer from '../containers/navs/Footer';\r\n\r\nimport {\r\n  receiveAuthUser,\r\n} from '../redux/actions';\r\n\r\nconst AdminLayout = ({ containerClassnames, children, history, receiveAuthUserAction, loginUser }) => {\r\n\r\n  useEffect(() => {\r\n    receiveAuthUserAction(history);\r\n  }, []);\r\n  \r\n  return Object.keys(loginUser).length == 0 ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <AdminTopnav history={history} />\r\n      <AdminSidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const { containerClassnames } = menu;\r\n  const loginUser = authUser.user;\r\n  return { containerClassnames, loginUser};\r\n};\r\nconst mapActionToProps = {\r\n  receiveAuthUserAction: receiveAuthUser\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AdminLayout)\r\n);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AdminLayout from '../../layout/AdminLayout';\r\n\r\nconst Dashboard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard\" */ './dashboard')\r\n);\r\nconst Users = React.lazy(() =>\r\n  import(/* webpackChunkName: \"users\" */ './users')\r\n);\r\nconst Projects = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './projects')\r\n);\r\nconst Settings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './settings')\r\n);\r\nconst OrderList = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './orders')\r\n);\r\nconst Coupons = React.lazy(() =>\r\n  import(/* webpackChunkName: \"coupons\" */ './coupons')\r\n);\r\n\r\nconst Admin = ({ match }) => {\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/dashboard`}\r\n            />\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <Settings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              render={(props) => <Dashboard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/users`}\r\n              render={(props) => <Users {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/projects`}\r\n              render={(props) => <Projects {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/orders`}\r\n              render={(props) => <OrderList {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/coupons`}\r\n              render={(props) => <Coupons {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(Admin));\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n"],"sourceRoot":""}
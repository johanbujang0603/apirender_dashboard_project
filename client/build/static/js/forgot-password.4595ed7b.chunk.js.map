{"version":3,"sources":["views/user/forgot-password.js"],"names":["validateEmail","value","error","test","connect","authUser","forgotUserMail","loading","forgotPasswordAction","forgotPassword","history","useState","initialValues","email","className","xxs","md","to","id","onSubmit","values","console","log","axios","post","then","res","NotificationManager","success","data","push","catch","err","response","errors","touched","name","validate","color","size"],"mappings":"oSAWMA,EAAgB,SAACC,GACrB,IAAIC,EAMJ,OALKD,EAEO,4CAA4CE,KAAKF,KAC3DC,EAAQ,yBAFRA,EAAQ,kCAIHA,GAmGME,uBALS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEzB,MAAO,CAAEC,eADkCD,EAAnCC,eACiBC,QADkBF,EAAnBE,QACUL,MADSG,EAAVH,SAIK,CACtCM,qBAAsBC,KADTL,EAhGQ,SAAC,GAGjB,IAFLM,EAEI,EAFJA,QACAH,EACI,EADJA,QACI,EACYI,mBAAS,IAqBnBC,EAAgB,CAAEC,MAtBpB,qBAwBJ,OACE,kBAAC,IAAD,CAAKC,UAAU,SACb,kBAAC,IAAD,CAAOC,IAAI,KAAKC,GAAG,KAAKF,UAAU,mBAChC,kBAAC,IAAD,CAAMA,UAAU,aACd,yBAAKA,UAAU,kCAEf,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAASG,GAAG,IAAIH,UAAU,SACxB,0BAAMA,UAAU,iBAElB,kBAAC,IAAD,CAAWA,UAAU,QACnB,kBAAC,IAAD,CAAcI,GAAG,0BAGnB,kBAAC,IAAD,CAAQN,cAAeA,EAAeO,SAnCvB,SAACC,GACxBC,QAAQC,IAAIF,EAAOP,OACnBU,IAAMC,KAAK,uBAAwB,CAAEX,MAAOO,EAAOP,QAClDY,MAAK,SAACC,GACLC,IAAoBC,QAClBF,EAAIG,KACJ,0BACA,IACA,KACA,KACA,IAEFnB,EAAQoB,KAAK,kBAEdC,OAAM,SAACC,GACNX,QAAQC,IAAIU,EAAIC,gBAqBP,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,kBAAC,IAAD,CAAMrB,UAAU,mCACd,kBAAC,IAAD,CAAWA,UAAU,8BACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcI,GAAG,gBAEnB,kBAAC,IAAD,CACEJ,UAAU,eACVsB,KAAK,QACLC,SAAUrC,IAEXkC,EAAOrB,OAASsB,EAAQtB,OACvB,yBAAKC,UAAU,4BACZoB,EAAOrB,QAKd,yBAAKC,UAAU,qDACb,kBAAC,IAAD,CAASG,GAAG,yBACV,kBAAC,IAAD,CAAcC,GAAG,mCAEnB,kBAAC,IAAD,CACEoB,MAAM,UACNxB,UAAS,wCACPP,EAAU,eAAiB,IAE7BgC,KAAK,MAEL,0BAAMzB,UAAU,0BACd,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,aAElB,0BAAMA,UAAU,SACd,kBAAC,IAAD,CAAcI,GAAG","file":"static/js/forgot-password.4595ed7b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { forgotPassword } from '../../redux/actions';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\n\r\nconst validateEmail = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Please enter your email address';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address';\r\n  }\r\n  return error;\r\n};\r\n\r\nconst ForgotPassword = ({\r\n  history,\r\n  loading\r\n}) => {\r\n  const [email] = useState('');\r\n\r\n  const onForgotPassword = (values) => {\r\n    console.log(values.email);\r\n    axios.post(\"/api/password-reset/\", { email: values.email })\r\n    .then((res) => {\r\n      NotificationManager.success(\r\n        res.data,\r\n        'Forgot Password Success',\r\n        3000,\r\n        null,\r\n        null,\r\n        ''\r\n      );\r\n      history.push('/user/login');\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n    })\r\n  };\r\n\r\n  const initialValues = { email };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.forgot-password\" />\r\n            </CardTitle>\r\n\r\n            <Formik initialValues={initialValues} onSubmit={onForgotPassword}>\r\n              {({ errors, touched }) => (\r\n                <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                  <FormGroup className=\"form-group has-float-label\">\r\n                    <Label>\r\n                      <IntlMessages id=\"user.email\" />\r\n                    </Label>\r\n                    <Field\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      validate={validateEmail}\r\n                    />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"invalid-feedback d-block\">\r\n                        {errors.email}\r\n                      </div>\r\n                    )}\r\n                  </FormGroup>\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/user/forgot-password\">\r\n                      <IntlMessages id=\"user.forgot-password-question\" />\r\n                    </NavLink>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? 'show-spinner' : ''\r\n                      }`}\r\n                      size=\"lg\"\r\n                    >\r\n                      <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\" />\r\n                        <span className=\"bounce2\" />\r\n                        <span className=\"bounce3\" />\r\n                      </span>\r\n                      <span className=\"label\">\r\n                        <IntlMessages id=\"user.reset-password-button\" />\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { forgotUserMail, loading, error } = authUser;\r\n  return { forgotUserMail, loading, error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  forgotPasswordAction: forgotPassword,\r\n})(ForgotPassword);\r\n"],"sourceRoot":""}
{"version":3,"sources":["constants/countries.js","views/user/register.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["countries","value","label","phoneRegExp","connect","authUser","user","loading","registerError","registerUserAction","registerUser","history","useState","email","password","confirmPassword","firstName","lastName","jobTitle","phoneNumber","companyName","country","role","useEffect","NotificationManager","warning","initialValues","className","xxs","md","to","id","onSubmit","values","validationSchema","Yup","shape","required","min","oneOf","matches","errors","touched","row","sm","type","name","render","props","field","form","hasError","defaultOption","key","options","map","i","keyIndex","selectOptions","color","size","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/user-register.85173a71.chunk.js","sourcesContent":["export const countries = [\r\n    {value: 'AF', label: 'Afghanistan'},\r\n    {value: 'AX', label: 'Aland Islands'},\r\n    {value: 'AL', label: 'Albania'},\r\n    {value: 'DZ', label: 'Algeria'},\r\n    {value: 'AS', label: 'American Samoa'},\r\n    {value: 'AD', label: 'Andorra'},\r\n    {value: 'AO', label: 'Angola'},\r\n    {value: 'AI', label: 'Anguilla'},\r\n    {value: 'AQ', label: 'Antarctica'},\r\n    {value: 'AG', label: 'Antigua And Barbuda'},\r\n    {value: 'AR', label: 'Argentina'},\r\n    {value: 'AM', label: 'Armenia'},\r\n    {value: 'AW', label: 'Aruba'},\r\n    {value: 'AU', label: 'Australia'},\r\n    {value: 'AT', label: 'Austria'},\r\n    {value: 'AZ', label: 'Azerbaijan'},\r\n    {value: 'BS', label: 'Bahamas'},\r\n    {value: 'BH', label: 'Bahrain'},\r\n    {value: 'BD', label: 'Bangladesh'},\r\n    {value: 'BB', label: 'Barbados'},\r\n    {value: 'BY', label: 'Belarus'},\r\n    {value: 'BE', label: 'Belgium'},\r\n    {value: 'BZ', label: 'Belize'},\r\n    {value: 'BJ', label: 'Benin'},\r\n    {value: 'BM', label: 'Bermuda'},\r\n    {value: 'BT', label: 'Bhutan'},\r\n    {value: 'BO', label: 'Bolivia'},\r\n    {value: 'BA', label: 'Bosnia And Herzegovina'},\r\n    {value: 'BW', label: 'Botswana'},\r\n    {value: 'BV', label: 'Bouvet Island'},\r\n    {value: 'BR', label: 'Brazil'},\r\n    {value: 'IO', label: 'British Indian Ocean Territory'},\r\n    {value: 'BN', label: 'Brunei Darussalam'},\r\n    {value: 'BG', label: 'Bulgaria'},\r\n    {value: 'BF', label: 'Burkina Faso'},\r\n    {value: 'BI', label: 'Burundi'},\r\n    {value: 'KH', label: 'Cambodia'},\r\n    {value: 'CM', label: 'Cameroon'},\r\n    {value: 'CA', label: 'Canada'},\r\n    {value: 'CV', label: 'Cape Verde'},\r\n    {value: 'KY', label: 'Cayman Islands'},\r\n    {value: 'CF', label: 'Central African Republic'},\r\n    {value: 'TD', label: 'Chad'},\r\n    {value: 'CL', label: 'Chile'},\r\n    {value: 'CN', label: 'China'},\r\n    {value: 'CX', label: 'Christmas Island'},\r\n    {value: 'CC', label: 'Cocos (Keeling) Islands'},\r\n    {value: 'CO', label: 'Colombia'},\r\n    {value: 'KM', label: 'Comoros'},\r\n    {value: 'CG', label: 'Congo'},\r\n    {value: 'CD', label: 'Congo, Democratic Republic'},\r\n    {value: 'CK', label: 'Cook Islands'},\r\n    {value: 'CR', label: 'Costa Rica'},\r\n    {value: 'CI', label: 'Cote D\\'Ivoire'},\r\n    {value: 'HR', label: 'Croatia'},\r\n    {value: 'CU', label: 'Cuba'},\r\n    {value: 'CY', label: 'Cyprus'},\r\n    {value: 'CZ', label: 'Czech Republic'},\r\n    {value: 'DK', label: 'Denmark'},\r\n    {value: 'DJ', label: 'Djibouti'},\r\n    {value: 'DM', label: 'Dominica'},\r\n    {value: 'DO', label: 'Dominican Republic'},\r\n    {value: 'EC', label: 'Ecuador'},\r\n    {value: 'EG', label: 'Egypt'},\r\n    {value: 'SV', label: 'El Salvador'},\r\n    {value: 'GQ', label: 'Equatorial Guinea'},\r\n    {value: 'ER', label: 'Eritrea'},\r\n    {value: 'EE', label: 'Estonia'},\r\n    {value: 'ET', label: 'Ethiopia'},\r\n    {value: 'FK', label: 'Falkland Islands (Malvinas)'},\r\n    {value: 'FO', label: 'Faroe Islands'},\r\n    {value: 'FJ', label: 'Fiji'},\r\n    {value: 'FI', label: 'Finland'},\r\n    {value: 'FR', label: 'France'},\r\n    {value: 'GF', label: 'French Guiana'},\r\n    {value: 'PF', label: 'French Polynesia'},\r\n    {value: 'TF', label: 'French Southern Territories'},\r\n    {value: 'GA', label: 'Gabon'},\r\n    {value: 'GM', label: 'Gambia'},\r\n    {value: 'GE', label: 'Georgia'},\r\n    {value: 'DE', label: 'Germany'},\r\n    {value: 'GH', label: 'Ghana'},\r\n    {value: 'GI', label: 'Gibraltar'},\r\n    {value: 'GR', label: 'Greece'},\r\n    {value: 'GL', label: 'Greenland'},\r\n    {value: 'GD', label: 'Grenada'},\r\n    {value: 'GP', label: 'Guadeloupe'},\r\n    {value: 'GU', label: 'Guam'},\r\n    {value: 'GT', label: 'Guatemala'},\r\n    {value: 'GG', label: 'Guernsey'},\r\n    {value: 'GN', label: 'Guinea'},\r\n    {value: 'GW', label: 'Guinea-Bissau'},\r\n    {value: 'GY', label: 'Guyana'},\r\n    {value: 'HT', label: 'Haiti'},\r\n    {value: 'HM', label: 'Heard Island & Mcdonald Islands'},\r\n    {value: 'VA', label: 'Holy See (Vatican City State)'},\r\n    {value: 'HN', label: 'Honduras'},\r\n    {value: 'HK', label: 'Hong Kong'},\r\n    {value: 'HU', label: 'Hungary'},\r\n    {value: 'IS', label: 'Iceland'},\r\n    {value: 'IN', label: 'India'},\r\n    {value: 'ID', label: 'Indonesia'},\r\n    {value: 'IR', label: 'Iran, Islamic Republic Of'},\r\n    {value: 'IQ', label: 'Iraq'},\r\n    {value: 'IE', label: 'Ireland'},\r\n    {value: 'IM', label: 'Isle Of Man'},\r\n    {value: 'IL', label: 'Israel'},\r\n    {value: 'IT', label: 'Italy'},\r\n    {value: 'JM', label: 'Jamaica'},\r\n    {value: 'JP', label: 'Japan'},\r\n    {value: 'JE', label: 'Jersey'},\r\n    {value: 'JO', label: 'Jordan'},\r\n    {value: 'KZ', label: 'Kazakhstan'},\r\n    {value: 'KE', label: 'Kenya'},\r\n    {value: 'KI', label: 'Kiribati'},\r\n    {value: 'KR', label: 'Korea'},\r\n    {value: 'KW', label: 'Kuwait'},\r\n    {value: 'KG', label: 'Kyrgyzstan'},\r\n    {value: 'LA', label: 'Lao People\\'s Democratic Republic'},\r\n    {value: 'LV', label: 'Latvia'},\r\n    {value: 'LB', label: 'Lebanon'},\r\n    {value: 'LS', label: 'Lesotho'},\r\n    {value: 'LR', label: 'Liberia'},\r\n    {value: 'LY', label: 'Libyan Arab Jamahiriya'},\r\n    {value: 'LI', label: 'Liechtenstein'},\r\n    {value: 'LT', label: 'Lithuania'},\r\n    {value: 'LU', label: 'Luxembourg'},\r\n    {value: 'MO', label: 'Macao'},\r\n    {value: 'MK', label: 'Macedonia'},\r\n    {value: 'MG', label: 'Madagascar'},\r\n    {value: 'MW', label: 'Malawi'},\r\n    {value: 'MY', label: 'Malaysia'},\r\n    {value: 'MV', label: 'Maldives'},\r\n    {value: 'ML', label: 'Mali'},\r\n    {value: 'MT', label: 'Malta'},\r\n    {value: 'MH', label: 'Marshall Islands'},\r\n    {value: 'MQ', label: 'Martinique'},\r\n    {value: 'MR', label: 'Mauritania'},\r\n    {value: 'MU', label: 'Mauritius'},\r\n    {value: 'YT', label: 'Mayotte'},\r\n    {value: 'MX', label: 'Mexico'},\r\n    {value: 'FM', label: 'Micronesia, Federated States Of'},\r\n    {value: 'MD', label: 'Moldova'},\r\n    {value: 'MC', label: 'Monaco'},\r\n    {value: 'MN', label: 'Mongolia'},\r\n    {value: 'ME', label: 'Montenegro'},\r\n    {value: 'MS', label: 'Montserrat'},\r\n    {value: 'MA', label: 'Morocco'},\r\n    {value: 'MZ', label: 'Mozambique'},\r\n    {value: 'MM', label: 'Myanmar'},\r\n    {value: 'NA', label: 'Namibia'},\r\n    {value: 'NR', label: 'Nauru'},\r\n    {value: 'NP', label: 'Nepal'},\r\n    {value: 'NL', label: 'Netherlands'},\r\n    {value: 'AN', label: 'Netherlands Antilles'},\r\n    {value: 'NC', label: 'New Caledonia'},\r\n    {value: 'NZ', label: 'New Zealand'},\r\n    {value: 'NI', label: 'Nicaragua'},\r\n    {value: 'NE', label: 'Niger'},\r\n    {value: 'NG', label: 'Nigeria'},\r\n    {value: 'NU', label: 'Niue'},\r\n    {value: 'NF', label: 'Norfolk Island'},\r\n    {value: 'MP', label: 'Northern Mariana Islands'},\r\n    {value: 'NO', label: 'Norway'},\r\n    {value: 'OM', label: 'Oman'},\r\n    {value: 'PK', label: 'Pakistan'},\r\n    {value: 'PW', label: 'Palau'},\r\n    {value: 'PS', label: 'Palestinian Territory, Occupied'},\r\n    {value: 'PA', label: 'Panama'},\r\n    {value: 'PG', label: 'Papua New Guinea'},\r\n    {value: 'PY', label: 'Paraguay'},\r\n    {value: 'PE', label: 'Peru'},\r\n    {value: 'PH', label: 'Philippines'},\r\n    {value: 'PN', label: 'Pitcairn'},\r\n    {value: 'PL', label: 'Poland'},\r\n    {value: 'PT', label: 'Portugal'},\r\n    {value: 'PR', label: 'Puerto Rico'},\r\n    {value: 'QA', label: 'Qatar'},\r\n    {value: 'RE', label: 'Reunion'},\r\n    {value: 'RO', label: 'Romania'},\r\n    {value: 'RU', label: 'Russian Federation'},\r\n    {value: 'RW', label: 'Rwanda'},\r\n    {value: 'BL', label: 'Saint Barthelemy'},\r\n    {value: 'SH', label: 'Saint Helena'},\r\n    {value: 'KN', label: 'Saint Kitts And Nevis'},\r\n    {value: 'LC', label: 'Saint Lucia'},\r\n    {value: 'MF', label: 'Saint Martin'},\r\n    {value: 'PM', label: 'Saint Pierre And Miquelon'},\r\n    {value: 'VC', label: 'Saint Vincent And Grenadines'},\r\n    {value: 'WS', label: 'Samoa'},\r\n    {value: 'SM', label: 'San Marino'},\r\n    {value: 'ST', label: 'Sao Tome And Principe'},\r\n    {value: 'SA', label: 'Saudi Arabia'},\r\n    {value: 'SN', label: 'Senegal'},\r\n    {value: 'RS', label: 'Serbia'},\r\n    {value: 'SC', label: 'Seychelles'},\r\n    {value: 'SL', label: 'Sierra Leone'},\r\n    {value: 'SG', label: 'Singapore'},\r\n    {value: 'SK', label: 'Slovakia'},\r\n    {value: 'SI', label: 'Slovenia'},\r\n    {value: 'SB', label: 'Solomon Islands'},\r\n    {value: 'SO', label: 'Somalia'},\r\n    {value: 'ZA', label: 'South Africa'},\r\n    {value: 'GS', label: 'South Georgia And Sandwich Isl.'},\r\n    {value: 'ES', label: 'Spain'},\r\n    {value: 'LK', label: 'Sri Lanka'},\r\n    {value: 'SD', label: 'Sudan'},\r\n    {value: 'SR', label: 'Suriname'},\r\n    {value: 'SJ', label: 'Svalbard And Jan Mayen'},\r\n    {value: 'SZ', label: 'Swaziland'},\r\n    {value: 'SE', label: 'Sweden'},\r\n    {value: 'CH', label: 'Switzerland'},\r\n    {value: 'SY', label: 'Syrian Arab Republic'},\r\n    {value: 'TW', label: 'Taiwan'},\r\n    {value: 'TJ', label: 'Tajikistan'},\r\n    {value: 'TZ', label: 'Tanzania'},\r\n    {value: 'TH', label: 'Thailand'},\r\n    {value: 'TL', label: 'Timor-Leste'},\r\n    {value: 'TG', label: 'Togo'},\r\n    {value: 'TK', label: 'Tokelau'},\r\n    {value: 'TO', label: 'Tonga'},\r\n    {value: 'TT', label: 'Trinidad And Tobago'},\r\n    {value: 'TN', label: 'Tunisia'},\r\n    {value: 'TR', label: 'Turkey'},\r\n    {value: 'TM', label: 'Turkmenistan'},\r\n    {value: 'TC', label: 'Turks And Caicos Islands'},\r\n    {value: 'TV', label: 'Tuvalu'},\r\n    {value: 'UG', label: 'Uganda'},\r\n    {value: 'UA', label: 'Ukraine'},\r\n    {value: 'AE', label: 'United Arab Emirates'},\r\n    {value: 'GB', label: 'United Kingdom'},\r\n    {value: 'US', label: 'United States'},\r\n    {value: 'UM', label: 'United States Outlying Islands'},\r\n    {value: 'UY', label: 'Uruguay'},\r\n    {value: 'UZ', label: 'Uzbekistan'},\r\n    {value: 'VU', label: 'Vanuatu'},\r\n    {value: 'VE', label: 'Venezuela'},\r\n    {value: 'VN', label: 'Viet Nam'},\r\n    {value: 'VG', label: 'Virgin Islands, British'},\r\n    {value: 'VI', label: 'Virgin Islands, U.S.'},\r\n    {value: 'WF', label: 'Wallis And Futuna'},\r\n    {value: 'EH', label: 'Western Sahara'},\r\n    {value: 'YE', label: 'Yemen'},\r\n    {value: 'ZM', label: 'Zambia'},\r\n    {value: 'ZW', label: 'Zimbabwe'}\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, CardTitle, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../redux/actions\";\r\n\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { countries } from \"../../constants/countries\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst Register = ({ history, loading, registerError, registerUserAction }) => {\r\n  const [email] = useState(\"\");\r\n  const [password] = useState(\"\");\r\n  const [confirmPassword] = useState(\"\");\r\n  const [firstName] = useState(\"\");\r\n  const [lastName] = useState(\"\");\r\n  const [jobTitle] = useState(\"\");\r\n  const [phoneNumber] = useState(\"\");\r\n  const [companyName] = useState(\"\");\r\n  const [country] = useState(\"\");\r\n  const [role] = useState(\"customer\");\r\n\r\n  useEffect(() => {\r\n    if (registerError)\r\n      NotificationManager.warning(registerError, \"Reigstration Error\", 3000);\r\n  }, [registerError]);\r\n\r\n  const onUserRegister = (values) => {\r\n    registerUserAction(values, history);\r\n  };\r\n\r\n  const initialValues = {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    confirmPassword,\r\n    password,\r\n    companyName,\r\n    jobTitle,\r\n    country,\r\n    role,\r\n    phoneNumber,\r\n  };\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \"></div>\r\n          <div className=\"form-side\">\r\n            <NavLink to=\"/\" className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.register\" />\r\n            </CardTitle>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={onUserRegister}\r\n              validationSchema={Yup.object().shape({\r\n                firstName: Yup.string().required(\"Full Name is required\"),\r\n                lastName: Yup.string().required(\"Last Name is required\"),\r\n                jobTitle: Yup.string().required(\"Job title is required\"),\r\n                companyName: Yup.string().required(\"Company name is required\"),\r\n                email: Yup.string()\r\n                  .email(\"Email is invalid\")\r\n                  .required(\"Email is required\"),\r\n                password: Yup.string()\r\n                  .min(6, \"Password must be at least 6 characters\")\r\n                  .required(\"Password is required\"),\r\n                confirmPassword: Yup.string()\r\n                  .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n                  .required(\"Confirm Password is required\"),\r\n                country: Yup.string().required(\"Address is required\"),\r\n                phoneNumber: Yup.string().matches(\r\n                  phoneRegExp,\r\n                  \"Phone number is not valid\"\r\n                ),\r\n              })}\r\n            >\r\n              {({ errors, touched }) => (\r\n                <Form>\r\n                  <FormGroup row>\r\n                    <Colxx sm={6}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages id=\"user.firstname\" />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                        />\r\n                        {errors.firstName && touched.firstName && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.firstName}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={6}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages id=\"user.lastname\" />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                        />\r\n                        {errors.lastName && touched.lastName && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.lastName}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages id=\"user.phone_number\" />\r\n                        </Label>\r\n                        <Field className=\"form-control\" name=\"phoneNumber\" />\r\n                        {errors.phoneNumber && touched.phoneNumber && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.phoneNumber}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages id=\"user.email\" />\r\n                        </Label>\r\n                        <Field className=\"form-control\" name=\"email\" />\r\n                        {errors.email && touched.email && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.email}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages\r\n                            id=\"user.password\"\r\n                          />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                        />\r\n                        {errors.password && touched.password && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.password}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages\r\n                            id=\"user.confirm-password\"\r\n                          />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"password\"\r\n                          name=\"confirmPassword\"\r\n                        />\r\n                        {errors.confirmPassword && touched.confirmPassword && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.confirmPassword}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                    <Colxx sm={6}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages\r\n                            id=\"user.companyname\"\r\n                          />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"companyName\"\r\n                        />\r\n                        {errors.companyName && touched.companyName && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.companyName}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                    <Colxx sm={6}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages\r\n                            id=\"user.job-title\"\r\n                          />\r\n                        </Label>\r\n                        <Field\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"jobTitle\"\r\n                        />\r\n                        {errors.jobTitle && touched.jobTitle && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.jobTitle}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                    <Colxx sm={12}>\r\n                      <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                        <Label>\r\n                          <IntlMessages\r\n                            id=\"user.country\"\r\n                          />\r\n                        </Label>\r\n                        <Field\r\n                          name=\"country\"\r\n                          render={(props) => {\r\n                            const { field } = props;\r\n                            const { errors, touched } = props.form;\r\n                            const hasError =\r\n                              errors[\"country\"] && touched[\"country\"]\r\n                                ? \"hasError\"\r\n                                : \"\";\r\n                            const defaultOption = (\r\n                              <option key=\"default\" value=\"Please Select\">\r\n                                Please Select\r\n                              </option>\r\n                            );\r\n                            const options = countries.map((i, keyIndex) => (\r\n                              <option key={keyIndex} value={i.value}>\r\n                                {\" \"}\r\n                                {i.label}{\" \"}\r\n                              </option>\r\n                            ));\r\n                            const selectOptions = [defaultOption, ...options];\r\n                            return (\r\n                              <select\r\n                                className=\"form-control\"\r\n                                value={field.value}\r\n                                {...field}\r\n                                id={hasError}\r\n                              >\r\n                                {selectOptions}\r\n                              </select>\r\n                            );\r\n                          }}\r\n                        />\r\n                        {errors.country && touched.country && (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            {errors.country}\r\n                          </div>\r\n                        )}\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                  </FormGroup>\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <NavLink to=\"/user/login\" className=\"font-weight-bold\">\r\n                      You have already an account? Sign in now.\r\n                    </NavLink>\r\n                    <Button color=\"primary\" className=\"btn-shadow\" size=\"lg\">\r\n                      <IntlMessages id=\"user.register-button\" />\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Card>\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { user, loading, registerError } = authUser;\r\n  return { user, loading, registerError };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  registerUserAction: registerUser,\r\n})(Register);\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}
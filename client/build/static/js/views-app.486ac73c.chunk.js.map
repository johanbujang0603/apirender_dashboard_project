{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","containers/navs/Footer.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","layout/AppLayout.js","views/app/index.js","components/common/CustomBootstrap.js","helpers/IntlMessages.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","color","right","id","to","Footer","xxs","sm","injectIntl","connect","menu","settings","authUser","containerClassnames","menuClickCount","selectedMenuHasSubItems","receiveAuthUser","locale","loginUser","user","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","logoutUserAction","logoutUser","changeLocaleAction","changeLocale","history","searchKeyword","setSearchKeyword","useState","location","onClick","e","_clickCount","_conClassnames","preventDefault","setTimeout","event","document","createEvent","initEvent","window","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","UncontrolledDropdown","DropdownToggle","caret","size","toUpperCase","DropdownMenu","localeOptions","map","l","DropdownItem","_locale","direction","getDirection","setDirection","reload","handleChangeLocale","key","name","href","role","src","first_name","last_name","alt","avatar","divider","push","data","icon","label","subs","Sidebar","Component","constructor","props","super","handleWindowResize","isTrusted","this","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","target","classList","contains","parentElement","setState","viewingParentMenu","toggle","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","windowWidth","innerWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","remove","oldliSub","selectedSublink","add","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","indexOf","componentDidUpdate","prevProps","pathname","scrollTo","componentDidMount","setProjectMenuItems","userId","_id","componentWillUnmount","render","options","suppressScrollX","wheelPropagation","Nav","vertical","item","NavItem","classnames","active","newWindow","rel","IntlMessages","data-flag","data-parent","sub","index","Collapse","isOpen","thirdSub","thirdIndex","Badge","pill","style","totalProjectsNumber","latestProjectMenus","project","project_name","withRouter","changeDefaultClassnames","mapActionToProps","receiveAuthUserAction","children","useEffect","Object","keys","Dashboard","React","lazy","Projects","Settings","Faq","Contact","Terms","Privacy","match","fallback","exact","from","url","path","Colxx","widths","Separator","withRef"],"mappings":"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","file":"static/js/views-app.486ac73c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"/app/dashboard\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.dashboard\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/projects/list\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-briefcase d-block\" />{' '}\r\n            <IntlMessages id=\"menu.project-list\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/tools\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-wrench d-block\" />{' '}\r\n            <IntlMessages id=\"menu.tools\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/support\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-question d-block\" />{' '}\r\n            <IntlMessages id=\"menu.support\" />\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"/app/settings\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-settings d-block\" />{' '}\r\n            <IntlMessages id=\"menu.settings\" />\r\n          </NavLink>\r\n\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">© APIRender.com Pty Ltd</p>\r\n            </Colxx>\r\n            <Colxx className=\"col-sm-6 d-none d-sm-flex justify-content-end\">\r\n              <p className=\"mb-0 text-muted text-sm\">All Prices are in Australian Dollars and currency can be converted at checkout.</p>\r\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={'/app/privacy'}>\r\n                    Privacy Policy\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={`/app/terms`}>\r\n                    Terms & Conditions\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  changeLocale,\r\n} from '../../redux/actions';\r\n\r\nimport {\r\n  searchPath,\r\n  localeOptions,\r\n} from '../../constants/defaultValues';\r\n\r\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\r\nimport TopnavEasyAccess from './Topnav.EasyAccess';\r\n\r\nimport { getDirection, setDirection } from '../../helpers/Utils';\r\n\r\nconst TopNav = ({\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  locale,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n  changeLocaleAction,\r\n  loginUser,\r\n}) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword('');\r\n  };\r\n\r\n  const handleChangeLocale = (_locale, direction) => {\r\n    changeLocaleAction(_locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const isInFullScreenFn = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('navbar') ||\r\n        e.target.classList.contains('simple-icon-magnifier'))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains('simple-icon-magnifier')) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains('search')\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector('.mobile-view');\r\n      if (input && input.classList) input.classList.remove('mobile-view');\r\n      removeEventsSearch();\r\n      setSearchKeyword('');\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const isFS = isInFullScreenFn();\r\n\r\n    const docElm = document.documentElement;\r\n    if (!isFS) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n    // setIsInFullScreen(!isFS);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction();\r\n    history.push('/user/login');\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        <div className=\"d-inline-block\">\r\n          <UncontrolledDropdown className=\"ml-2\">\r\n            <DropdownToggle\r\n              caret\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              className=\"language-button\"\r\n            >\r\n              <span className=\"name\">{locale.toUpperCase()}</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              {localeOptions.map((l) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\r\n                    key={l.id}\r\n                  >\r\n                    {l.name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n      <a className=\"navbar-logo\" href=\"/\">\r\n        <span className=\"logo d-none d-xs-block\" />\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </a>\r\n\r\n      <div className=\"navbar-right\">\r\n        {loginUser.role === 'customer' && (\r\n          <NavLink to={'/app/projects/new-project'} className=\"mr-5\">\r\n            <img src={'/assets/img/start_project.png'} />\r\n          </NavLink>\r\n        )}\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span className=\"name mr-1\">{loginUser.first_name}&nbsp;{loginUser.last_name}</span>\r\n              <span>\r\n                <img alt=\"avatar\" src={loginUser.avatar ? `${loginUser.avatar}` : '/assets/img/avatar.png'} width=\"40px\" height=\"40px\" />\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <DropdownItem>Dashboard</DropdownItem>\r\n              <DropdownItem>Projects</DropdownItem>\r\n              <DropdownItem>Tools</DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink\r\n                  to=\"/app/settings\"\r\n                >\r\n                  Settings\r\n                </NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings, authUser }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { receiveAuthUser } = authUser;\r\n  const { locale } = settings;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n    receiveAuthUser,\r\n    loginUser\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale\r\n  })(TopNav)\r\n);\r\n","const data = [\r\n  {\r\n    id: 'dashboard',\r\n    icon: 'simple-icon-home',\r\n    label: 'menu.dashboard',\r\n    to: '/app/dashboard',\r\n  },\r\n  {\r\n    id: 'projects',\r\n    icon: 'simple-icon-briefcase',\r\n    label: 'menu.projects',\r\n    to: '/app/projects',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-plus',\r\n        label: 'menu.new-project',\r\n        to: '/app/projects/new-project',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.project-list',\r\n        to: '/app/projects/list',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'tools',\r\n    icon: 'simple-icon-wrench',\r\n    label: 'menu.tools',\r\n    to: '/app/tools',\r\n  },\r\n  {\r\n    id: 'support',\r\n    icon: 'simple-icon-question',\r\n    label: 'menu.support',\r\n    to: '/app/support',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-question',\r\n        label: 'menu.faq',\r\n        to: '/app/support/faq',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.contact-us',\r\n        to: '/app/support/contact',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'settings',\r\n    icon: 'simple-icon-settings',\r\n    label: 'menu.settings',\r\n    to: '/app/settings',\r\n  },\r\n];\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse, Badge } from 'reactstrap';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setProjectMenuItems,\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/menu';\r\nimport { getUserId } from '../../helpers/Utils';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: '',\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter((x) => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes('menu-sub-hidden') &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes('menu-hidden') ||\r\n      currentClasses.includes('menu-mobile')\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      '.third-level-menu  a.active'\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            ),\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n    this.props.setProjectMenuItems({userId: this.props.loginUser._id, role: this.props.loginUser.role});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter((x) => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  menuItems.map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                menuItems.map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                  {\r\n                                    item.id=='projects' && sub.id==='projects-list' && (\r\n                                      <Badge pill\r\n                                        color=\"primary\"\r\n                                        className=\"position-absolute badge-top-right\"\r\n                                        style={{right: \"15px\"}}>\r\n                                      {this.props.totalProjectsNumber}\r\n                                      </Badge>\r\n                                    )\r\n                                  }\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                        {\r\n                          item.id==='projects' && this.props.latestProjectMenus.map((project, index) => {\r\n                            return (\r\n                              <NavItem key={project._id}>\r\n                                <NavLink className=\"d-flex align-items-center pr-2\" to={`/app/projects/details/${project._id}`}>\r\n                                  <i className=\"simple-icon-doc\" />{' '}\r\n                                  {project.project_name}\r\n                                </NavLink>\r\n                              </NavItem>\r\n                            )\r\n                          })\r\n                        }\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n  } = menu;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n    loginUser\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n    setProjectMenuItems,\r\n  })(Sidebar)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TopNav from '../containers/navs/Topnav';\r\nimport Sidebar from '../containers/navs/Sidebar';\r\nimport Footer from '../containers/navs/Footer';\r\n\r\nimport {\r\n  receiveAuthUser,\r\n} from '../redux/actions';\r\n\r\nconst AppLayout = ({ containerClassnames, children, history, receiveAuthUserAction, loginUser }) => {\r\n\r\n  useEffect(() => {\r\n    receiveAuthUserAction(history);\r\n  }, []);\r\n\r\n  return Object.keys(loginUser).length == 0 ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const { containerClassnames } = menu;\r\n  const loginUser = authUser.user;\r\n  return { containerClassnames, loginUser};\r\n};\r\nconst mapActionToProps = {\r\n  receiveAuthUserAction: receiveAuthUser\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../layout/AppLayout';\r\n\r\nconst Dashboard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard\" */ './dashboard')\r\n);\r\nconst Projects = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './projects')\r\n);\r\nconst Settings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"settings\" */ './settings')\r\n);\r\nconst Faq = React.lazy(() =>\r\n  import(/* webpackChunkName: \"faq\" */ './faq')\r\n);\r\nconst Contact = React.lazy(() =>\r\n  import(/* webpackChunkName: \"faq\" */ './contact')\r\n);\r\nconst Terms = React.lazy(() =>\r\n  import(/* webpackChunkName: \"terms and condition\" */ \"./terms\")\r\n);\r\nconst Privacy = React.lazy(() =>\r\n  import(/* webpackChunkName: \"privacy policy\" */ \"./privacy\")\r\n);\r\nconst App = ({ match }) => {\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/dashboard`}\r\n            />\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <Settings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/support/faq`}\r\n              render={(props) => <Faq {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              render={(props) => <Dashboard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/projects`}\r\n              render={(props) => <Projects {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/terms`}\r\n              render={(props) => <Terms {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/privacy`}\r\n              render={(props) => <Privacy {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/support/contact`}\r\n              render={(props) => <Contact {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/reactstrap/es/PaginationItem.js","../node_modules/reactstrap/es/PaginationLink.js","../node_modules/reactstrap/es/Pagination.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardTitle","CardBody","module","exports","require","actions","init","defaultColumn","Cell","value","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","Set","size","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","b","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","sort","getTime","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","from","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","active","children","node","disabled","PaginationItem","previous","first","last","PaginationLink","defaultAriaLabel","defaultCaret","ariaLabel","href","listClassName","listTag","Pagination","_classNames","ListTag","label","listClasses"],"mappings":"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","file":"static/js/36.32d85666.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return [...new Set(values).values()]\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregateValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance({ plugins }) {\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;"],"sourceRoot":""}
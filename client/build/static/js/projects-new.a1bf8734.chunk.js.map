{"version":3,"sources":["components/common/ApplicationMenu.js","containers/projects/Pagination.js","components/services/SelectionOption.js","components/services/MultipleSelectOption.js","components/services/SubOption.js","components/services/ThumbOption.js","components/services/ServiceOption.js","containers/services/ServiceWidget.js","containers/services/PutService.js","containers/services/ServiceSideMenu.js","views/app/projects/add_service.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js","containers/projects/ProjectCategoryWidget.js","containers/projects/CreateProject.js","views/app/projects/new_project.js","containers/stripe/StripePaymentForm.js","config/keys.js","containers/paypal/PaypalPaymentForm.js","containers/projects/OrderSummary.js","views/app/projects/payment.js","containers/projects/ProjectDetailsHeading.js","containers/projects/ListServiceListing.js","views/app/projects/project_details.js","containers/projects/ProjectListHeading.js","containers/projects/ListProjectsListing.js","views/app/projects/project_list.js"],"names":["ApplicationMenu","children","containerRef","useRef","useState","isOpen","setIsOpen","handleDocumentClick","e","container","current","contains","target","useEffect","forEach","event","document","addEventListener","removeEventListener","ref","className","onClick","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","map","key","React","memo","parent","option","addServices","currentItems","depth","Row","sm","lg","md","Card","style","alignItems","justifyContent","FormGroup","check","Label","CustomInput","type","name","value","id","label","onChange","item","price","quantity","radioValue","totalPrice","parseFloat","checked","find","InputGroup","InputGroupAddon","addonType","Input","readOnly","desc","isChecked","setChecked","o","s","rootItem","subOption","addSubOption","rootQuantity","parentQuantity","parentOption","serviceQty","setServiceQty","lightboxOpen","setLightboxOpen","curIndex","setCurIndex","length","checkSiblingQty","searchResult","unit","Button","color","required","decrement","increament","example_images","to","location","example_link","href","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","addedItems","thumbQty","setThumbQty","xl","CardImg","top","alt","src","img","width","CardBody","padding","CardText","addSelectionService","serviceQuantity","checkOption","setCheckOption","is_collapse","preventDefault","first_price","locaiont","items","index","itemsType","thumb_items","ThumbOption","Collapse","addToCartAction","params","useParams","history","useHistory","serviceModal","setSerivceModal","orderItems","setOrderItems","widgetPrice","setWidgetPrice","orders","obj","undefined","reduce","a","b","checkServices","splice","sum","Badge","pill","fontSize","IntlMessages","CardSubtitle","Modal","size","toggle","ModalBody","right","cursor","zIndex","margin","objectFit","height","newItem","options","suppressScrollX","wheelPropagation","extraType","is_free","toFixed","qty","formData","is_paid","JSON","stringify","total_price","project","status","axios","post","then","res","data","success","addItemsToCart","connect","injectIntl","intl","allOrders","services","category","service","match","subTotalPrice","order","o_index","isLoaded","setIsLoaded","addedOrders","setAddedOrders","setProject","newItems","existService","parse","newOrders","Object","keys","fetchData","tempItems","sort","tempOrders","filtered","filter","el","postData","NotificationManager","catch","err","console","log","response","warning","saveServices","newAddedOrders","BottomNavigation","onClickPrev","prevLabel","onClickNext","nextLabel","render","next","previous","step","steps","indexOf","TopNavigation","disableNav","topNavClick","getClassName","stepItem","isDone","go","hideTopNav","itemClick","isSelected","onCheckItem","classnames","active","includes","loginUser","authUser","user","setProjectMenuItems","bottomNavHidden","setBottomNavHidden","loading","setLoading","projectID","setProjectID","valid","errorMsg","valProjectName","valProjectDescription","stepFields","setStepFields","onInputProjectDetails","fieldName","newStepFields","messages","projectCategories","for","placeholder","Spinner","goToNext","stepIndex","field","user_id","_id","project_name","project_description","userId","role","alert","saveProject","goToPrev","checkObject","_CardForm","state","errorMessage","handleChange","error","setState","message","handleSubmit","evt","props","printingService","deliveryAddr","deliveryOption","handleResult","setIsLoading","stripe","createToken","Form","onSubmit","this","bind","base","fontFamily","letterSpacing","invalid","isLoading","totalAmount","Component","CardForm","injectStripe","StripePaymentForm","delivery","isPrintingService","apiKey","token","userEmail","localStorage","getItem","email","deliveryAddress","PaypalPaymentForm","amount","onSuccess","details","payer","given_name","orderId","orderID","projectId","currency","clientId","deliveryOptions","OrderSummary","setDeliveryOption","handleUpdateService","changeDeliveryAddr","setOrders","setTotalPrice","updateDeliveryOption","orderTotal","some","unshift","handleRemoveOrder","serviceOrders","handleAddressChange","Table","borderless","handleChangeRadio","row","exact","setServices","setDelivery","streetName","streetNumber","unitNumber","suburb","zipCode","country","setDeliveryAddr","trim","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","orderOptions","pageSizes","heading","displayOptionsIsOpen","setDisplayOptionsIsOpen","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","column","onKeyPress","responsive","product","i_key","getOptionNumbers","statusColor","ProjectDetails","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","setTotalItemCount","setTotalPage","search","setSearch","get","totalItem","x","toLowerCase","cnt","deleteProject","k_index","unique_id","total_amount","moment","date","format","setItems","confirmAlert","title","buttons"],"mappings":"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","file":"static/js/projects-new.a1bf8734.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst SelectionOption = ({\r\n  parent,\r\n  option,\r\n  addServices,\r\n  currentItems,\r\n  depth\r\n}) => {\r\n  const handleChangeRadio = () => {\r\n    let item = {\r\n      name: option.name,\r\n      price: option.price,\r\n      value: parent.value,\r\n      quantity: 1,\r\n      depth: depth,\r\n      type: \"RADIO\",\r\n      radioValue: option.value,\r\n      totalPrice: parseFloat(option.price),\r\n    };\r\n    if (depth === 3)\r\n      item.parent = parent.name;\r\n    addServices(item);\r\n  }\r\n  return (\r\n    <>\r\n      <Row className=\"mb-2\">\r\n        <Colxx sm=\"12\" lg=\"12\" md=\"12\">\r\n          <Card className=\"pt-3 pb-3 pl-3 pr-3\">\r\n            <div\r\n              className=\"d-flex flex-grow-1 min-width-zero\"\r\n              style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n            >\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <CustomInput\r\n                    type=\"radio\"\r\n                    name={`RADIO_${option.value}`}\r\n                    id={`RADIO_${option.value}`}\r\n                    label={option.name}\r\n                    value={option.value}\r\n                    onChange={handleChangeRadio}\r\n                    checked={currentItems.find(e => e.radioValue === option.value) ? true : false}\r\n                  />\r\n                </Label>\r\n              </FormGroup>\r\n              <div className=\"option-quantity-input\">\r\n                {\r\n                  option.price !== 0 && (\r\n                    <InputGroup>\r\n                      <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\r\n                  <Input value={option.price === 0 ? 'Free' : option.price} readOnly/>\r\n                    </InputGroup>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n            {\r\n              option.desc && (\r\n                <p className=\"text-left text-muted text-small mb-0 ml-4\">{option.desc}</p>\r\n              )\r\n            }\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(SelectionOption);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst MultipleSelectOption = ({\r\n  parent,\r\n  option,\r\n  addServices,\r\n  currentItems,\r\n  depth\r\n}) => {\r\n  const [isChecked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(false);\r\n    // check item if there is same service\r\n    let searchItem = currentItems.find((o, i) => {\r\n      if (o.value === option.value) {\r\n        setChecked(true);\r\n        return true; // stop searching\r\n      }\r\n    });\r\n  });\r\n\r\n  const handleChangeCheckBox = (s) => {\r\n    let item = {\r\n      name: option.name,\r\n      price: option.price,\r\n      value: option.value,\r\n      quantity: 1,\r\n      depth: depth,\r\n      type: \"CHECKBOX\",\r\n      totalPrice: parseFloat(option.price),\r\n    };\r\n    if (depth === 3)\r\n      item.parent = parent.name;\r\n    addServices(item);\r\n    setChecked(!isChecked);\r\n  }\r\n  return (\r\n    <>\r\n      <Row className=\"mb-2\">\r\n        <Colxx sm=\"12\" lg=\"12\" md=\"12\">\r\n          <Card className=\"pt-3 pb-3 pl-3 pr-3\">\r\n            <div\r\n              className=\"d-flex flex-grow-1 min-width-zero\"\r\n              style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n            >\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <CustomInput\r\n                    className=\"text-left\"\r\n                    type=\"checkbox\"\r\n                    name={`CHECKBOX_${option.value}`}\r\n                    id={`CHECKBOX_${option.value}`}\r\n                    label={option.name}\r\n                    value={option.value}\r\n                    onChange={handleChangeCheckBox}\r\n                    checked={isChecked}\r\n                  />\r\n                </Label>\r\n              </FormGroup>\r\n              <div className=\"option-quantity-input\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\r\n                  <Input value={option.price === 0 ? 'Free' : option.price} readOnly/>\r\n                </InputGroup>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(MultipleSelectOption);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Input,\r\n} from 'reactstrap';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SubOption = ({ \r\n  rootItem,\r\n  subOption,\r\n  addSubOption,\r\n  currentItems,\r\n  rootQuantity,\r\n  parentQuantity,\r\n  parentOption\r\n}) => {\r\n    const [serviceQty, setServiceQty] = useState(0);\r\n    const [lightboxOpen, setLightboxOpen] = useState(false);\r\n    const [curIndex, setCurIndex] = useState(0);\r\n\r\n    useEffect(() => {  \r\n      if (currentItems.length == 0)\r\n          setServiceQty(0);\r\n        // check item if there is same service\r\n      let searchItem = currentItems.find((o, i) => {\r\n          if (o.value === subOption.value) {\r\n              setServiceQty(o.quantity);\r\n              return true; // stop searching\r\n          }\r\n      });\r\n    }, [currentItems]);\r\n\r\n    const checkSiblingQty = () => {\r\n      let searchResult = false;\r\n      currentItems.find((o, i) => {\r\n        if (o.parent === parentOption.name && o.depth === 3 && o.quantity >= 1) {\r\n          searchResult = true;\r\n          return true;\r\n        }\r\n      });\r\n      return searchResult;\r\n    }\r\n\r\n    const increament = () => {\r\n      if (subOption.required === \"AT_LEAST_ONE\" && !checkSiblingQty()) return;\r\n      if (rootItem.price && rootQuantity == 0) {\r\n        setServiceQty(0);\r\n        return;\r\n      }\r\n      if (parentOption.price && serviceQty + 1 > parentQuantity)\r\n        return;\r\n      let quantity = serviceQty + 1;\r\n      let item = {\r\n          name: subOption.name,\r\n          price: subOption.price,\r\n          value: subOption.value,\r\n          quantity: quantity,\r\n          depth: 3,\r\n          parent: parentOption.name,\r\n          totalPrice: parseFloat(subOption.price) * quantity,\r\n      }\r\n      addSubOption(item);\r\n      setServiceQty(quantity);\r\n    }\r\n    const decrement = () => {\r\n      if (subOption.required === \"AT_LEAST_ONE\" && !checkSiblingQty()) return;\r\n      if (rootItem.price && rootQuantity == 0) {\r\n        setServiceQty(0);\r\n        return;\r\n      }\r\n      let quantity = serviceQty;\r\n      quantity = quantity > 0 ? quantity - 1 : 0;\r\n      let item = {\r\n          name: subOption.name,\r\n          price: subOption.price,\r\n          value: subOption.value,\r\n          quantity: quantity,\r\n          depth: 3,\r\n          parent: parentOption.name,\r\n          totalPrice: parseFloat(subOption.price) * quantity,\r\n      }\r\n      addSubOption(item);\r\n      setServiceQty(quantity);\r\n    }\r\n\r\n  return (\r\n    <li className=\"mt-1 mb-1\">\r\n        <div className=\"d-flex\" style={{\"alignItems\": \"center\", \"justifyContent\": \"space-between\"}}>\r\n        <span className=\"mb-0 text-default color-theme-1\">{subOption.name}\r\n          <span className=\"ml-2 text-muted\">\r\n          {\r\n            subOption.price > 0 && (\r\n              <>\r\n              {subOption.price} / {subOption.unit ? subOption.unit : 'photo'}\r\n              </>\r\n            )\r\n          }\r\n          </span>\r\n        </span>\r\n        <div className=\"option-quantity-input\">                \r\n            <Button color=\"primary\" className=\"default\" onClick={() => decrement()} >\r\n            &mdash;\r\n            </Button>\r\n            <Input type=\"text\" value={serviceQty} readOnly/>\r\n            <Button color=\"primary\" className=\"default\" onClick={() => increament()} >\r\n            &#xff0b;\r\n            </Button>\r\n        </div>\r\n        </div>\r\n        {\r\n          subOption.example_images && (\r\n            <NavLink \r\n                to={'#'}\r\n                className=\"ml-1 text-small text-danger\"\r\n                onClick={() => {\r\n                    setLightboxOpen(true);\r\n                    setCurIndex(0);\r\n                }}\r\n                location={{}}\r\n            >\r\n              &nbsp;(View Example)&nbsp;\r\n            </NavLink>\r\n          )\r\n        }\r\n        {\r\n          subOption.example_link && (\r\n            <a \r\n              target='_blank'\r\n              href={subOption.example_link}\r\n              className=\"ml-1 text-small text-danger\" >\r\n              &nbsp;(View Example)&nbsp;\r\n           </a>\r\n          )\r\n        }\r\n        {lightboxOpen && (\r\n            <Lightbox\r\n                mainSrc={subOption.example_images[curIndex]}\r\n                nextSrc={subOption.example_images[(curIndex + 1) % subOption.example_images.length]}\r\n                prevSrc={subOption.example_images[(curIndex + subOption.example_images.length - 1) % subOption.example_images.length]}\r\n                onCloseRequest={() => setLightboxOpen(false)}\r\n                onMovePrevRequest={() =>\r\n                    setCurIndex((curIndex + subOption.example_images.length - 1) % subOption.example_images.length)\r\n                }\r\n                onMoveNextRequest={() =>\r\n                    setCurIndex((curIndex + 1) % subOption.example_images.length)\r\n                }\r\n            />\r\n        )}\r\n    </li>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(SubOption);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  Button,\r\n  Input\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst ThumbSelection = ({ subOption, parentOption, addedItems, addSubOption }) => {\r\n  const [thumbQty, setThumbQty] = useState(0);\r\n  useEffect(() => {  \r\n    if (addedItems.length === 0)\r\n        setThumbQty(0);\r\n      // check item if there is same service\r\n    addedItems.find((o, i) => {\r\n        if (o.value === subOption.value) {\r\n            setThumbQty(o.quantity);\r\n            return true; // stop searching\r\n        }\r\n    });\r\n  }, [addedItems]);\r\n  const increament = () => {\r\n    let quantity = thumbQty + 1;\r\n    let item = {\r\n        name: subOption.name,\r\n        price: subOption.price,\r\n        value: subOption.value,\r\n        quantity: quantity,\r\n        depth: 3,\r\n        parent: parentOption.name,\r\n        totalPrice: parseFloat(subOption.price) * quantity,\r\n    }\r\n    addSubOption(item);\r\n    setThumbQty(quantity);\r\n  }\r\n  const decrement = () => {\r\n    let quantity = thumbQty;\r\n    quantity = quantity > 0 ? quantity - 1 : 0;\r\n    let item = {\r\n        name: subOption.name,\r\n        price: subOption.price,\r\n        value: subOption.value,\r\n        quantity: quantity,\r\n        depth: 3,\r\n        parent: parentOption.name,\r\n        totalPrice: parseFloat(subOption.price) * quantity,\r\n    }\r\n    addSubOption(item);\r\n    setThumbQty(quantity);\r\n  }\r\n\r\n  return (\r\n    <Colxx sm={6} lg={6} xl={6} className=\"mb-3\">\r\n        <Card>\r\n        <p className=\"text-small text-center p-2 mb-0 font-weight-light\">{subOption.name}</p>\r\n        <div className=\"position-relative text-center\">\r\n            <NavLink to=\"#\" className=\"w-sm-100\">\r\n              <CardImg top alt={subOption.name} src={subOption.img} style={{width: '100%'}} />\r\n            </NavLink>\r\n        </div>\r\n        <CardBody className=\"text-center\" style={{padding: '0.5rem'}}>\r\n          <label className=\"\">Select number of floors</label>\r\n          <div className=\"d-flex items-center justify-content-center\">\r\n            <div className=\"option-quantity-input mb-1\">                \r\n                <Button color=\"primary\" className=\"default\" onClick={() => decrement()} >\r\n                &mdash;\r\n                </Button>\r\n                <Input type=\"text\" value={thumbQty} readOnly/>\r\n                <Button color=\"primary\" className=\"default\" onClick={() => increament()} >\r\n                &#xff0b;\r\n                </Button>\r\n            </div>\r\n            </div>\r\n            <CardText className=\"text-small mb-0 font-weight-light\">\r\n              <span className=\"text-primary\">${subOption.price}&nbsp;/&nbsp;{subOption.unit}</span>\r\n            </CardText>\r\n        </CardBody>\r\n        </Card>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default React.memo(ThumbSelection);","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card, Button, Collapse, Input } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\n\r\nimport SelectionOption from \"./SelectionOption\";\r\nimport MultipleSelectOption from \"./MultipleSelectOption\";\r\nimport SubOption from \"./SubOption\";\r\nimport ThumbOption from \"./ThumbOption\";\r\n\r\nconst ServiceOption = ({\r\n  rootItem,\r\n  option,\r\n  addServices,\r\n  addSelectionService,\r\n  currentItems,\r\n  serviceQuantity,\r\n}) => {\r\n  const [checkOption, setCheckOption] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [serviceQty, setServiceQty] = useState(0);\r\n  const [lightboxOpen, setLightboxOpen] = useState(false);\r\n  const [curIndex, setCurIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (currentItems.length == 0) setServiceQty(0);\r\n    // check item if there is same service\r\n    let searchItem = currentItems.find((o, i) => {\r\n      if (o.value === option.value) {\r\n        if (o.type === \"YES_OR_NO\") {\r\n          setCheckOption(true);\r\n        }\r\n        else {\r\n          setServiceQty(o.quantity);\r\n        }\r\n        return true; // stop searching\r\n      }\r\n    });\r\n  });\r\n\r\n  const increament = () => {\r\n    if (rootItem.price && serviceQuantity === 0)\r\n      return;\r\n    let quantity = serviceQty + 1;\r\n    const totalPrice = option.first_price ? option.first_price + (parseFloat(option.price) * (quantity - 1)) : parseFloat(option.price) * quantity;\r\n    let item = {\r\n      name: option.name,\r\n      price: option.price,\r\n      value: option.value,\r\n      quantity: quantity,\r\n      depth: 2,\r\n      totalPrice: totalPrice,\r\n    };\r\n    addServices(item);\r\n    setServiceQty(quantity);\r\n  };\r\n\r\n  const decrement = () => {\r\n    if (rootItem.price && serviceQuantity === 0)\r\n      return;\r\n    let quantity = serviceQty;\r\n    quantity = quantity > 0 ? quantity - 1 : 0;\r\n    const totalPrice = option.first_price ? option.first_price + (parseFloat(option.price) * (quantity - 1)) : parseFloat(option.price) * quantity;\r\n    let item = {\r\n      name: option.name,\r\n      price: option.price,\r\n      value: option.value,\r\n      quantity: quantity,\r\n      depth: 2,\r\n      totalPrice: totalPrice,\r\n    };\r\n    addServices(item);\r\n    setServiceQty(quantity);\r\n  };\r\n\r\n  const handleCheckOption = (check) => {\r\n    let item = {\r\n      name: option.name,\r\n      value: option.value,\r\n      price: option.price,\r\n      quantity: 1,\r\n      type: \"YES_OR_NO\",\r\n      checked: check,\r\n      depth: 2,\r\n      totalPrice: parseFloat(option.price)\r\n    }\r\n    addServices(item);\r\n    setCheckOption(check);\r\n  }\r\n  return (\r\n    <>\r\n      <Row className=\"mb-2\">\r\n        <Colxx sm=\"12\" lg=\"12\" md=\"12\">\r\n          <Card className=\"pt-3 pb-3 pl-3 pr-3\">\r\n            <div\r\n              className=\"d-flex flex-grow-1 min-width-zero\"\r\n              style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\r\n            >\r\n              <a\r\n                href=\"#!\"\r\n                onClick={(e) => option.is_collapse !== false ? setIsOpen(!isOpen) : e.preventDefault() }\r\n                className={`${option.is_collapse === false ? 'text-black' : 'color-theme-1'}`}\r\n              >\r\n                { option.is_collapse !== false && ( <i className=\"simple-icon-arrow-down align-middle mr-2\" /> ) }\r\n                { option.name }\r\n                { option.price && !option.first_price && ( <span className=\"mb-0 ml-2 text-muted\">${option.price} / {option.unit ? option.unit : 'photo'}</span> ) }\r\n              </a>\r\n              { option.price && (\r\n                <>\r\n                  {\r\n                    option.type === \"YES_OR_NO\" ? (\r\n                      <div className=\"option-quantity-input\">\r\n                        <Switch\r\n                          className=\"custom-switch custom-switch-primary\"\r\n                          checked={checkOption}\r\n                          onChange={handleCheckOption}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"option-quantity-input\">\r\n                        <Button color=\"primary\" className=\"default\" onClick={() => decrement()}>\r\n                          &mdash;\r\n                        </Button>\r\n                        <Input type=\"text\" value={serviceQty} readOnly />\r\n                        <Button color=\"primary\" className=\"default\" onClick={() => increament()}>\r\n                          &#xff0b;\r\n                        </Button>\r\n                      </div>\r\n                    )\r\n                  }\r\n                </>\r\n              )}\r\n            </div>\r\n            {\r\n              option.is_collapse === false ? (\r\n                <div className=\"text-left mt-2\">\r\n                  <p className=\"text-muted text-small\">\r\n                    {option.desc}\r\n                    {option.example_images && (\r\n                      <NavLink\r\n                        className=\"text-danger\"\r\n                        to={\"#!\"}\r\n                        onClick={() => {\r\n                          setLightboxOpen(true);\r\n                          setCurIndex(0);\r\n                        }}\r\n                        locaiont={{}}\r\n                      >\r\n                        &nbsp;(View Example)&nbsp;\r\n                      </NavLink>\r\n                    )}\r\n                    {\r\n                      option.example_link && (\r\n                        <a \r\n                          target='_blank'\r\n                          href={option.example_link}\r\n                          className=\"ml-1 text-small text-danger\" >\r\n                          &nbsp;(View Example)&nbsp;\r\n                      </a>\r\n                      )\r\n                    }\r\n                  </p>\r\n                  <ul className=\"list-unstyled\">\r\n                    {option.items &&\r\n                      option.items.map((item, index) => {\r\n                        if (option.itemsType === \"SELECT_ONE\") {\r\n                          return (\r\n                            <SelectionOption\r\n                              key={index}\r\n                              parent={option}\r\n                              option={item}\r\n                              addServices={addServices}\r\n                              currentItems={currentItems}\r\n                              depth={3}\r\n                            /> \r\n                          )\r\n                        }\r\n                        else if (option.itemsType === \"SELECT_MULTIPLE\") {\r\n                          return (\r\n                            <MultipleSelectOption\r\n                              key={index}\r\n                              parent={option}\r\n                              option={item}\r\n                              addServices={addServices}\r\n                              currentItems={currentItems}\r\n                              depth={3}\r\n                            />\r\n                          )\r\n                        }\r\n                        else {\r\n                          return (\r\n                            <SubOption\r\n                              key={index}\r\n                              rootItem={rootItem}\r\n                              subOption={item}\r\n                              addSubOption={addServices}\r\n                              currentItems={currentItems}\r\n                              parentOption={option}\r\n                              parentQuantity={serviceQty}\r\n                              rootQuantity={serviceQuantity}\r\n                            />\r\n                          )\r\n                        }\r\n                      })}\r\n                  </ul>\r\n                  {option.thumb_items &&\r\n                    <Row>\r\n                    {\r\n                      option.thumb_items.map((item, index) => {\r\n                        return (\r\n                          <ThumbOption\r\n                            key={index}\r\n                            subOption={item}\r\n                            addSubOption={addServices}\r\n                            addedItems={currentItems}\r\n                            parentOption={option}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n                    </Row>\r\n                  }\r\n                </div>\r\n              ) : (\r\n                <Collapse isOpen={isOpen}>\r\n                  <div className=\"text-left mt-2\">\r\n                    <p className=\"text-muted text-small\">\r\n                      {option.desc}\r\n                      {option.example_images && (\r\n                        <NavLink\r\n                          className=\"text-danger\"\r\n                          to={\"#!\"}\r\n                          onClick={() => {\r\n                            setLightboxOpen(true);\r\n                            setCurIndex(0);\r\n                          }}\r\n                          locaiont={{}}\r\n                        >\r\n                          &nbsp;(View Example)&nbsp;\r\n                        </NavLink>\r\n                      )}\r\n                      {\r\n                        option.example_link && (\r\n                          <a \r\n                            target='_blank'\r\n                            href={option.example_link}\r\n                            className=\"ml-1 text-small text-danger\" >\r\n                            &nbsp;(View Example)&nbsp;\r\n                        </a>\r\n                        )\r\n                      }\r\n                    </p>\r\n                    <ul className=\"list-unstyled\">\r\n                      {option.items &&\r\n                        option.items.map((item, index) => {\r\n                          if (option.itemsType === \"SELECT_ONE\") {\r\n                            return (\r\n                              <SelectionOption\r\n                                key={index}\r\n                                parent={option}\r\n                                option={item}\r\n                                addServices={addServices}\r\n                                currentItems={currentItems}\r\n                                depth={3}\r\n                              /> \r\n                            )\r\n                          }\r\n                          else if (option.itemsType === \"SELECT_MULTIPLE\") {\r\n                            return (\r\n                              <MultipleSelectOption\r\n                                key={index}\r\n                                parent={option}\r\n                                option={item}\r\n                                addServices={addServices}\r\n                                currentItems={currentItems}\r\n                                depth={3}\r\n                              />\r\n                            )\r\n                          }\r\n                          else {\r\n                            return (\r\n                              <SubOption\r\n                                key={index}\r\n                                rootItem={rootItem}\r\n                                subOption={item}\r\n                                addSubOption={addServices}\r\n                                currentItems={currentItems}\r\n                                parentOption={option}\r\n                                parentQuantity={serviceQty}\r\n                                rootQuantity={serviceQuantity}\r\n                              />\r\n                            )\r\n                          }\r\n                        })}\r\n                    </ul>\r\n                    {option.thumb_items &&\r\n                      <Row>\r\n                      {\r\n                        option.thumb_items.map((item, index) => {\r\n                          return (\r\n                            <ThumbOption\r\n                              key={index}\r\n                              subOption={item}\r\n                              addSubOption={addServices}\r\n                              addedItems={currentItems}\r\n                              parentOption={option}\r\n                            />\r\n                          );\r\n                        })\r\n                      }\r\n                      </Row>\r\n                    }\r\n                  </div>\r\n                </Collapse>\r\n              )\r\n            }\r\n            <Collapse isOpen={isOpen}>\r\n              \r\n            </Collapse>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n      {lightboxOpen && (\r\n        <Lightbox\r\n          mainSrc={option.example_images[curIndex]}\r\n          nextSrc={\r\n            option.example_images[(curIndex + 1) % option.example_images.length]\r\n          }\r\n          prevSrc={\r\n            option.example_images[\r\n              (curIndex + option.example_images.length - 1) %\r\n                option.example_images.length\r\n            ]\r\n          }\r\n          onCloseRequest={() => setLightboxOpen(false)}\r\n          onMovePrevRequest={() =>\r\n            setCurIndex(\r\n              (curIndex + option.example_images.length - 1) %\r\n                option.example_images.length\r\n            )\r\n          }\r\n          onMoveNextRequest={() =>\r\n            setCurIndex((curIndex + 1) % option.example_images.length)\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ServiceOption);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  Modal,\r\n  ModalBody,\r\n  Button,\r\n  Input,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { NavLink, useParams, useHistory } from \"react-router-dom\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport axios from 'axios';\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nimport { options } from \"../../constants/projectValues\";\r\nimport ServiceOption from \"../../components/services/ServiceOption\";\r\nimport SelectionOption from \"../../components/services/SelectionOption\";\r\nimport MultipleSelectOption from \"../../components/services/MultipleSelectOption\";\r\n\r\nconst ServiceWidget = ({ item, index, addToCartAction, currentItems }) => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [serviceModal, setSerivceModal] = useState(false);\r\n  const [serviceQty, setServiceQty] = useState(0);\r\n  const [orderItems, setOrderItems] = useState([]);\r\n  const [widgetPrice, setWidgetPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const orders = [];\r\n    orders.push(...currentItems.orders);\r\n    let obj = orders.find((o) => o.value === item.value);\r\n    if (obj !== undefined) setServiceQty(obj.quantity);\r\n    setWidgetPrice(orders.reduce((a, b) => a + (b[\"totalPrice\"] || 0), 0));\r\n    setOrderItems(orders);\r\n  }, []);\r\n\r\n  const increament = () => {\r\n    let quantity = serviceQty + 1;\r\n    if (quantity === 0) {\r\n      setOrderItems([]);\r\n      setWidgetPrice(0);\r\n      return;\r\n    }\r\n    let newItem = {\r\n      name: item.name,\r\n      price: item.price,\r\n      value: item.value,\r\n      quantity: quantity,\r\n      depth: 1,\r\n      totalPrice: parseFloat(item.price) * quantity,\r\n    };\r\n    setServiceQty(quantity);\r\n    checkServices(newItem);\r\n  };\r\n  const decrement = () => {\r\n    let quantity = serviceQty;\r\n    quantity = quantity > 0 ? quantity - 1 : 0;\r\n    if (quantity === 0) {\r\n      setOrderItems([]);\r\n      setWidgetPrice(0);\r\n      setServiceQty(0);\r\n      return;\r\n    }\r\n    let newItem = {\r\n      name: item.name,\r\n      price: item.price,\r\n      value: item.value,\r\n      quantity: quantity,\r\n      depth: 1,\r\n      totalPrice: parseFloat(item.price) * quantity,\r\n    };\r\n    setServiceQty(quantity);\r\n    checkServices(newItem);\r\n  };\r\n\r\n  const checkServices = (item) => {\r\n    let items = [];\r\n    orderItems.map((o) => items.push(o));\r\n    // check item if there is same service\r\n    let searchItem = items.find((o, i) => {\r\n      if (o.value === item.value) {\r\n        // if there is same sub service\r\n        if (item.type === \"YES_OR_NO\") {\r\n          items.splice(i, 1);\r\n        }\r\n        else if (item.type === \"RADIO\") {\r\n          items[i] = item;\r\n        }\r\n        else if (item.type === \"CHECKBOX\") {\r\n          items.splice(i, 1);\r\n        }\r\n        else {\r\n          if (item.quantity !== 0)\r\n            // if quantity is not zero, then replace with new item\r\n            items[i] = item;\r\n          // if quantity is zero, remove item from array\r\n          else items.splice(i, 1);\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n    if (searchItem === undefined && item.quantity !== 0)\r\n    {\r\n      items.push(item); // then push item into array\r\n    }\r\n    const sum = items.reduce((a, b) => a + (b[\"totalPrice\"] || 0), 0);\r\n    setWidgetPrice(sum);\r\n    setOrderItems(items);\r\n  };\r\n\r\n  const addSelectionService = (item) => {\r\n    let items = orderItems;\r\n    let searchItem = items.find((o, i) => {\r\n      if (o.value === item.value) {\r\n        items.splice(i, 1);\r\n        return true;\r\n      }\r\n    });\r\n    if (searchItem === undefined) items.push(item);\r\n    const sum = items.reduce((a, b) => a + (b[\"totalPrice\"] || 0), 0);\r\n    setWidgetPrice(sum);\r\n    setOrderItems(items);\r\n  };\r\n\r\n  const addItemsToCart = (e) => {\r\n    if (item.is_free === true) {\r\n      let qty = 0;\r\n      orderItems.map((item) => {\r\n        qty += item.quantity\r\n      });\r\n      const formData = {\r\n        is_paid: true,\r\n        name: item.name,\r\n        value: item.value,\r\n        orders: JSON.stringify(orderItems),\r\n        total_price: 0,\r\n        quantity: qty,\r\n        project: params.id,\r\n        status: \"WAITING FOR FILES\"\r\n      }\r\n      axios.post(\"/api/services/add-free-service\", formData)\r\n        .then((res) => {\r\n          if (res.data.success === true) {\r\n            history.push(`/app/projects/details/${params.id}`);\r\n          }\r\n        })\r\n    }\r\n    else addToCartAction(orderItems, index);\r\n    setSerivceModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Colxx sm=\"6\" lg=\"4\" xl=\"4\" className=\"mb-3\">\r\n        <Card onClick={() => setSerivceModal(!serviceModal)}>\r\n          <div className=\"position-relative\">\r\n            <NavLink to=\"#\">\r\n              <CardImg top alt={item.name} src={item.img} />\r\n            </NavLink>\r\n            {currentItems.orders.length !== 0 && (\r\n              <Badge\r\n                color=\"primary\"\r\n                pill\r\n                className=\"position-absolute badge-top-left\"\r\n                style={{ fontSize: \"90%\" }}\r\n              >\r\n                {item.price ? (\r\n                  <>\r\n                    {currentItems.orders.find((o) => o.value === item.value) !==\r\n                    undefined\r\n                      ? currentItems.orders.find((o) => o.value === item.value)\r\n                          .quantity\r\n                      : 0}{\" \"}\r\n                    images -{\" \"}\r\n                    {currentItems.orders.reduce(\r\n                      (a, b) => a + (b[\"quantity\"] || 0),\r\n                      0\r\n                    ) -\r\n                      (currentItems.orders.find(\r\n                        (o) => o.value === item.value\r\n                      ) !== undefined\r\n                        ? currentItems.orders.find(\r\n                            (o) => o.value === item.value\r\n                          ).quantity\r\n                        : 0)}{\" \"}\r\n                    <IntlMessages id=\"projects.options\" />- $\r\n                    {currentItems.orders.reduce(\r\n                      (a, b) => a + (b[\"totalPrice\"] || 0),\r\n                      0\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {currentItems.orders.reduce(\r\n                      (a, b) => a + (b[\"quantity\"] || 0),\r\n                      0\r\n                    )}{\" \"}\r\n                    - images - $\r\n                    {currentItems.orders.reduce(\r\n                      (a, b) => a + (b[\"totalPrice\"] || 0),\r\n                      0\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Badge>\r\n            )}\r\n          </div>\r\n          <CardBody>\r\n            <Row>\r\n              <Colxx xxs=\"12\">\r\n                <CardSubtitle className=\"text-center text-one\">\r\n                  {item.name}\r\n                </CardSubtitle>\r\n              </Colxx>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Colxx>\r\n      <Modal\r\n        isOpen={serviceModal}\r\n        size=\"xl\"\r\n        toggle={() => setSerivceModal(!serviceModal)}\r\n      >\r\n        <ModalBody className=\"no-padding\">\r\n          <span\r\n            onClick={() => setSerivceModal(false)}\r\n            className=\"text-large position-absolute\"\r\n            style={{ right: \"10px\", top: 0, cursor: \"pointer\", zIndex: 1002 }}\r\n          >\r\n            ×\r\n          </span>\r\n          <Row style={{ margin: 0 }}>\r\n            <Colxx sm=\"12\" lg=\"6\" md=\"12\" className=\"no-padding\">\r\n              <img\r\n                src={item.img}\r\n                className=\"img-fluid\"\r\n                style={{ objectFit: \"cover\", height: \"100%\" }}\r\n              ></img>\r\n            </Colxx>\r\n            <Colxx sm=\"12\" lg=\"6\" md=\"12\" className=\"no-padding\">\r\n              <div style={{ padding: \"2rem\" }}>\r\n                <div className=\"text-center\">\r\n                  <h5 className=\"text-primary font-weight-semibold color-theme-2 mb-4\">\r\n                    {item.name}\r\n                  </h5>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p>{item.desc && item.desc}</p>\r\n                  {item.price && (\r\n                    <>\r\n                      <p className=\"text-primary text-one\">\r\n                        ${item.price} / {item.unit ? item.unit : 'photo'}\r\n                      </p>\r\n                      <div className=\"quantity-input mb-5\">\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          className=\"default\"\r\n                          onClick={() => decrement()}\r\n                        >\r\n                          &mdash;\r\n                        </Button>\r\n                        <Input type=\"text\" value={serviceQty} readOnly />\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          className=\"default\"\r\n                          onClick={() => increament()}\r\n                        >\r\n                          &#xff0b;\r\n                        </Button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  <PerfectScrollbar\r\n                    options={{ suppressScrollX: true, wheelPropagation: false }}\r\n                  >\r\n                    <div\r\n                      className=\"pl-3 pt-3 pb-4 pr-3\"\r\n                      style={{ height: \"300px\" }}\r\n                    >\r\n                      {options[item.value] &&\r\n                        options[item.value].map((option, index) => {\r\n                          if (option.extraType === \"ALONE_SELECT\") {\r\n                            return (\r\n                              <MultipleSelectOption\r\n                                key={index}\r\n                                rootItem={item}\r\n                                option={option}\r\n                                addServices={checkServices}\r\n                                currentItems={orderItems}\r\n                                depth={2}\r\n                              />\r\n                            )\r\n                          }\r\n                          if (item.itemsType === \"SELECT_ONE\") {\r\n                            return (\r\n                              <SelectionOption\r\n                                key={index}\r\n                                parent={item}\r\n                                option={option}\r\n                                addServices={checkServices}\r\n                                currentItems={orderItems}\r\n                                depth={2}\r\n                              />\r\n                            )\r\n                          }\r\n                          else if (item.itemsType === \"SELECT_MULTIPLE\") {\r\n                            return (\r\n                              <MultipleSelectOption\r\n                                key={index}\r\n                                rootItem={item}\r\n                                option={option}\r\n                                addServices={checkServices}\r\n                                currentItems={orderItems}\r\n                                depth={2}\r\n                              />\r\n                            )\r\n                          }\r\n                          else {\r\n                            return (\r\n                              <ServiceOption\r\n                                key={index}\r\n                                rootItem={item}\r\n                                option={option}\r\n                                addServices={checkServices}\r\n                                addSelectionService={addSelectionService}\r\n                                serviceQuantity={serviceQty}\r\n                                currentItems={orderItems}\r\n                              />\r\n                            )\r\n                          }\r\n                        })}\r\n                    </div>\r\n                  </PerfectScrollbar>\r\n                </div>\r\n                <hr className=\"my-4\"></hr>\r\n                <div className=\"footer\">\r\n                  <span className=\"text-price text-large text-semi-muted\">\r\n                    { item.is_free !== true && (\r\n                      `$${parseFloat(widgetPrice).toFixed(2)}`\r\n                    )}\r\n                  </span>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"float-right\"\r\n                    onClick={(e) => addItemsToCart(e)}\r\n                  >\r\n                    { item.is_free === true ? \"Submit Quote Request\" : <IntlMessages id=\"projects.add-to-cart\" /> }\r\n                    \r\n                  </Button>{\" \"}\r\n                </div>\r\n              </div>\r\n            </Colxx>\r\n          </Row>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ServiceWidget);\r\n","/* eslint-disable no-param-reassign */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row } from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport ServiceWidget from \"./ServiceWidget\";\r\nimport { services } from \"../../constants/projectValues\";\r\n\r\nconst PutService = ({ intl, allOrders, addItemsToCart, project }) => {\r\n  // const { messages } = intl;\r\n  return (\r\n    <>\r\n      <Row>\r\n        {services[project.category].map((service, index) => {\r\n          return (\r\n            <ServiceWidget\r\n              item={service}\r\n              key={index}\r\n              index={index}\r\n              addToCartAction={addItemsToCart}\r\n              currentItems={allOrders[index]}\r\n            />\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, {})(injectIntl(React.memo(PutService)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport ApplicationMenu from '../../components/common/ApplicationMenu';\r\n\r\nconst ServiceSideMenu = ({\r\n  addedItems,\r\n  match,\r\n  history\r\n}) => {\r\n\r\n  let totalPrice = 0;\r\n\r\n  return (\r\n    <ApplicationMenu>\r\n      <PerfectScrollbar\r\n        options={{ suppressScrollX: true, wheelPropagation: false }}\r\n      >\r\n        <div className=\"p-4\">\r\n          <p className=\"text-default font-weight-semibold text-one\">\r\n            <IntlMessages id=\"projects.order-summary\" />\r\n          </p>\r\n          <ul className=\"list-unstyled mb-2\">\r\n            {\r\n              addedItems.length !== 0 && addedItems.map((item, index) => {\r\n                let subTotalPrice = 0;\r\n                if (item.orders.length !== 0) {\r\n                return (\r\n                  <li className=\"added-cart-item nav-item\" key={index}>\r\n                    {\r\n                      item.orders.length !== 0 && item.orders.map((order, o_index) => {\r\n                        subTotalPrice += parseFloat(order.totalPrice);\r\n                        totalPrice += parseFloat(order.totalPrice);\r\n                      })\r\n                    }\r\n                    <span className=\"color-theme-1 font-weight-medium\">{item.orders.length !==0 && item.name}</span>\r\n                    <span className=\"float-right\">${subTotalPrice}</span>\r\n                  </li>\r\n                )\r\n                }\r\n              })\r\n            }\r\n          </ul>\r\n          {\r\n            totalPrice!==0 && (\r\n              <>\r\n                <p className=\"text-center mt-5\">\r\n                  <NavLink\r\n                    to={`/app/projects/payment/${match.params.id}`}\r\n                    className=\"default mb-2 btn btn-danger\"\r\n                  >\r\n                    <IntlMessages id=\"projects.pay\" /> - AU${totalPrice.toFixed(2)}\r\n                  </NavLink>{' '}\r\n                </p>\r\n                <p>\r\n                  <img className=\"w-100\" src=\"/assets/img/stripe_secure.png\">\r\n                  </img>\r\n                </p>\r\n                <p>\r\n                  <img className=\"w-100\" src=\"/assets/img/powered_by_paypal.png\"></img>\r\n                </p>\r\n              </>\r\n          )}\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </ApplicationMenu>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n})(ServiceSideMenu);\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row } from \"reactstrap\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport PutService from \"../../../containers/services/PutService\";\r\nimport ServiceSideMenu from \"../../../containers/services/ServiceSideMenu\";\r\nimport { services } from \"../../../constants/projectValues\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport NotificationManager from \"../../../components/common/react-notifications/NotificationManager\";\r\n\r\nconst AddService = ({ intl, match, history }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [addedOrders, setAddedOrders] = useState([]);\r\n  const [orderItems, setOrderItems] = useState([]);\r\n  const [project, setProject] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      axios\r\n        .post(`/api/projects/get-info?_id=${match.params.id}`)\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          setProject(data.project);\r\n          let newItems = [];\r\n          services[data.project.category].map((service) => {\r\n            let item = {\r\n              name: service.name,\r\n              value: service.value,\r\n              orders: [],\r\n            };\r\n            let existService = data.services.find(\r\n              (o) => o.value === service.value\r\n            );\r\n            if (existService != undefined) {\r\n              item.orders = JSON.parse(existService.orders);\r\n            }\r\n            newItems.push(item);\r\n          });\r\n\r\n          const newOrders = Object.keys(newItems).map(function (i) {\r\n            return newItems[i];\r\n          });\r\n          setOrderItems(newOrders);\r\n          setAddedOrders(newItems);\r\n          setIsLoaded(true);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const saveServices = (addedItems) => {\r\n    let filtered = addedItems.filter(function (el) {\r\n      return el.orders.length !== 0;\r\n    });\r\n    let postData = {\r\n      id: match.params.id,\r\n      services: JSON.stringify(filtered),\r\n    };\r\n    axios\r\n      .post(`/api/services/add`, postData)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        NotificationManager.success(\r\n          \"The service has been added to your order.\",\r\n          \"Thank you!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        NotificationManager.warning(\r\n          \"Somthing went wrong. Please try again.\",\r\n          \"Error!\",\r\n          3000,\r\n          null,\r\n          null,\r\n          \"\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const addItemsToCart = (items, index) => {\r\n    let tempItems = [];\r\n    tempItems.push(...items);\r\n    let newItems = addedOrders;\r\n    newItems[index].orders = tempItems;\r\n    newItems[index].orders.sort((a, b) => (a.depth > b.depth ? 1 : -1));\r\n\r\n    let tempOrders = Object.keys(newItems).map(function (i) {\r\n      return newItems[i];\r\n    });\r\n\r\n    let newOrders = [];\r\n    newOrders.push(...tempOrders);\r\n    setOrderItems(newOrders);\r\n    saveServices(newItems);\r\n    let newAddedOrders = [];\r\n    newAddedOrders.push(...newItems);\r\n    setAddedOrders(newAddedOrders);\r\n  };\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <Row className=\"app-row\">\r\n        <Colxx xxs=\"12\">\r\n          <h1>\r\n            <IntlMessages id=\"menu.add-service\" />\r\n          </h1>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row className=\"app-row\">\r\n        <Colxx sm=\"12\" md=\"12\" className=\"mb-4\">\r\n          {addedOrders.length != 0 && (\r\n            <PutService\r\n              match={match}\r\n              allOrders={addedOrders}\r\n              project={project}\r\n              addItemsToCart={addItemsToCart}\r\n            />\r\n          )}\r\n        </Colxx>\r\n      </Row>\r\n      <ServiceSideMenu\r\n        addedItems={orderItems}\r\n        match={match}\r\n        history={history}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(AddService);\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst BottomNavigation = ({\r\n  className,\r\n  onClickPrev,\r\n  prevLabel,\r\n  onClickNext,\r\n  nextLabel,\r\n}) => {\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps }) => (\r\n        <div className={`wizard-buttons ${className}`}>\r\n          <Button\r\n            color=\"primary\"\r\n            className={`mr-1 ${steps.indexOf(step) <= 0 ? 'disabled' : ''}`}\r\n            onClick={() => {\r\n              onClickPrev(previous, steps, step);\r\n            }}\r\n          >\r\n            {prevLabel}\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            className={\r\n              steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\r\n            }\r\n            onClick={() => {\r\n              onClickNext(next, steps, step);\r\n            }}\r\n          >\r\n            {nextLabel}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default BottomNavigation;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\nimport React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\r\n  const getClassName = (steps, step, index, stepItem) => {\r\n    if (steps.indexOf(step) === index) {\r\n      return 'step-doing';\r\n    }\r\n    if (steps.indexOf(step) > index || stepItem.isDone) {\r\n      stepItem.isDone = true;\r\n      return 'step-done';\r\n    }\r\n    return 'step';\r\n  };\r\n\r\n  const itemClick = (stepItem, push) => {\r\n    if (disableNav) {\r\n      return;\r\n    }\r\n    topNavClick(stepItem, push);\r\n  };\r\n\r\n  return (\r\n    <WithWizard\r\n      render={({ next, previous, step, steps, go, push }) => (\r\n        <ul\r\n          className={`nav nav-tabs ${className}${\r\n            disableNav ? ' disabled' : ''\r\n          }`}\r\n        >\r\n          {steps.map((stepItem, index) => {\r\n            if (!stepItem.hideTopNav) {\r\n              return (\r\n                <li\r\n                  key={`topNavStep_${index}`}\r\n                  className={`nav-item ${getClassName(\r\n                    steps,\r\n                    step,\r\n                    index,\r\n                    stepItem\r\n                  )}`}\r\n                >\r\n                  <NavLink\r\n                    to=\"#\"\r\n                    location={{}}\r\n                    className=\"nav-link\"\r\n                    onClick={() => itemClick(stepItem, push)}\r\n                  >\r\n                    <span>{stepItem.name}</span>\r\n                    <small>{stepItem.desc}</small>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            }\r\n            return <span key={`topNavStep_${index}`} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst ProjectCategoryWidget = ({ category, isSelected, onCheckItem, step }) => {\r\n  return (\r\n    <Colxx sm={6} lg={4} xl={4} className=\"mb-3\">\r\n        <Card\r\n            onClick={(event) => onCheckItem(event, category.value, step)}\r\n            className={classnames({\r\n              active: isSelected === category.value ? true : false,\r\n            })}\r\n        >\r\n        <div className=\"position-relative text-center\">\r\n            <NavLink to=\"#\" className=\"w-40 w-sm-100\">\r\n              <CardImg top alt={category.desc} src={category.img} style={{width: '40%'}} />\r\n            </NavLink>\r\n        </div>\r\n        <CardBody className=\"d-flex align-items-center justify-content-center\">\r\n            <CustomInput\r\n            className=\"item-check mb-0 mr-1\"\r\n            type=\"checkbox\"\r\n            onChange={() => {}}\r\n            checked={ isSelected.includes(category.value) ? true : false }\r\n            id={`check_${category.id}`}\r\n            label=\"\"\r\n            />\r\n            <CardText className=\"text-default text-one mb-0 font-weight-light\">\r\n            {category.desc}\r\n            </CardText>\r\n        </CardBody>\r\n        </Card>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProjectCategoryWidget);","/* eslint-disable no-param-reassign */\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Wizard, Steps, Step } from \"react-albus\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport BottomNavigation from \"../../components/wizard/BottomNavigation\";\r\nimport TopNavigation from \"../../components/wizard/TopNavigation\";\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport ProjectCategoryWidget from \"./ProjectCategoryWidget\";\r\nimport { projectCategories } from \"../../constants/projectValues\";\r\nimport { setProjectMenuItems } from \"../../redux/actions\";\r\n\r\nconst CreateProject = ({ intl, setProjectMenuItems, loginUser }) => {\r\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [projectID, setProjectID] = useState(null);\r\n  const [stepFields, setStepFields] = useState([\r\n    {\r\n      valid: false,\r\n      name: \"projectCategory\",\r\n      value: \"\",\r\n      errorMsg: \"Please select project category\",\r\n    },\r\n    {\r\n      valid: false,\r\n      name: \"projectDetail\",\r\n      valProjectName: \"\",\r\n      valProjectDescription: \"\",\r\n      errorMsg: \"Please fill all fields out\",\r\n    },\r\n  ]);\r\n\r\n  const saveProject = () => {\r\n    setLoading(true);\r\n    const item = {\r\n      user_id: loginUser._id,\r\n      category: stepFields[0].value,\r\n      project_name: stepFields[1].valProjectName,\r\n      project_description: stepFields[1].valProjectDescription,\r\n      is_paid: false,\r\n      status: \"DRAFT\",\r\n    };\r\n\r\n    axios.post(\"/api/projects/create\", item).then((res) => {\r\n      setProjectMenuItems({userId: loginUser._id, role: loginUser.role});\r\n      setProjectID(res.data._id);\r\n      setLoading(false);\r\n    })\r\n    .catch((err) => {\r\n      alert(err);\r\n    });\r\n  };\r\n\r\n  const onClickNext = (goToNext, steps, step) => {\r\n    if (steps.length - 1 <= steps.indexOf(step)) {\r\n      return;\r\n    }\r\n    const stepIndex = steps.indexOf(step);\r\n    const field = stepFields[stepIndex];\r\n    if (!field.valid) {\r\n      NotificationManager.warning(\r\n        field.errorMsg,\r\n        \"Validation Error\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      return;\r\n    }\r\n    goToNext();\r\n    step.isDone = true;\r\n    if (steps.length - 2 <= steps.indexOf(step)) {\r\n      setBottomNavHidden(true);\r\n      saveProject();\r\n    }\r\n  };\r\n\r\n  const onClickPrev = (goToPrev, steps, step) => {\r\n    if (steps.indexOf(step) <= 0) {\r\n      return;\r\n    }\r\n    goToPrev();\r\n  };\r\n\r\n  const onInputProjectDetails = (event) => {\r\n    const value = event.target.value;\r\n    const fieldName = event.target.name;\r\n\r\n    const newStepFields = [...stepFields];\r\n    if (fieldName == \"projectDescription\")\r\n      newStepFields[1].valProjectDescription = value;\r\n    else {\r\n      if (value != null) newStepFields[1].valid = true;\r\n      else newStepFields[1].valid = false;\r\n      newStepFields[1].valProjectName = value;\r\n    }\r\n    setStepFields(newStepFields);\r\n  };\r\n\r\n  const onCheckItem = (event, value, step) => {\r\n    const newStepFields = [...stepFields];\r\n    newStepFields[step].value = value;\r\n    newStepFields[step].valid = true;\r\n    setStepFields(newStepFields);\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"wizard wizard-default\">\r\n        <Wizard>\r\n          <TopNavigation className=\"justify-content-center\" disableNav />\r\n          <Steps>\r\n            <Step\r\n              id=\"step1\"\r\n              name={messages[\"wizard.step-name-1\"]}\r\n              desc={messages[\"projects.project-step-1\"]}\r\n            >\r\n              <div className=\"wizard-basic-step mt-5\">\r\n                <Row>\r\n                  {projectCategories.map((category) => {\r\n                    return (\r\n                      <ProjectCategoryWidget\r\n                        category={category}\r\n                        isSelected={stepFields[0].value}\r\n                        onCheckItem={onCheckItem}\r\n                        step={0}\r\n                        key={category.id}\r\n                      />\r\n                    );\r\n                  })}\r\n                </Row>\r\n              </div>\r\n            </Step>\r\n            <Step\r\n              id=\"step2\"\r\n              name={messages[\"wizard.step-name-2\"]}\r\n              desc={messages[\"projects.project-step-2\"]}\r\n            >\r\n              <div className=\"wizard-basic-step mt-5\">\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">\r\n                    <IntlMessages id=\"projects.project-name\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"projectName\"\r\n                    id=\"projectName\"\r\n                    value={stepFields[1].valProjectName}\r\n                    placeholder={messages[\"projects.project-name-placeholder\"]}\r\n                    onChange={(e) => onInputProjectDetails(e)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">\r\n                    <IntlMessages id=\"projects.project-name\" />\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"projectDescription\"\r\n                    id=\"projectDescription\"\r\n                    value={stepFields[1].valProjectDescription}\r\n                    placeholder={messages[\"projects.project-desc-placeholder\"]}\r\n                    onChange={(e) => onInputProjectDetails(e)}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Step>\r\n            <Step id=\"step3\" hideTopNav>\r\n              <div className=\"wizard-basic-step text-center pt-3\">\r\n                {loading || projectID == null ? (\r\n                  <div>\r\n                    <Spinner color=\"primary\" className=\"mb-1\" />\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.async\" />\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <h2 className=\"mb-2\">\r\n                      <IntlMessages id=\"wizard.content-thanks\" />\r\n                    </h2>\r\n                    <p>\r\n                      <IntlMessages id=\"wizard.projects.created\" />\r\n                    </p>\r\n                    <NavLink\r\n                      to={`/app/projects/add-service/${projectID}`}\r\n                      className=\"btn btn-primary list-item-heading mb-0 truncate w-xs-100  mb-2\"\r\n                    >\r\n                      <span className=\"align-middle d-inline-block\">\r\n                        <IntlMessages id=\"wizard.project.go-service\" />\r\n                      </span>\r\n                    </NavLink>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Step>\r\n          </Steps>\r\n          <BottomNavigation\r\n            onClickNext={onClickNext}\r\n            onClickPrev={onClickPrev}\r\n            className={`justify-content-center ${\r\n              bottomNavHidden && \"invisible\"\r\n            } mt-4`}\r\n            prevLabel={messages[\"wizard.prev\"]}\r\n            nextLabel={messages[\"wizard.next\"]}\r\n          />\r\n        </Wizard>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const loginUser = authUser.user;\r\n  return {\r\n    loginUser\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setProjectMenuItems,\r\n})(injectIntl(React.memo(CreateProject)));\r\n","import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\nimport CreateProject from '../../../containers/projects/CreateProject';\r\n\r\nconst NewProject = ({ intl, match }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>\r\n            <IntlMessages id=\"menu.new-project\" />\r\n          </h1>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"12\" className=\"mb-4\">\r\n          <CreateProject />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(NewProject);\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  CardElement,\r\n  injectStripe,\r\n  StripeProvider,\r\n  Elements,\r\n} from \"react-stripe-elements\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Card, CardBody, FormGroup, Label, Button, Form } from \"reactstrap\";\r\n\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { STRIPE_API_KEY } from \"../../config/keys\";\r\n\r\nconst checkObject = (obj) => {\r\n  for (const key in obj) {\r\n    if (obj[key] === null && key !== 'unitNumber')\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// You can customize your Elements to give it the look and feel of your site.\r\nconst createOptions = () => {\r\n  return {\r\n    style: {\r\n      base: {\r\n        fontSize: \"16px\",\r\n        color: \"#424770\",\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        letterSpacing: \"0.025em\",\r\n        \"::placeholder\": {\r\n          color: \"#aab7c4\",\r\n        },\r\n      },\r\n      invalid: {\r\n        color: \"#c23d4b\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nclass _CardForm extends Component {\r\n  state = {\r\n    errorMessage: \"\",\r\n  };\r\n\r\n  handleChange = ({ error }) => {\r\n    if (error) {\r\n      this.setState({ errorMessage: error.message });\r\n    } else {\r\n      this.setState({ errorMessage: \"\" });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.props.printingService === true && !checkObject(this.props.deliveryAddr)) {\r\n      NotificationManager.warning(\r\n        \"Please fill delivery address.\",\r\n        \"Error\",\r\n        3000,\r\n        null,\r\n        null,\r\n        \"\"\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      this.props.printingService === true &&\r\n      this.props.deliveryOption === null\r\n    ) {\r\n      this.props.handleResult();\r\n    } else {\r\n      this.props.setIsLoading(true);\r\n      if (this.props.stripe) {\r\n        this.props.stripe.createToken().then(this.props.handleResult);\r\n      } else {\r\n        console.log(\"Stripe.js hasn't loaded yet.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"mb-5\">\r\n        <CardBody>\r\n          <Form onSubmit={this.handleSubmit.bind(this)}>\r\n            <FormGroup>\r\n              <Label className=\"font-weight-bold mb-3 text-primary\">\r\n                Pay with Credit Card\r\n              </Label>\r\n              <CardElement\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                {...createOptions()}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"error text-danger\" role=\"alert\">\r\n              {this.state.errorMessage}\r\n            </div>\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              className={`btn-shadow w-100 mb-5 mt-3 btn-multiple-state ${\r\n                this.props.isLoading ? \"show-spinner\" : \"\"\r\n              }`}\r\n              size=\"lg\"\r\n            >\r\n              <span className=\"spinner d-inline-block\">\r\n                <span className=\"bounce1\" />\r\n                <span className=\"bounce2\" />\r\n                <span className=\"bounce3\" />\r\n              </span>\r\n              <span className=\"label\">PAY - $ {this.props.totalAmount}</span>\r\n            </Button>\r\n            <p className=\"w-100 text-center\">\r\n              <img className=\"w-50\" src=\"/assets/img/stripe_secure.png\"></img>\r\n            </p>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst CardForm = injectStripe(_CardForm);\r\n\r\nconst StripePaymentForm = ({\r\n  match,\r\n  totalAmount,\r\n  history,\r\n  delivery,\r\n  isPrintingService,\r\n  deliveryAddr\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const handleResult = (data) => {\r\n    if (isPrintingService === true && delivery === null) {\r\n      NotificationManager.warning(\"Please select one delivery option.\", \"Error\", 3000);\r\n      return;\r\n    }\r\n    if (data.error) {\r\n      NotificationManager.warning(data.error.message, \"Error\", 3000);\r\n      return;\r\n    }\r\n    const postData = {\r\n      token: data.token,\r\n      projectID: match.params.id,\r\n      userEmail: JSON.parse(localStorage.getItem(\"current_user\")).email,\r\n      deliveryOption: delivery,\r\n      deliveryAddress: deliveryAddr\r\n    };\r\n    axios.post(`/api/payments/charge`, postData).then((res) => {\r\n      setIsLoading(false);\r\n      history.push(`/thank-you/payment/${match.params.id}`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StripeProvider apiKey={STRIPE_API_KEY}>\r\n      <Elements>\r\n        <CardForm\r\n          handleResult={handleResult}\r\n          totalAmount={totalAmount}\r\n          isLoading={isLoading}\r\n          setIsLoading={setIsLoading}\r\n          printingService={isPrintingService}\r\n          deliveryOption={delivery}\r\n          deliveryAddr={deliveryAddr}\r\n        />\r\n      </Elements>\r\n    </StripeProvider>\r\n  );\r\n};\r\n\r\nexport default StripePaymentForm;\r\n","export const STRIPE_API_KEY = \"pk_test_Om0uxijJBMMoO04Jc4JFKLoA00bt0BlIDh\";\r\nexport const PAYPAL_CLIENT_ID = \"Aa4mA8Iu7vmZRjug25Pg8Dn1JsxmrzCaYrQcPxucBxQfFROsKfnJPRxwIwJrZOdMM9-Gk4QfIskqIslP\";\r\n  ","import React, {Component, useState} from 'react';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Form,\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {PAYPAL_CLIENT_ID} from '../../config/keys';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\n\r\nconst PaypalPaymentForm = ({match, totalAmount, history}) => {\r\n   \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  return (!isLoading ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n      <Card>\r\n          <CardBody>\r\n            <Label className=\"font-weight-bold mb-3 text-primary\">\r\n              Pay with Paypal\r\n            </Label>\r\n            <PayPalButton\r\n                amount={totalAmount}\r\n                // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n                onSuccess={(details, data) => {\r\n                    setIsLoading(false);\r\n                    NotificationManager.success(\"Transaction completed by \" + details.payer.name.given_name, 'Success', 3000, null, null, '');\r\n                    const postData = {\r\n                        orderId: data.orderID,\r\n                        projectId: match.params.id,\r\n                    };\r\n                    return axios.post(\r\n                        `/api/payments/paypal-transaction-complete`\r\n                    , postData).then((res) => {\r\n                        setIsLoading(true);\r\n                        history.push(`/thank-you/payment/${match.params.id}`);\r\n                    });\r\n                }}\r\n                options={{\r\n                    currency: \"AUD\",\r\n                    clientId: PAYPAL_CLIENT_ID\r\n                }}\r\n            />\r\n          </CardBody>\r\n      </Card>\r\n    )\r\n  );\r\n}\r\n\r\nexport default PaypalPaymentForm;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Row,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst deliveryOptions = [\r\n  {\r\n    name: \"Fast Track (4 Business Days)\",\r\n    value: \"PS_DELIVERY_FAST_TRACK\",\r\n    price: 20.0,\r\n    currency: \"AUD\",\r\n  },\r\n  {\r\n    name: \"Priority (5-7 Business Days)\",\r\n    value: \"PS_DELIVERY_PRIORITY\",\r\n    price: 10.0,\r\n    currency: \"AUD\",\r\n  },\r\n  {\r\n    name: \"Standard (9-11 Business Days)\",\r\n    value: \"PS_DELIVERY_STANDARD\",\r\n    price: 8.0,\r\n    currency: \"AUD\",\r\n  },\r\n];\r\nconst OrderSummary = ({ setDeliveryOption, services, project, handleUpdateService, changeDeliveryAddr }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [deliveryOption, updateDeliveryOption] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let newOrders = [];\r\n    let orderTotal = 0;\r\n    services.forEach((service) => {\r\n      if (service.quantity !== 0 && service.total_price !== 0) {\r\n        orderTotal += parseFloat(service.total_price);\r\n        let orders = JSON.parse(service.orders);\r\n        let isPresent = orders.some(function (el) {\r\n          return el.depth === 1;\r\n        });\r\n        if (isPresent === false) {\r\n          orders.unshift({ name: service.name, depth: 1 });\r\n        }\r\n        orders.forEach((order) => {\r\n          newOrders.push({ service: service, order: order });\r\n        });\r\n      }\r\n    });\r\n    setTotalPrice(orderTotal);\r\n    setOrders(newOrders);\r\n  }, [services, project]);\r\n\r\n  const handleRemoveOrder = (order) => {\r\n    let service = order.service;\r\n    let serviceOrders = JSON.parse(service.orders);\r\n\r\n    let quantity = 0;\r\n    let total_price = 0;\r\n\r\n    if (order.order.depth === 1) {\r\n      service.orders = \"\";\r\n      service.quantity = 0;\r\n      service.total_price = 0;\r\n    } else {\r\n      const newOrders = serviceOrders.filter(function (e) {\r\n        return e.value !== order.order.value;\r\n      });\r\n      newOrders.forEach((item) => {\r\n        quantity += item.quantity;\r\n        total_price += item.totalPrice;\r\n      });\r\n      service.quantity = quantity;\r\n      service.total_price = total_price;\r\n      service.orders = JSON.stringify(newOrders);\r\n    }\r\n    handleUpdateService(service);\r\n  };\r\n\r\n  const handleChangeRadio = (e, price) => {\r\n    setDeliveryOption(e.target.value, price);\r\n    updateDeliveryOption({ option: e.target.value, price: price });\r\n  };\r\n\r\n  const handleAddressChange = (e) => {\r\n    changeDeliveryAddr(e);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"mb-5 invoice-contents\">\r\n        <CardBody className=\"d-flex flex-column justify-content-between\">\r\n          <div className=\"d-flex flex-column\">\r\n            <div className=\"d-flex flex-row justify-content-between pt-2 pb-2\">\r\n              <div className=\"d-flex align-self-center\">\r\n                <img\r\n                  src=\"/assets/img/logo-apirender.png\"\r\n                  width=\"200\"\r\n                  style={{objectFit: 'contain'}}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n              <div className=\"d-flex w-30 text-right align-self-center\">\r\n                <p className=\"text-small text-semi-muted mb-0 w-100\">\r\n                  APIrender.com Pty Ltd\r\n                  <br />\r\n                  ABN 74 636 488 027\r\n                  <br />\r\n                  Hamilton, Queensland 4007\r\n                  <br />\r\n                  Australia\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <span className=\"text-large text-primary\">\r\n                {project.project_name}\r\n              </span>\r\n            </div>\r\n            <div className=\"border-bottom pt-4 mb-5\" />\r\n\r\n            <Table borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-muted text-small mb-2 font-weight-medium\">Item Name</th>\r\n                  <th className=\"text-muted text-small mb-2 font-weight-medium\">Count</th>\r\n                  <th className=\"text-right text-muted text-small mb-2 font-weight-medium\">\r\n                    Price\r\n                  </th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      {order.order.depth === 1 && (\r\n                        <>\r\n                          <td>{order.order.name && order.order.name}</td>\r\n                          <td>\r\n                            {order.order.quantity && order.order.quantity}\r\n                          </td>\r\n                          <td className=\"text-right\">\r\n                            {order.order.totalPrice &&\r\n                              `AU$${order.order.totalPrice}`}\r\n                          </td>\r\n                          <td>\r\n                            {\r\n                              order.order.price && order.order.quantity && (\r\n                                <a\r\n                                  href=\"#!\"\r\n                                  onClick={() => {\r\n                                    handleRemoveOrder(order);\r\n                                  }}\r\n                                >\r\n                                  <i className=\"simple-icon-close\" />\r\n                                </a>\r\n                              )\r\n                            }\r\n                          </td>\r\n                        </>\r\n                      )}\r\n                      {order.order.depth !== 1 && (\r\n                        <>\r\n                          <td className=\"pl-4 padding-v-25\">\r\n                            - {order.order.name}\r\n                            <span className=\"pl-2 text-primary\">\r\n                              {order.order.depth === 3\r\n                                ? `${order.order.parent}`\r\n                                : \"\"}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"padding-v-25\">\r\n                            {order.order.quantity}\r\n                          </td>\r\n                          <td className=\"text-right padding-v-25\">\r\n                            {order.order.totalPrice === 0\r\n                              ? \"Free\"\r\n                              : `AU$ ${order.order.totalPrice}`}\r\n                          </td>\r\n                          <td className=\"padding-v-25\">\r\n                            <a\r\n                              href=\"#!\"\r\n                              onClick={() => {\r\n                                handleRemoveOrder(order);\r\n                              }}\r\n                            >\r\n                              <i className=\"simple-icon-close\" />\r\n                            </a>\r\n                          </td>\r\n                        </>\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          {\r\n            project.category === \"PRINTING_SERVICES\" && (\r\n              <>\r\n                <p className=\"text-muted\">\r\n                  We provide affordable delivery to the following countries through\r\n                  our network of printing partnerships: Australia, Austria, Belgium,\r\n                  Brazil, Canada, Cyprus, the Czech Republic, Denmark, Finland,\r\n                  France, French Guiana, French Polynesia, Germany, Gibraltar, Greece,\r\n                  Greenland, Guadeloupe, Guam, Hong Kong, Iceland, Ireland, Italy,\r\n                  Liechtenstein, Luxembourg, Malaysia, Malta, Martinique, Mexico,\r\n                  Monaco, the Netherlands, New Caledonia, New Zealand, Norway, Poland,\r\n                  Portugal, Puerto Rico, Réunion, Singapore, Spain, Sweden,\r\n                  Switzerland, the United Kingdom, the United States of America and\r\n                  U.S. Virgin Islands.\r\n                </p>\r\n                <Row className=\"mb-4\">\r\n                  <Colxx sm=\"12\" lg=\"12\">\r\n                    <Label className=\"text-primary mb-4 font-weight-bolder\">Delivery Options</Label>\r\n                  </Colxx>\r\n                  {deliveryOptions &&\r\n                    deliveryOptions.map((option, index) => {\r\n                      return (\r\n                        <Colxx sm=\"12\" lg=\"12\" md=\"12\" key={index}>\r\n                          <Card className=\"pt-3 pb-3 pl-3 pr-3\">\r\n                            <div\r\n                              className=\"d-flex flex-grow-1 min-width-zero\"\r\n                              style={{\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"space-between\",\r\n                              }}\r\n                            >\r\n                              <FormGroup check>\r\n                                <Label check>\r\n                                  <CustomInput\r\n                                    type=\"radio\"\r\n                                    name={`DELIVERY_RADIO`}\r\n                                    id={`RADIO_${option.value}`}\r\n                                    value={option.name}\r\n                                    label={option.name}\r\n                                    onChange={(e) => handleChangeRadio(e, option.price)}\r\n                                  />\r\n                                </Label>\r\n                              </FormGroup>\r\n                              <div className=\"option-quantity-input\">\r\n                                {option.price !== 0 && (\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      $\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      value={\r\n                                        option.price === 0 ? \"Free\" : option.price\r\n                                      }\r\n                                      readOnly\r\n                                    />\r\n                                  </InputGroup>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </Card>\r\n                        </Colxx>\r\n                      );\r\n                    })}\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label className=\"text-primary font-weight-bolder\">Delivery Address</Label>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Street Name\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"streetName\"\r\n                      id=\"streetName\"\r\n                    />\r\n                  </Colxx>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Street Number\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"streetNumber\"\r\n                      id=\"streetNumber\"\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Unit Number (if applicable)\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"unitNumber\"\r\n                      id=\"unitNumber\"\r\n                    />\r\n                  </Colxx>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Suburb\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"suburb\"\r\n                      id=\"suburb\"\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Zip Code\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"zipCode\"\r\n                      id=\"zipCode\"\r\n                    />\r\n                  </Colxx>\r\n                  <Colxx sm=\"6\">\r\n                    <Label>\r\n                      Country\r\n                    </Label>\r\n                    <Input\r\n                      onChange={handleAddressChange}\r\n                      type=\"text\"\r\n                      name=\"country\"\r\n                      id=\"country\"\r\n                    />\r\n                  </Colxx>\r\n                </FormGroup>\r\n              </>\r\n            )\r\n          }\r\n          <div className=\"d-flex flex-column\">\r\n            <div className=\"border-bottom pt-3 mb-5\" />\r\n            <Table borderless className=\"d-flex justify-content-end\">\r\n              <tbody>\r\n                <tr className=\"font-weight-bold\">\r\n                  <td className=\"text-semi-muted\">Total :</td>\r\n                  <td className=\"text-right\">AU$ {(totalPrice + (deliveryOption && deliveryOption.price ? deliveryOption.price : 0)).toFixed(2)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <div className=\"border-bottom pt-3 mb-5\" />\r\n          </div>\r\n          <p>\r\n            <NavLink\r\n              exact={true}\r\n              to={`/app/projects/add-service/${project._id}`}\r\n              className=\"top-right-button btn btn-primary btn-lg\"\r\n            >\r\n              <IntlMessages id=\"projects.add-more-services\" />\r\n            </NavLink>\r\n          </p>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport axios from \"axios\";\r\nimport { Row } from \"reactstrap\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport StripePaymentForm from \"../../../containers/stripe/StripePaymentForm\";\r\nimport PaypalPaymentForm from \"../../../containers/paypal/PaypalPaymentForm\";\r\nimport OrderSummary from \"../../../containers/projects/OrderSummary\";\r\n\r\nconst Payment = ({ intl, match, history }) => {\r\n  // const { messages } = intl;\r\n  const [services, setServices] = useState([]);\r\n  const [project, setProject] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [delivery, setDelivery] = useState(null);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [deliveryAddr, setDeliveryAddr] = useState({\r\n    streetName: null,\r\n    streetNumber: null,\r\n    unitNumber: null,\r\n    suburb: null,\r\n    zipCode: null,\r\n    country: null,\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUpdateService = (service) => {\r\n    axios\r\n      .post(`/api/services/update`, service)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .post(`/api/projects/get-info?_id=${match.params.id}`)\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        setProject(data.project);\r\n        setServices(data.services);\r\n        setTotalPrice(data.services.reduce(\r\n          (a, b) => a + (b[\"total_price\"] || 0),\r\n          0\r\n        ));\r\n        setIsLoaded(true);\r\n      });\r\n  };\r\n\r\n  const setDeliveryOption = (name, price) => {\r\n    const amount = services.reduce(\r\n      (a, b) => a + (b[\"total_price\"] || 0),\r\n      0\r\n    );\r\n    setTotalPrice(amount + price);\r\n    setDelivery(name);\r\n  }\r\n\r\n  const updateDeliveryAddr = (e) => {\r\n    setDeliveryAddr({\r\n      ...deliveryAddr,\r\n      [e.target.name]: e.target.value.trim()\r\n    });\r\n  }\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>\r\n            <IntlMessages id=\"projects.payment\" />\r\n          </h1>\r\n          <span className=\"pt-0 ml-4 breadcrumb-container d-none text-primary text-one d-sm-block d-lg-inline-block\">\r\n            ( {project.project_name} )\r\n          </span>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"8\" className=\"mb-4\">\r\n          <OrderSummary\r\n            services={services}\r\n            project={project}\r\n            handleUpdateService={handleUpdateService}\r\n            setDeliveryOption={setDeliveryOption}\r\n            changeDeliveryAddr={updateDeliveryAddr}\r\n          />\r\n        </Colxx>\r\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\r\n          <StripePaymentForm\r\n            match={match}\r\n            totalAmount={totalPrice}\r\n            delivery={delivery}\r\n            deliveryAddr={deliveryAddr}\r\n            history={history}\r\n            isPrintingService={project.category === \"PRINTING_SERVICES\" ? true : false}\r\n          />\r\n          <PaypalPaymentForm\r\n            match={match}\r\n            totalAmount={totalPrice}\r\n            history={history}\r\n            delivery={delivery}\r\n            isPrintingService={project.category === \"PRINTING_SERVICES\" ? true : false}\r\n          />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default injectIntl(Payment);\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst ProjectDetailsHeading = ({\r\n  intl,\r\n  changeOrderBy,\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  selectedOrderOption,\r\n  match,\r\n  startIndex,\r\n  endIndex,\r\n  onSearchKey,\r\n  orderOptions,\r\n  pageSizes,\r\n  heading,\r\n  projectID,\r\n  project,\r\n  totalPrice,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n  const { messages } = intl;\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <div className=\"mb-2\">\r\n          <h1>\r\n            {heading}\r\n          </h1>\r\n          {\r\n            project.is_paid === false && (\r\n              <>\r\n              <div className=\"text-zero top-right-button-container\">\r\n                <NavLink\r\n                    exact={true}\r\n                    to={`/app/projects/add-service/${projectID}`}\r\n                    className=\"top-right-button btn btn-primary btn-lg\"\r\n                >\r\n                <IntlMessages id=\"projects.add-new-service\" />\r\n                </NavLink>\r\n                {'  '}\r\n                {\r\n                  totalPrice !== 0 && (\r\n                    <NavLink\r\n                      exact={true}\r\n                      to={`/app/projects/payment/${projectID}`}\r\n                      className=\"top-right-button btn btn-danger btn-lg\"\r\n                    >\r\n                      PAY - AU${totalPrice.toFixed(2)}\r\n                    </NavLink>\r\n                  )\r\n                }\r\n              </div>\r\n              </>\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <IntlMessages id=\"pages.display-options\" />{' '}\r\n            <i className=\"simple-icon-arrow-down align-middle\" />\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedOrderOption.label}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {orderOptions.map((order, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changeOrderBy(order.column)}\r\n                      >\r\n                        {order.label}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  id=\"search\"\r\n                  placeholder={messages['menu.search']}\r\n                  onKeyPress={(e) => onSearchKey(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ProjectDetailsHeading);\r\n","import React from \"react\";\r\nimport { Row, Table, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport Pagination from \"./Pagination\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { statusColor } from \"../../constants/status\";\r\nimport { services } from \"../../constants/projectValues\";\r\n\r\nconst ListServiceListing = ({\r\n  items,\r\n  currentPage,\r\n  totalPage,\r\n  onChangePage,\r\n  project\r\n}) => {\r\n  const getOptionNumbers = (orders) => {\r\n    let options = JSON.parse(orders);\r\n    options = options.filter(function (el) {\r\n      return el.depth != 1;\r\n    });\r\n    return options.reduce((a, b) => a + (b[\"quantity\"] || 0), 0);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\" className=\"mb-3\">\r\n        <Table responsive className=\"r-table table table-divided\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Product Type</th>\r\n              <th>Quantity</th>\r\n              <th>Cost</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((product, i_key) => {\r\n              const obj = services[project.category].find(o => { return o.value === product.value });\r\n              return (\r\n                <tr role=\"row\" key={i_key}>\r\n                  <td role=\"cell\" className=\"p-0 list-item-heading w-10\">\r\n                    <div className=\"d-flex align-items-center justify-center\">\r\n                      <img\r\n                        alt={product.desc}\r\n                        src={obj.img}\r\n                        className=\"responsive border-0 card-img-left\"\r\n                        style={{ width: \"100px\", height: \"85px\" }}\r\n                      />\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    role=\"cell\"\r\n                    className=\"truncate align-middle list-item-heading w-40\"\r\n                  >\r\n                    {product.name}\r\n                    <span className=\"text-small text-primary\">\r\n                      {\" \"}\r\n                      ( +{getOptionNumbers(product.orders)} options )\r\n                    </span>\r\n                  </td>\r\n                  <td\r\n                    role=\"cell\"\r\n                    className=\"align-middle list-item-heading w-10\"\r\n                  >\r\n                    {product.quantity}\r\n                  </td>\r\n                  <td\r\n                    role=\"cell\"\r\n                    className=\"align-middle list-item-heading w-10\"\r\n                  >\r\n                    ${product.total_price}\r\n                  </td>\r\n                  <td\r\n                    role=\"cell\"\r\n                    className=\"align-middle list-item-heading w-20 text-small\"\r\n                  >\r\n                    {product.is_paid === false && (\r\n                      <Badge color=\"danger\" pill>\r\n                        <IntlMessages id=\"projects.payment-required\" />\r\n                      </Badge>\r\n                    )}\r\n                    {product.is_paid === true && (\r\n                      <Badge color={statusColor[product.status]} pill>\r\n                        {product.status}\r\n                      </Badge>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    role=\"cell\"\r\n                    className=\"truncate align-middle list-item-heading w-10\"\r\n                  >\r\n                    {product.is_paid === true &&\r\n                      product.status === \"WAITING FOR FILES\" && (\r\n                        <NavLink\r\n                          exact={true}\r\n                          to={`/app/projects/briefing/${product._id}`}\r\n                          className=\"top-right-button btn btn-primary btn-sm\"\r\n                        >\r\n                          <IntlMessages id=\"projects.send-files\" />\r\n                        </NavLink>\r\n                      )}\r\n                    {product.is_paid &&\r\n                      (product.status === \"IN PROGRESS\" ||\r\n                        product.status === \"REVIEW\") && (\r\n                        <NavLink\r\n                          exact={true}\r\n                          to={`/app/projects/view-briefing/${product._id}`}\r\n                          className=\"top-right-button btn btn-danger btn-sm\"\r\n                        >\r\n                          <IntlMessages id=\"projects.view-briefing\" />\r\n                        </NavLink>\r\n                      )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Colxx>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListServiceListing);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport ProjectDetailsHeading from \"../../../containers/projects/ProjectDetailsHeading\";\r\nimport ListServiceListing from \"../../../containers/projects/ListServiceListing\";\r\n\r\nconst orderOptions = [\r\n  { column: \"desc\", label: \"Service Name\" },\r\n  { column: \"price\", label: \"Price\" },\r\n  { column: \"quantity\", label: \"Quantity\" },\r\n];\r\nconst pageSizes = [10, 20, 50, 100];\r\n\r\nconst ProjectDetails = ({ match }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(10);\r\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\r\n    column: \"desc\",\r\n    label: \"Service Name\",\r\n  });\r\n\r\n  const [totalItemCount, setTotalItemCount] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [services, setServices] = useState([]);\r\n  const [project, setProject] = useState(\"\");\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize, selectedOrderOption]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(\r\n          `/api/projects/detail?_id=${match.params.id}&pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          setProject(data.project);\r\n          setTotalPage(data.totalPage);\r\n          setServices(data.services);\r\n          setTotalItemCount(data.totalItem);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        });\r\n    }\r\n    setIsLoaded(false);\r\n    fetchData();\r\n  }, [\r\n    selectedPageSize,\r\n    currentPage,\r\n    selectedOrderOption,\r\n    search,\r\n    match.params.id,\r\n  ]);\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <div className=\"disable-text-selection\">\r\n        <ProjectDetailsHeading\r\n          heading={project.project_name}\r\n          changeOrderBy={(column) => {\r\n            setSelectedOrderOption(\r\n              orderOptions.find((x) => x.column === column)\r\n            );\r\n          }}\r\n          changePageSize={setSelectedPageSize}\r\n          selectedPageSize={selectedPageSize}\r\n          totalItemCount={totalItemCount}\r\n          selectedOrderOption={selectedOrderOption}\r\n          match={match}\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          onSearchKey={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              setSearch(e.target.value.toLowerCase());\r\n            }\r\n          }}\r\n          orderOptions={orderOptions}\r\n          pageSizes={pageSizes}\r\n          projectID={match.params.id}\r\n          project={project}\r\n          totalPrice={services.reduce(function (cnt, o) {\r\n            return cnt + o.total_price;\r\n          }, 0)}\r\n        />\r\n        <ListServiceListing\r\n          items={services}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={setCurrentPage}\r\n          project={project}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst ProjectListHeading = ({\r\n  intl,\r\n  changeOrderBy,\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  selectedOrderOption,\r\n  match,\r\n  startIndex,\r\n  endIndex,\r\n  onSearchKey,\r\n  orderOptions,\r\n  pageSizes,\r\n  heading,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n  const { messages } = intl;\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <div className=\"mb-2\">\r\n          <h1>\r\n            <IntlMessages id={heading} />\r\n          </h1>\r\n\r\n          <div className=\"text-zero top-right-button-container\">\r\n            <NavLink\r\n                exact={true}\r\n                to={`/app/projects/new-project/`}\r\n                className=\"top-right-button btn btn-primary btn-lg\"\r\n            >\r\n            <IntlMessages id=\"projects.add-new\" />\r\n            </NavLink>\r\n            {'  '}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <IntlMessages id=\"pages.display-options\" />{' '}\r\n            <i className=\"simple-icon-arrow-down align-middle\" />\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedOrderOption.label}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {orderOptions.map((order, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changeOrderBy(order.column)}\r\n                      >\r\n                        {order.label}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  id=\"search\"\r\n                  placeholder={messages['menu.search']}\r\n                  onKeyPress={(e) => onSearchKey(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ProjectListHeading);\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Row, Table, Badge, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport Pagination from './Pagination';\r\nimport { projectCategories } from '../../constants/projectValues';\r\nimport { statusColor } from '../../constants/status';\r\nimport moment from 'moment';\r\n\r\nconst ListProjectsListing = ({\r\n  items,\r\n  currentPage,\r\n  totalPage,\r\n  onChangePage,\r\n  deleteProject\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\" className=\"mb-3\">\r\n        <Table responsive className=\"r-table table table-divided\">\r\n          <thead>\r\n            <tr>\r\n              <th>Project Title</th>\r\n              <th>Reference</th>\r\n              <th>Project Category</th>\r\n              <th>Cost</th>\r\n              <th>Order Date</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((project, k_index) => {\r\n              return (\r\n                <tr role=\"row\" key={k_index} className=\"p-5\" style={{cursor: 'pointer'}} onClick={(e) => history.push(`/app/projects/details/${project._id}`)}>\r\n                  <td role=\"cell\" className=\"p-4 list-item-heading w-20\">\r\n                    <NavLink to={`/app/projects/details/${project._id}`} className=\"w-sm-100\">\r\n                      <p className=\"mb-1 truncate\">\r\n                        {project.project_name}\r\n                      </p>\r\n                    </NavLink>\r\n                  </td>\r\n                  <td role=\"cell\" className=\"p-4 text-primary w-10\">\r\n                    {project.unique_id}\r\n                  </td>\r\n                  <td role=\"cell\" className=\"p-4 text-muted w-15 w-sm-100\">\r\n                    {projectCategories.find(o => o.value === project.category).desc}\r\n                  </td>\r\n                  <td role=\"cell\" className=\"p-4 text-muted w-10 text-muted text-small w-sm-100\">\r\n                    ${project.total_amount}\r\n                  </td>\r\n                  <td role=\"cell\" className=\"p-4 w-20\">\r\n                    <p className=\"truncate text-muted text-small w-sm-100\">{moment(project.date).format('LLLL')}</p>\r\n                  </td>\r\n                  <td role=\"cell\" className=\"p-4 text-muted w-15\">\r\n                    <Badge color={statusColor[project.status]} pill>\r\n                      {project.status}\r\n                    </Badge>\r\n                  </td>\r\n                  \r\n                  <td role=\"cell\" className=\"p-4 text-muted w-10\">\r\n                    {\r\n                      project.status === \"DRAFT\" && (\r\n                        <Button color=\"danger\" size=\"xs\" onClick={(e) => deleteProject(e, project._id)}>\r\n                          Delete\r\n                        </Button>\r\n                      )\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Colxx>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListProjectsListing);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport axios from \"axios\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport NotificationManager from \"../../../components/common/react-notifications/NotificationManager\";\r\n\r\nimport ProjectListHeading from \"../../../containers/projects/ProjectListHeading\";\r\nimport ListProjectsListing from \"../../../containers/projects/ListProjectsListing\";\r\nimport { setProjectMenuItems } from \"../../../redux/actions\";\r\n\r\nconst orderOptions = [\r\n  { column: \"project_name\", label: \"Project Name\" },\r\n  { column: \"category\", label: \"Category\" },\r\n  { column: \"status\", label: \"Status\" },\r\n  { column: \"unique_id\", label: \"Reference\" },\r\n];\r\nconst pageSizes = [10, 20, 50, 100];\r\n\r\nconst ProjectList = ({ match, setProjectMenuItems, loginUser }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(10);\r\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\r\n    column: \"project_name\",\r\n    label: \"Project Name\",\r\n  });\r\n\r\n  const [totalItemCount, setTotalItemCount] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize, selectedOrderOption]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .post(\r\n        `/api/projects/my-list?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}&userID=${loginUser._id}`\r\n      )\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        setTotalPage(data.totalPage);\r\n        setItems(data.data);\r\n        setTotalItemCount(data.totalItem);\r\n        setIsLoaded(true);\r\n      });\r\n  };\r\n\r\n  const deleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    confirmAlert({\r\n      title: 'Confirm to Delete',\r\n      message: 'Are you sure you want to delete this project?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            axios.post(`/api/projects/delete?_id=${id}`).then((res) => {\r\n              fetchData();\r\n              setProjectMenuItems();\r\n              NotificationManager.success(\r\n                \"The project has been deleted successfully.\",\r\n                \"Success\",\r\n                3000,\r\n                null,\r\n                null,\r\n                \"\"\r\n              );\r\n              \r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => { return; }\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <div className=\"disable-text-selection\">\r\n        <ProjectListHeading\r\n          heading=\"projects.all\"\r\n          changeOrderBy={(column) => {\r\n            setSelectedOrderOption(\r\n              orderOptions.find((x) => x.column === column)\r\n            );\r\n          }}\r\n          changePageSize={setSelectedPageSize}\r\n          selectedPageSize={selectedPageSize}\r\n          totalItemCount={totalItemCount}\r\n          selectedOrderOption={selectedOrderOption}\r\n          match={match}\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          onSearchKey={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              setSearch(e.target.value.toLowerCase());\r\n            }\r\n          }}\r\n          orderOptions={orderOptions}\r\n          pageSizes={pageSizes}\r\n        />\r\n        <ListProjectsListing\r\n          items={items}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={setCurrentPage}\r\n          deleteProject={deleteProject}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const loginUser = authUser.user;\r\n  return {\r\n    loginUser\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setProjectMenuItems,\r\n})(injectIntl(React.memo(ProjectList)));\r\n"],"sourceRoot":""}
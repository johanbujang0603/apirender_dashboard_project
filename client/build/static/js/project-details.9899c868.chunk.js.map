{"version":3,"sources":["../node_modules/reactstrap/es/NavLink.js","components/common/ApplicationMenu.js","containers/admin_projects/Pagination.js","../node_modules/reactstrap/es/Table.js","containers/admin_projects/ProjectDetailsHeading.js","containers/admin_projects/CustomerDetailSidebar.js","containers/admin_projects/ListServiceListing.js","views/admin/projects/project_details.js"],"names":["propTypes","tag","tagPropType","innerRef","PropTypes","oneOfType","object","func","string","disabled","bool","active","className","cssModule","onClick","href","any","NavLink","_React$Component","props","_this","call","this","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","preventDefault","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","Component","defaultProps","ApplicationMenu","children","containerRef","useRef","useState","isOpen","setIsOpen","handleDocumentClick","container","current","contains","target","useEffect","forEach","event","document","addEventListener","removeEventListener","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","map","key","size","bordered","borderless","striped","dark","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","injectIntl","intl","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","match","endIndex","onSearchKey","orderOptions","pageSizes","heading","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","Row","Button","color","IntlMessages","id","Collapse","UncontrolledDropdown","DropdownToggle","caret","label","DropdownMenu","order","index","DropdownItem","column","type","name","placeholder","onKeyPress","right","connect","customer","history","options","suppressScrollX","wheelPropagation","src","avatar","alt","width","height","first_name","last_name","company_name","memo","items","project","product","i_key","obj","services","category","find","o","value","role","desc","img","style","orders","JSON","parse","filter","el","depth","reduce","a","b","getOptionNumbers","quantity","total_price","Badge","statusColor","status","pill","is_paid","exact","to","_id","user_id","ProjectDetails","isLoaded","setIsLoaded","displayMode","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","modalOpen","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","selectedItems","setSelectedItems","setServices","setProject","axios","get","params","then","res","data","console","log","totalItem","fetchData","project_name","changeDisplayMode","x","selectedItemsLength","length","itemsLength","toLowerCase","projectID","toggleModal","totalPrice","cnt"],"mappings":"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","file":"static/js/project-details.9899c868.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  onClick: PropTypes.func,\n  href: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar NavLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavLink, _React$Component);\n\n  function NavLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = NavLink.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === '#') {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        active = _this$props.active,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"active\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, 'nav-link', {\n      disabled: attributes.disabled,\n      active: active\n    }), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      onClick: this.onClick,\n      className: classes\n    }));\n  };\n\n  return NavLink;\n}(React.Component);\n\nNavLink.propTypes = propTypes;\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from '../../components/svg';\r\n\r\nconst ProjectDetailsHeading = ({\r\n  intl,\r\n  changeOrderBy,\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  selectedOrderOption,\r\n  match,\r\n  startIndex,\r\n  endIndex,\r\n  onSearchKey,\r\n  orderOptions,\r\n  pageSizes,\r\n  heading,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n  const { messages } = intl;\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <div className=\"mb-2\">\r\n          <h1>\r\n            {heading}\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <IntlMessages id=\"pages.display-options\" />{' '}\r\n            <i className=\"simple-icon-arrow-down align-middle\" />\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedOrderOption.label}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {orderOptions.map((order, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changeOrderBy(order.column)}\r\n                      >\r\n                        {order.label}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  id=\"search\"\r\n                  placeholder={messages['menu.search']}\r\n                  onKeyPress={(e) => onSearchKey(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ProjectDetailsHeading);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport ApplicationMenu from '../../components/common/ApplicationMenu';\r\n\r\nconst CustomerDetailSidebar = ({\r\n  customer,\r\n  match,\r\n  history\r\n}) => {\r\n  return (\r\n    <ApplicationMenu>\r\n      <PerfectScrollbar\r\n        options={{ suppressScrollX: true, wheelPropagation: false }}\r\n      >\r\n        <div className=\"p-4\">\r\n          <p className=\"text-muted text-small\">\r\n            <IntlMessages id=\"pages.customer-detail\" />\r\n          </p>\r\n          <ul className=\"list-unstyled mb-2\">\r\n            <li className=\"nav-item text-center\">\r\n               <img src={`/${customer.avatar}`} alt=\"Avatar\" className=\"rounded-circle\" width=\"100\" height=\"100\"/>\r\n            </li>\r\n            <li className=\"nav-item text-center\">\r\n                <span className=\"text-primary\">{`${customer.first_name} ${customer.last_name}`}</span>\r\n            </li>\r\n            <li className=\"nav-item text-center\">\r\n                Company: <span className=\"text-muted\">{customer.company_name}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </ApplicationMenu>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n})(CustomerDetailSidebar);\r\n\r\n","import React from 'react';\r\nimport { Row, Badge, Table } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport Pagination from './Pagination';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport { statusColor } from '../../constants/status';\r\nimport CustomerDetailSidebar from './CustomerDetailSidebar';\r\nimport { services } from \"../../constants/projectValues\";\r\n\r\nconst ListServiceListing = ({\r\n  items,\r\n  currentPage,\r\n  totalPage,\r\n  onChangePage,\r\n  project,\r\n}) => {\r\n  const getOptionNumbers = (orders) => {\r\n    let options = JSON.parse(orders);\r\n    options = options.filter(function (el) {\r\n      return el.depth != 1;\r\n    });\r\n    return options.reduce((a, b) => a + (b['quantity'] || 0), 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Row className=\"app-row\">\r\n      <Colxx xxs=\"12\" className=\"mb-3\">\r\n        <Table responsive className=\"r-table table table-divided\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Product Type</th>\r\n              <th>Quantity</th>\r\n              <th>Cost</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              items.map((product, i_key) => {\r\n                const obj = services[project.category].find(o => { return o.value === product.value });\r\n                return (\r\n                  <tr role=\"row\" key={i_key}>\r\n                    <td role=\"cell\" className=\"p-0 list-item-heading w-10\">\r\n                      <div className=\"d-flex align-items-center justify-center\">\r\n                        <img\r\n                          alt={product.desc}\r\n                          src={obj.img}\r\n                          className=\"responsive border-0 card-img-left\"\r\n                          style={{width: '100px', height: '85px'}}\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td role=\"cell\" className=\"truncate align-middle list-item-heading w-40\">\r\n                      {product.name}<span className=\"text-small text-primary\"> ( +{getOptionNumbers(product.orders)} options )</span>\r\n                    </td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-10 text-muted text-small\">{product.quantity}</td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-10 text-muted text-small\">${product.total_price}</td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-20 text-small\">\r\n                      <Badge color={statusColor[product.status]} pill>\r\n                        {product.status}\r\n                      </Badge>\r\n                      \r\n                    </td>\r\n                    <td role=\"cell\" className=\"truncate align-middle list-item-heading w-10\">\r\n                    {\r\n                      product.is_paid && (\r\n                        <NavLink\r\n                          exact={true}\r\n                          to={`/admin/projects/briefing/${product._id}`}\r\n                          className=\"top-right-button btn btn-primary btn-sm\"\r\n                        >\r\n                        <IntlMessages id=\"projects.view-briefing\" />\r\n                        </NavLink>\r\n                      )\r\n                    }\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </Colxx>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n    <CustomerDetailSidebar customer={project.user_id} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListServiceListing);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport ProjectDetailsHeading from '../../../containers/admin_projects/ProjectDetailsHeading';\r\nimport ListServiceListing from '../../../containers/admin_projects/ListServiceListing';\r\n\r\nconst orderOptions = [\r\n  { column: 'desc', label: 'Service Name' },\r\n  { column: 'price', label: 'Price' },\r\n  { column: 'quantity', label: 'Quantity' },\r\n];\r\nconst pageSizes = [10, 20, 50, 100];\r\n\r\nconst ProjectDetails = ({ match }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [displayMode, setDisplayMode] = useState('thumblist');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(10);\r\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\r\n    column: 'desc',\r\n    label: 'Service Name',\r\n  });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [totalItemCount, setTotalItemCount] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [search, setSearch] = useState('');\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [project, setProject] = useState('');\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize, selectedOrderOption]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(\r\n          `/api/projects/detail?_id=${match.params.id}&pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          setProject(data.project);\r\n          setTotalPage(data.totalPage);\r\n          setServices(data.services);\r\n          setSelectedItems([]);\r\n          setTotalItemCount(data.totalItem);\r\n          setIsLoaded(true);\r\n        });\r\n    }\r\n    setIsLoaded(false);\r\n    fetchData();\r\n  }, [selectedPageSize, currentPage, selectedOrderOption, search, match.params.id]);\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <div className=\"disable-text-selection\">\r\n        <ProjectDetailsHeading\r\n          heading={project.project_name}\r\n          displayMode={displayMode}\r\n          changeDisplayMode={setDisplayMode}\r\n          changeOrderBy={(column) => {\r\n            setSelectedOrderOption(\r\n              orderOptions.find((x) => x.column === column)\r\n            );\r\n          }}\r\n          changePageSize={setSelectedPageSize}\r\n          selectedPageSize={selectedPageSize}\r\n          totalItemCount={totalItemCount}\r\n          selectedOrderOption={selectedOrderOption}\r\n          match={match}\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n          itemsLength={services ? services.length : 0}\r\n          onSearchKey={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setSearch(e.target.value.toLowerCase());\r\n            }\r\n          }}\r\n          orderOptions={orderOptions}\r\n          pageSizes={pageSizes}\r\n          projectID={match.params.id}\r\n          project={project}\r\n          toggleModal={() => setModalOpen(!modalOpen)}\r\n          totalPrice={services.reduce( function(cnt,o){ return cnt + o.total_price; }, 0)}\r\n        />\r\n        <ListServiceListing\r\n          items={services}\r\n          displayMode={displayMode}\r\n          selectedItems={selectedItems}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={setCurrentPage}\r\n          projectID={match.params.id}\r\n          project={project}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/common/AvatarUploader.js","constants/countries.js","containers/users/AdminDetail.js","containers/users/CustomerDetail.js","views/admin/users/new_user.js","views/admin/users/user_detail.js","containers/users/UserListHeading.js","containers/users/Pagination.js","containers/users/ListUsersListing.js","views/admin/users/user_list.js"],"names":["AvatarUploader","label","handleChange","orgData","image","setImage","useState","preview","setPreview","className","type","accept","onChange","e","target","files","URL","createObjectURL","handleUploadFile","src","width","height","countries","value","connect","history","user","email","password","confirmPassword","firstName","first_name","lastName","last_name","role","loading","setLoading","avatar","setAvatar","initialValues","sm","size","offset","onSubmit","values","formData","FormData","append","_id","axios","post","headers","then","res","data","NotificationManager","success","push","catch","error","message","validationSchema","Yup","shape","required","min","oneOf","errors","touched","row","id","name","color","phoneRegExp","jobTitle","job_title","phoneNumber","phone_number","companyName","company_name","country","emailPreference","matches","defaultValue","render","props","field","form","hasError","selectOptions","key","map","i","index","registerUserAction","registerUser","intl","match","setSrc","xxs","md","style","display","justifyContent","onCrop","onClose","onBeforeFileLoad","elem","alert","alt","setUser","isLoaded","setIsLoaded","useEffect","async","params","fetchData","injectIntl","changePageSize","selectedPageSize","totalItemCount","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","pageSizes","heading","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","Row","IntlMessages","exact","to","Button","onClick","Collapse","isOpen","placeholder","onKeyPress","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem","NavLink","React","memo","items","Card","moment","date","format","UserList","setCurrentPage","setSelectedPageSize","setTotalItemCount","setTotalPage","search","setSearch","selectedItems","setSelectedItems","setItems","totalItem","length","toLowerCase"],"mappings":"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","file":"static/js/users-new.adfa306e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const AvatarUploader = ({ label, handleChange, orgData }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [preview, setPreview] = useState(orgData ? `${orgData}` : null);\r\n  const handleUploadFile = (e) => {\r\n    setImage(e.target.files[0]);\r\n    setPreview(URL.createObjectURL(e.target.files[0]));\r\n    handleChange(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"avatar-photo\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => handleUploadFile(e)}\r\n        ></input>\r\n        {!image && !orgData && (\r\n          <div className=\"avatar-uploader-label\">\r\n            <span>{label}</span>\r\n          </div>\r\n        )}\r\n        <img\r\n          src={preview}\r\n          className=\"rounded-circle\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export const countries = [\r\n    {value: 'AF', label: 'Afghanistan'},\r\n    {value: 'AX', label: 'Aland Islands'},\r\n    {value: 'AL', label: 'Albania'},\r\n    {value: 'DZ', label: 'Algeria'},\r\n    {value: 'AS', label: 'American Samoa'},\r\n    {value: 'AD', label: 'Andorra'},\r\n    {value: 'AO', label: 'Angola'},\r\n    {value: 'AI', label: 'Anguilla'},\r\n    {value: 'AQ', label: 'Antarctica'},\r\n    {value: 'AG', label: 'Antigua And Barbuda'},\r\n    {value: 'AR', label: 'Argentina'},\r\n    {value: 'AM', label: 'Armenia'},\r\n    {value: 'AW', label: 'Aruba'},\r\n    {value: 'AU', label: 'Australia'},\r\n    {value: 'AT', label: 'Austria'},\r\n    {value: 'AZ', label: 'Azerbaijan'},\r\n    {value: 'BS', label: 'Bahamas'},\r\n    {value: 'BH', label: 'Bahrain'},\r\n    {value: 'BD', label: 'Bangladesh'},\r\n    {value: 'BB', label: 'Barbados'},\r\n    {value: 'BY', label: 'Belarus'},\r\n    {value: 'BE', label: 'Belgium'},\r\n    {value: 'BZ', label: 'Belize'},\r\n    {value: 'BJ', label: 'Benin'},\r\n    {value: 'BM', label: 'Bermuda'},\r\n    {value: 'BT', label: 'Bhutan'},\r\n    {value: 'BO', label: 'Bolivia'},\r\n    {value: 'BA', label: 'Bosnia And Herzegovina'},\r\n    {value: 'BW', label: 'Botswana'},\r\n    {value: 'BV', label: 'Bouvet Island'},\r\n    {value: 'BR', label: 'Brazil'},\r\n    {value: 'IO', label: 'British Indian Ocean Territory'},\r\n    {value: 'BN', label: 'Brunei Darussalam'},\r\n    {value: 'BG', label: 'Bulgaria'},\r\n    {value: 'BF', label: 'Burkina Faso'},\r\n    {value: 'BI', label: 'Burundi'},\r\n    {value: 'KH', label: 'Cambodia'},\r\n    {value: 'CM', label: 'Cameroon'},\r\n    {value: 'CA', label: 'Canada'},\r\n    {value: 'CV', label: 'Cape Verde'},\r\n    {value: 'KY', label: 'Cayman Islands'},\r\n    {value: 'CF', label: 'Central African Republic'},\r\n    {value: 'TD', label: 'Chad'},\r\n    {value: 'CL', label: 'Chile'},\r\n    {value: 'CN', label: 'China'},\r\n    {value: 'CX', label: 'Christmas Island'},\r\n    {value: 'CC', label: 'Cocos (Keeling) Islands'},\r\n    {value: 'CO', label: 'Colombia'},\r\n    {value: 'KM', label: 'Comoros'},\r\n    {value: 'CG', label: 'Congo'},\r\n    {value: 'CD', label: 'Congo, Democratic Republic'},\r\n    {value: 'CK', label: 'Cook Islands'},\r\n    {value: 'CR', label: 'Costa Rica'},\r\n    {value: 'CI', label: 'Cote D\\'Ivoire'},\r\n    {value: 'HR', label: 'Croatia'},\r\n    {value: 'CU', label: 'Cuba'},\r\n    {value: 'CY', label: 'Cyprus'},\r\n    {value: 'CZ', label: 'Czech Republic'},\r\n    {value: 'DK', label: 'Denmark'},\r\n    {value: 'DJ', label: 'Djibouti'},\r\n    {value: 'DM', label: 'Dominica'},\r\n    {value: 'DO', label: 'Dominican Republic'},\r\n    {value: 'EC', label: 'Ecuador'},\r\n    {value: 'EG', label: 'Egypt'},\r\n    {value: 'SV', label: 'El Salvador'},\r\n    {value: 'GQ', label: 'Equatorial Guinea'},\r\n    {value: 'ER', label: 'Eritrea'},\r\n    {value: 'EE', label: 'Estonia'},\r\n    {value: 'ET', label: 'Ethiopia'},\r\n    {value: 'FK', label: 'Falkland Islands (Malvinas)'},\r\n    {value: 'FO', label: 'Faroe Islands'},\r\n    {value: 'FJ', label: 'Fiji'},\r\n    {value: 'FI', label: 'Finland'},\r\n    {value: 'FR', label: 'France'},\r\n    {value: 'GF', label: 'French Guiana'},\r\n    {value: 'PF', label: 'French Polynesia'},\r\n    {value: 'TF', label: 'French Southern Territories'},\r\n    {value: 'GA', label: 'Gabon'},\r\n    {value: 'GM', label: 'Gambia'},\r\n    {value: 'GE', label: 'Georgia'},\r\n    {value: 'DE', label: 'Germany'},\r\n    {value: 'GH', label: 'Ghana'},\r\n    {value: 'GI', label: 'Gibraltar'},\r\n    {value: 'GR', label: 'Greece'},\r\n    {value: 'GL', label: 'Greenland'},\r\n    {value: 'GD', label: 'Grenada'},\r\n    {value: 'GP', label: 'Guadeloupe'},\r\n    {value: 'GU', label: 'Guam'},\r\n    {value: 'GT', label: 'Guatemala'},\r\n    {value: 'GG', label: 'Guernsey'},\r\n    {value: 'GN', label: 'Guinea'},\r\n    {value: 'GW', label: 'Guinea-Bissau'},\r\n    {value: 'GY', label: 'Guyana'},\r\n    {value: 'HT', label: 'Haiti'},\r\n    {value: 'HM', label: 'Heard Island & Mcdonald Islands'},\r\n    {value: 'VA', label: 'Holy See (Vatican City State)'},\r\n    {value: 'HN', label: 'Honduras'},\r\n    {value: 'HK', label: 'Hong Kong'},\r\n    {value: 'HU', label: 'Hungary'},\r\n    {value: 'IS', label: 'Iceland'},\r\n    {value: 'IN', label: 'India'},\r\n    {value: 'ID', label: 'Indonesia'},\r\n    {value: 'IR', label: 'Iran, Islamic Republic Of'},\r\n    {value: 'IQ', label: 'Iraq'},\r\n    {value: 'IE', label: 'Ireland'},\r\n    {value: 'IM', label: 'Isle Of Man'},\r\n    {value: 'IL', label: 'Israel'},\r\n    {value: 'IT', label: 'Italy'},\r\n    {value: 'JM', label: 'Jamaica'},\r\n    {value: 'JP', label: 'Japan'},\r\n    {value: 'JE', label: 'Jersey'},\r\n    {value: 'JO', label: 'Jordan'},\r\n    {value: 'KZ', label: 'Kazakhstan'},\r\n    {value: 'KE', label: 'Kenya'},\r\n    {value: 'KI', label: 'Kiribati'},\r\n    {value: 'KR', label: 'Korea'},\r\n    {value: 'KW', label: 'Kuwait'},\r\n    {value: 'KG', label: 'Kyrgyzstan'},\r\n    {value: 'LA', label: 'Lao People\\'s Democratic Republic'},\r\n    {value: 'LV', label: 'Latvia'},\r\n    {value: 'LB', label: 'Lebanon'},\r\n    {value: 'LS', label: 'Lesotho'},\r\n    {value: 'LR', label: 'Liberia'},\r\n    {value: 'LY', label: 'Libyan Arab Jamahiriya'},\r\n    {value: 'LI', label: 'Liechtenstein'},\r\n    {value: 'LT', label: 'Lithuania'},\r\n    {value: 'LU', label: 'Luxembourg'},\r\n    {value: 'MO', label: 'Macao'},\r\n    {value: 'MK', label: 'Macedonia'},\r\n    {value: 'MG', label: 'Madagascar'},\r\n    {value: 'MW', label: 'Malawi'},\r\n    {value: 'MY', label: 'Malaysia'},\r\n    {value: 'MV', label: 'Maldives'},\r\n    {value: 'ML', label: 'Mali'},\r\n    {value: 'MT', label: 'Malta'},\r\n    {value: 'MH', label: 'Marshall Islands'},\r\n    {value: 'MQ', label: 'Martinique'},\r\n    {value: 'MR', label: 'Mauritania'},\r\n    {value: 'MU', label: 'Mauritius'},\r\n    {value: 'YT', label: 'Mayotte'},\r\n    {value: 'MX', label: 'Mexico'},\r\n    {value: 'FM', label: 'Micronesia, Federated States Of'},\r\n    {value: 'MD', label: 'Moldova'},\r\n    {value: 'MC', label: 'Monaco'},\r\n    {value: 'MN', label: 'Mongolia'},\r\n    {value: 'ME', label: 'Montenegro'},\r\n    {value: 'MS', label: 'Montserrat'},\r\n    {value: 'MA', label: 'Morocco'},\r\n    {value: 'MZ', label: 'Mozambique'},\r\n    {value: 'MM', label: 'Myanmar'},\r\n    {value: 'NA', label: 'Namibia'},\r\n    {value: 'NR', label: 'Nauru'},\r\n    {value: 'NP', label: 'Nepal'},\r\n    {value: 'NL', label: 'Netherlands'},\r\n    {value: 'AN', label: 'Netherlands Antilles'},\r\n    {value: 'NC', label: 'New Caledonia'},\r\n    {value: 'NZ', label: 'New Zealand'},\r\n    {value: 'NI', label: 'Nicaragua'},\r\n    {value: 'NE', label: 'Niger'},\r\n    {value: 'NG', label: 'Nigeria'},\r\n    {value: 'NU', label: 'Niue'},\r\n    {value: 'NF', label: 'Norfolk Island'},\r\n    {value: 'MP', label: 'Northern Mariana Islands'},\r\n    {value: 'NO', label: 'Norway'},\r\n    {value: 'OM', label: 'Oman'},\r\n    {value: 'PK', label: 'Pakistan'},\r\n    {value: 'PW', label: 'Palau'},\r\n    {value: 'PS', label: 'Palestinian Territory, Occupied'},\r\n    {value: 'PA', label: 'Panama'},\r\n    {value: 'PG', label: 'Papua New Guinea'},\r\n    {value: 'PY', label: 'Paraguay'},\r\n    {value: 'PE', label: 'Peru'},\r\n    {value: 'PH', label: 'Philippines'},\r\n    {value: 'PN', label: 'Pitcairn'},\r\n    {value: 'PL', label: 'Poland'},\r\n    {value: 'PT', label: 'Portugal'},\r\n    {value: 'PR', label: 'Puerto Rico'},\r\n    {value: 'QA', label: 'Qatar'},\r\n    {value: 'RE', label: 'Reunion'},\r\n    {value: 'RO', label: 'Romania'},\r\n    {value: 'RU', label: 'Russian Federation'},\r\n    {value: 'RW', label: 'Rwanda'},\r\n    {value: 'BL', label: 'Saint Barthelemy'},\r\n    {value: 'SH', label: 'Saint Helena'},\r\n    {value: 'KN', label: 'Saint Kitts And Nevis'},\r\n    {value: 'LC', label: 'Saint Lucia'},\r\n    {value: 'MF', label: 'Saint Martin'},\r\n    {value: 'PM', label: 'Saint Pierre And Miquelon'},\r\n    {value: 'VC', label: 'Saint Vincent And Grenadines'},\r\n    {value: 'WS', label: 'Samoa'},\r\n    {value: 'SM', label: 'San Marino'},\r\n    {value: 'ST', label: 'Sao Tome And Principe'},\r\n    {value: 'SA', label: 'Saudi Arabia'},\r\n    {value: 'SN', label: 'Senegal'},\r\n    {value: 'RS', label: 'Serbia'},\r\n    {value: 'SC', label: 'Seychelles'},\r\n    {value: 'SL', label: 'Sierra Leone'},\r\n    {value: 'SG', label: 'Singapore'},\r\n    {value: 'SK', label: 'Slovakia'},\r\n    {value: 'SI', label: 'Slovenia'},\r\n    {value: 'SB', label: 'Solomon Islands'},\r\n    {value: 'SO', label: 'Somalia'},\r\n    {value: 'ZA', label: 'South Africa'},\r\n    {value: 'GS', label: 'South Georgia And Sandwich Isl.'},\r\n    {value: 'ES', label: 'Spain'},\r\n    {value: 'LK', label: 'Sri Lanka'},\r\n    {value: 'SD', label: 'Sudan'},\r\n    {value: 'SR', label: 'Suriname'},\r\n    {value: 'SJ', label: 'Svalbard And Jan Mayen'},\r\n    {value: 'SZ', label: 'Swaziland'},\r\n    {value: 'SE', label: 'Sweden'},\r\n    {value: 'CH', label: 'Switzerland'},\r\n    {value: 'SY', label: 'Syrian Arab Republic'},\r\n    {value: 'TW', label: 'Taiwan'},\r\n    {value: 'TJ', label: 'Tajikistan'},\r\n    {value: 'TZ', label: 'Tanzania'},\r\n    {value: 'TH', label: 'Thailand'},\r\n    {value: 'TL', label: 'Timor-Leste'},\r\n    {value: 'TG', label: 'Togo'},\r\n    {value: 'TK', label: 'Tokelau'},\r\n    {value: 'TO', label: 'Tonga'},\r\n    {value: 'TT', label: 'Trinidad And Tobago'},\r\n    {value: 'TN', label: 'Tunisia'},\r\n    {value: 'TR', label: 'Turkey'},\r\n    {value: 'TM', label: 'Turkmenistan'},\r\n    {value: 'TC', label: 'Turks And Caicos Islands'},\r\n    {value: 'TV', label: 'Tuvalu'},\r\n    {value: 'UG', label: 'Uganda'},\r\n    {value: 'UA', label: 'Ukraine'},\r\n    {value: 'AE', label: 'United Arab Emirates'},\r\n    {value: 'GB', label: 'United Kingdom'},\r\n    {value: 'US', label: 'United States'},\r\n    {value: 'UM', label: 'United States Outlying Islands'},\r\n    {value: 'UY', label: 'Uruguay'},\r\n    {value: 'UZ', label: 'Uzbekistan'},\r\n    {value: 'VU', label: 'Vanuatu'},\r\n    {value: 'VE', label: 'Venezuela'},\r\n    {value: 'VN', label: 'Viet Nam'},\r\n    {value: 'VG', label: 'Virgin Islands, British'},\r\n    {value: 'VI', label: 'Virgin Islands, U.S.'},\r\n    {value: 'WF', label: 'Wallis And Futuna'},\r\n    {value: 'EH', label: 'Western Sahara'},\r\n    {value: 'YE', label: 'Yemen'},\r\n    {value: 'ZM', label: 'Zambia'},\r\n    {value: 'ZW', label: 'Zimbabwe'}\r\n]","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { AvatarUploader } from '../../components/common/AvatarUploader';\r\n\r\nconst AdminDetail = ({ history, user }) => {\r\n  // const { messages } = intl;\r\n  const [email] = useState(user.email);\r\n  const [password] = useState('');\r\n  const [confirmPassword] = useState('');\r\n  const [firstName] = useState(user.first_name);\r\n  const [lastName] = useState(user.last_name);\r\n  const [role] = useState('admin');\r\n  const [loading, setLoading] = useState(false);\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n\r\n  const onUserRegister = (values) => {\r\n    setLoading(true);\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    };\r\n    const formData = new FormData();\r\n    formData.append('avatar', avatar);\r\n    formData.append('id', user._id);\r\n    formData.append('first_name', values.firstName);\r\n    formData.append('last_name', values.lastName);\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    formData.append('is_new', avatar ? true : false);\r\n    axios.post('/api/users/update-admin', formData, config)\r\n    .then((res) => {\r\n      return res.data\r\n    })\r\n    .then((data) => {\r\n      setLoading(false);\r\n      NotificationManager.success('The user has been updated successfully', \"Succcess!\", 3000, null, null, '');\r\n      history.push('/admin/users/list');\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      NotificationManager.success(error.message, \"Error!\", 3000, null, null, '');\r\n    });\r\n  }\r\n\r\n  const initialValues = {email, firstName, lastName, password, confirmPassword};\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx sm={{ size: 8, offset: 2 }} className=\"mb-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={onUserRegister}\r\n                validationSchema={Yup.object().shape({\r\n                  firstName: Yup.string()\r\n                      .required('First Name is required'),\r\n                  lastName: Yup.string()\r\n                      .required('Last Name is required'),\r\n                  email: Yup.string()\r\n                      .email('Email is invalid')\r\n                      .required('Email is required'),\r\n                  password: Yup.string()\r\n                      .min(6, 'Password must be at least 6 characters'),\r\n                  confirmPassword: Yup.string()\r\n                      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n                })}\r\n                >\r\n                {({ errors, touched }) => (\r\n                  <Form>\r\n                    <FormGroup row>\r\n                      \r\n                      <Colxx sm={{ size: 4, offset: 4 }}>\r\n                        <FormGroup className=\"form-group has-float-label mb-4 text-center\">\r\n                          <div className=\"d-flex justify-content-center p-1\">\r\n                            <AvatarUploader\r\n                              label=\"Upload Profile Pircutre or Company Logo\"\r\n                              handleChange={(data) => setAvatar(data)}\r\n                              orgData={user.avatar}/>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.firstname\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                      />\r\n                      {errors.firstName && touched.firstName && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.firstName}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.lastname\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                      />\r\n                      {errors.lastName && touched.lastName && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.lastName}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.email\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                      />\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.email}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.password\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.confirm-password\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                      />\r\n                      {errors.confirmPassword && touched.confirmPassword && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                      \r\n                      <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          loading ? 'show-spinner' : ''\r\n                        }`}\r\n                        size=\"lg\"\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">\r\n                          <IntlMessages id=\"users.save\" />\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </CardBody>\r\n          </Card>\r\n          \r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default connect(null, {\r\n})(AdminDetail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationManager } from '../../components/common/react-notifications';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { AvatarUploader } from '../../components/common/AvatarUploader';\r\nimport {countries} from '../../constants/countries';\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\nconst CustomerDetail = ({ history, user }) => {\r\n  // const { messages } = intl;\r\n  const [email] = useState(user.email);\r\n  const [password] = useState('');\r\n  const [confirmPassword] = useState('');\r\n  const [firstName] = useState(user.first_name);\r\n  const [lastName] = useState(user.last_name);\r\n  const [jobTitle] = useState(user.job_title);\r\n  const [phoneNumber] = useState(user.phone_number)\r\n  const [companyName] = useState(user.company_name);\r\n  const [country] = useState(user.country);\r\n  const [role] = useState('customer');\r\n  const [loading, setLoading] = useState(false);\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  const onUserRegister = (values) => {\r\n    setLoading(true);\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    };\r\n    let formData = new FormData();\r\n    formData.append('avatar', avatar);\r\n    formData.append('id', user._id);\r\n    formData.append('first_name', values.firstName);\r\n    formData.append('last_name', values.lastName);\r\n    formData.append('phone_number', values.phoneNumber);\r\n    formData.append('email', values.email);\r\n    formData.append('password', values.password);\r\n    formData.append('job_title', values.jobTitle);\r\n    formData.append('company_name', values.companyName);\r\n    formData.append('country', values.country);\r\n    formData.append('is_new', avatar ? true : false);\r\n    axios.post('/api/users/update-customer', formData, config)\r\n    .then((res) => {\r\n      return res.data\r\n    })\r\n    .then((data) => {\r\n      setLoading(false);\r\n      NotificationManager.success('The user has been updated successfully', \"Succcess!\", 3000, null, null, '');\r\n      history.push('/admin/users/list');\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      NotificationManager.success(error.message, \"Error!\", 3000, null, null, '');\r\n    });\r\n  }\r\n\r\n  const initialValues = { firstName, lastName, email, confirmPassword, password, companyName, jobTitle, country, role, phoneNumber };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx sm={{ size: 8, offset: 2 }} className=\"mb-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <Formik \r\n                initialValues={initialValues}\r\n                onSubmit={onUserRegister}\r\n                validationSchema={Yup.object().shape({\r\n                  firstName: Yup.string()\r\n                      .required('Full Name is required'),\r\n                  lastName: Yup.string()\r\n                      .required('Last Name is required'),\r\n                  jobTitle: Yup.string()\r\n                      .required('Job title is required'),\r\n                  companyName: Yup.string()\r\n                      .required('Company name is required'),\r\n                  email: Yup.string()\r\n                    .email('Email is invalid')\r\n                    .required('Email is required'),\r\n                  emailPreference: Yup.string()\r\n                    .email('Email Preference is invalid')\r\n                    .required('Email Preference is required'),\r\n                  password: Yup.string()\r\n                      .min(6, 'Password must be at least 6 characters'),\r\n                  confirmPassword: Yup.string()\r\n                      .oneOf([Yup.ref('password')], 'Passwords must match'),\r\n                  country: Yup.string()\r\n                      .required('Address is required'),\r\n                  phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\r\n                })}\r\n                >\r\n                {({ errors, touched }) => (\r\n                  <Form>\r\n                    <FormGroup row>\r\n                      <Colxx sm={{ size: 4, offset: 4 }}>\r\n                        <FormGroup className=\"form-group has-float-label mb-4 text-center\">\r\n                          <div className=\"d-flex justify-content-center p-1\">\r\n                            <AvatarUploader\r\n                              label=\"Upload Profile Pircutre or Company Logo\"\r\n                              handleChange={(data) => setAvatar(data)}\r\n                              orgData={user.avatar}/>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                      <Colxx sm={6}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.firstname\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                          />\r\n                          {errors.firstName && touched.firstName && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.firstName}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n\r\n                      <Colxx sm={6}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.lastname\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                          />\r\n                          {errors.lastName && touched.lastName && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.lastName}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n\r\n                      <Colxx sm={12}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.phone_number\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            name=\"phoneNumber\"\r\n                          />\r\n                          {errors.phoneNumber && touched.phoneNumber && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.phoneNumber}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n\r\n                      <Colxx sm={12}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.email\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                          />\r\n                          {errors.email && touched.email && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n\r\n                      <Colxx sm={12}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.password\" defaultValue={password} value={password} />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                          />\r\n                          {errors.password && touched.password && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n\r\n                      <Colxx sm={12}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.confirm-password\" defaultValue={confirmPassword} value={confirmPassword} />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                          />\r\n                          {errors.confirmPassword && touched.confirmPassword && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.confirmPassword}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                      <Colxx sm={6}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.companyname\" defaultValue={companyName} value={companyName} />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"companyName\"\r\n                          />\r\n                          {errors.companyName && touched.companyName && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.companyName}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                      <Colxx sm={6}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.job-title\" defaultValue={jobTitle} value={jobTitle} />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"jobTitle\"\r\n                          />\r\n                          {errors.jobTitle && touched.jobTitle && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.jobTitle}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                      <Colxx sm={12}>\r\n                        <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.country\" defaultValue={country} value={country} />\r\n                          </Label>\r\n                          {/* <Field name='country' component={Select} options={selectData} /> */}\r\n                          <Field\r\n                            name='country'\r\n                            render={(props) => {\r\n                              const { field } = props;\r\n                              const { errors, touched } = props.form;\r\n                              const hasError = errors['country'] && touched['country'] ? 'hasError' : '';\r\n                              const defaultOption = <option key='default' value='Please Select'>Please Select</option>;\r\n                              const options = countries.map((i, index) => <option key={index} value={i.value}> {i.label} </option> );\r\n                              const selectOptions = [defaultOption, ...options];\r\n                              return (\r\n                                  <select className='form-control' value={field.value} {...field} id={hasError}>\r\n                                    {\r\n                                      selectOptions\r\n                                    }\r\n                                  </select>\r\n                              );\r\n                            }}\r\n                          />\r\n                          {errors.country && touched.country && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.country}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                    </FormGroup>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        className=\"btn-shadow\"\r\n                        size=\"lg\"\r\n                      >\r\n                        <IntlMessages id=\"users.save\" />\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </CardBody>\r\n          </Card>\r\n          \r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default connect(null, {\r\n})(CustomerDetail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { NotificationManager } from '../../../components/common/react-notifications';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\nimport { registerUser } from '../../../redux/actions';\r\nimport Avatar from 'react-avatar-edit'\r\n\r\nconst NewUser = ({ intl, match, history }) => {\r\n  // const { messages } = intl;\r\n  const [email] = useState('');\r\n  const [password] = useState('');\r\n  const [confirmPassword] = useState('');\r\n  const [firstName] = useState('');\r\n  const [lastName] = useState('');\r\n  const [role] = useState('admin');\r\n  const [loading, setLoading] = useState(false);\r\n  const [src, setSrc] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const onCrop = (preview) => {\r\n    setPreview(preview);\r\n  }\r\n\r\n  const onClose = () => {\r\n    setPreview(null);\r\n  }\r\n\r\n  const onBeforeFileLoad = (elem) => {\r\n    if(elem.target.files[0].size > 716800){\r\n      alert(\"File is too big!\");\r\n      elem.target.value = \"\";\r\n    };\r\n  }\r\n\r\n  const onUserRegister = (values) => {\r\n    setLoading(true);\r\n    const formData = {...values, avatar: preview};\r\n    axios.post('/api/users/register', formData)\r\n    .then((res) => {\r\n      return res.data\r\n    })\r\n    .then((data) => {\r\n      setLoading(false);\r\n      NotificationManager.success('The user has been registered successfully', \"Succcess!\", 3000, null, null, '');\r\n      history.push('/admin/users/list');\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      NotificationManager.success(error.message, \"Error!\", 3000, null, null, '');\r\n    });\r\n  }\r\n\r\n  const initialValues = { firstName, lastName, email, confirmPassword, password, role };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>\r\n            <IntlMessages id=\"menu.new-user\" />\r\n          </h1>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx sm=\"12\" md=\"6\">\r\n          <Card>\r\n            <CardBody>\r\n              <div\r\n                style={{display: \"flex\", justifyContent: \"center\"}}\r\n              >\r\n              <Avatar\r\n                width={400}\r\n                height={400}\r\n                onCrop={onCrop}\r\n                onClose={onClose}\r\n                onBeforeFileLoad={onBeforeFileLoad}\r\n                src={src}\r\n              />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Colxx>\r\n        <Colxx sm=\"12\" md=\"6\" className=\"mb-4\">\r\n          <Card>\r\n            <CardBody>\r\n              <Formik \r\n                initialValues={initialValues}\r\n                onSubmit={onUserRegister}\r\n                validationSchema={Yup.object().shape({\r\n                  firstName: Yup.string()\r\n                      .required('First Name is required'),\r\n                  lastName: Yup.string()\r\n                      .required('Last Name is required'),\r\n                  email: Yup.string()\r\n                      .email('Email is invalid')\r\n                      .required('Email is required'),\r\n                  password: Yup.string()\r\n                      .min(6, 'Password must be at least 6 characters')\r\n                      .required('Password is required'),\r\n                  confirmPassword: Yup.string()\r\n                      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n                      .required('Confirm Password is required'),\r\n                })}\r\n                >\r\n                {({ errors, touched }) => (\r\n                  <Form>\r\n                    <FormGroup className=\"form-group has-float-label mb-4 text-center\">\r\n                      {\r\n                        preview ? (\r\n                          <img src={preview} alt=\"avatar\" />\r\n                        ) : (\r\n                          <img src='/assets/img/avatar.png' alt=\"avatar\" />\r\n                        )\r\n                      }\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.firstname\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                      />\r\n                      {errors.firstName && touched.firstName && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.firstName}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.lastname\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                      />\r\n                      {errors.lastName && touched.lastName && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.lastName}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.email\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                      />\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.email}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.password\" defaultValue={password} value={password} />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label  mb-4\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.confirm-password\" defaultValue={confirmPassword} value={confirmPassword} />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                      />\r\n                      {errors.confirmPassword && touched.confirmPassword && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                      \r\n                      <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          loading ? 'show-spinner' : ''\r\n                        }`}\r\n                        size=\"lg\"\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">\r\n                          <IntlMessages id=\"user.register-button\" />\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </CardBody>\r\n          </Card>\r\n          \r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n// export default injectIntl(NewUser);\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { user, loading, error } = authUser;\r\n  return { user, loading, error };\r\n};\r\n\r\nexport default connect(null, {\r\n  registerUserAction: registerUser,\r\n})(NewUser);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport { connect } from 'react-redux';\r\nimport IntlMessages from '../../../helpers/IntlMessages';\r\nimport AdminDetail from '../../../containers/users/AdminDetail';\r\nimport CustomerDetail from '../../../containers/users/CustomerDetail';\r\n\r\nconst UserDetail = ({ intl, match, history }) => {\r\n  // const { messages } = intl;\r\n  const [user, setUser] = useState({});\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .post(\r\n          `/api/users/detail?id=${match.params.id}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          setUser(data);\r\n          setIsLoaded(true);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    !isLoaded ? (\r\n      <div className=\"loading\" />\r\n    ) : (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <h1>\r\n            <IntlMessages id=\"menu.update-user\" />\r\n          </h1>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      {\r\n        user && user.role === 'admin' && (<AdminDetail user={user} history={history} />)\r\n      }\r\n      {\r\n        user && user.role !== 'admin' && (<CustomerDetail user={user} history={history} />)\r\n      }\r\n    </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n})(UserDetail);\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst UserListHeading = ({\r\n  intl,\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  match,\r\n  startIndex,\r\n  endIndex,\r\n  selectedItemsLength,\r\n  itemsLength,\r\n  onSearchKey,\r\n  pageSizes,\r\n  heading,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n  const { messages } = intl;\r\n\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <div className=\"mb-2\">\r\n          <h1>\r\n            <IntlMessages id={heading} />\r\n          </h1>\r\n\r\n          <div className=\"text-zero top-right-button-container\">\r\n            <NavLink\r\n                exact={true}\r\n                to={`/admin/users/new/`}\r\n                className=\"top-right-button btn btn-primary btn-lg\"\r\n            >\r\n            <IntlMessages id=\"users.add-new\" />\r\n            </NavLink>\r\n            {'  '}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <IntlMessages id=\"pages.display-options\" />{' '}\r\n            <i className=\"simple-icon-arrow-down align-middle\" />\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  id=\"search\"\r\n                  placeholder={messages['menu.search']}\r\n                  onKeyPress={(e) => onSearchKey(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default injectIntl(UserListHeading);\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport Pagination from './Pagination';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport { Card } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ListUsersListing = ({\r\n  items,\r\n  currentPage,\r\n  totalPage,\r\n  onChangePage,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      {items.map((user, index) => {\r\n        return (\r\n          <Colxx xxs=\"12\" className=\"mb-3\" key={index}>\r\n            <Card className='d-flex flex-row'>\r\n              <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n                <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n                  <NavLink to={`/admin/users/detail/${user._id}`} className=\"list-item-heading mb-1 truncate w-25\">\r\n                    {user.first_name + ' ' + user.last_name}\r\n                  </NavLink>\r\n                  <p className=\"mb-1 text-small w-20 w-sm-100 text-primary\">\r\n                    {user.email}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-10 w-sm-100\">\r\n                    {user.role}\r\n                  </p>\r\n                  <p className=\"mb-1 text-muted text-small w-30 w-sm-100\">\r\n                    {moment(user.date).format('LLLL')}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Colxx>\r\n        );\r\n      })}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListUsersListing);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport UserListHeading from '../../../containers/users/UserListHeading';\r\nimport ListUsersListing from '../../../containers/users/ListUsersListing';\r\n\r\nconst pageSizes = [4, 8, 12, 20];\r\n\r\nconst UserList = ({ match }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\r\n\r\n  const [totalItemCount, setTotalItemCount] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [search, setSearch] = useState('');\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .post(\r\n          `/api/users/list?pageSize=${selectedPageSize}&currentPage=${currentPage}&search=${search}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          setTotalPage(data.totalPage);\r\n          setItems(data.data);\r\n          setSelectedItems([]);\r\n          setTotalItemCount(data.totalItem);\r\n          setIsLoaded(true);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [selectedPageSize, currentPage, search]);\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <div className=\"disable-text-selection\">\r\n        <UserListHeading\r\n          heading=\"users.all\"\r\n          changePageSize={setSelectedPageSize}\r\n          selectedPageSize={selectedPageSize}\r\n          totalItemCount={totalItemCount}\r\n          match={match}\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n          itemsLength={items ? items.length : 0}\r\n          onSearchKey={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setSearch(e.target.value.toLowerCase());\r\n            }\r\n          }}\r\n          pageSizes={pageSizes}\r\n        />\r\n        <ListUsersListing\r\n          items={items}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={setCurrentPage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}
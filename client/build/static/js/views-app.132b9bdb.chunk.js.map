{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","containers/navs/Footer.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","layout/AppLayout.js","views/app/index.js","components/common/CustomBootstrap.js","helpers/IntlMessages.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","color","right","id","to","Footer","xxs","sm","injectIntl","connect","menu","settings","authUser","containerClassnames","menuClickCount","selectedMenuHasSubItems","receiveAuthUser","locale","loginUser","user","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","logoutUserAction","logoutUser","changeLocaleAction","changeLocale","history","useState","location","onClick","e","_clickCount","_conClassnames","preventDefault","setTimeout","event","document","createEvent","initEvent","window","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","UncontrolledDropdown","DropdownToggle","caret","size","toUpperCase","DropdownMenu","localeOptions","map","l","DropdownItem","_locale","direction","getDirection","setDirection","reload","key","name","href","role","src","first_name","last_name","alt","avatar","divider","push","data","icon","label","subs","Sidebar","props","handleWindowResize","isTrusted","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","target","classList","contains","parentElement","setState","viewingParentMenu","toggle","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","windowWidth","innerWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","remove","oldliSub","selectedSublink","add","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","indexOf","prevProps","this","pathname","scrollTo","setProjectMenuItems","userId","_id","options","suppressScrollX","wheelPropagation","Nav","vertical","item","NavItem","classnames","active","newWindow","rel","IntlMessages","data-flag","data-parent","sub","index","Collapse","isOpen","thirdSub","thirdIndex","Badge","pill","style","totalProjectsNumber","latestProjectMenus","project","project_name","Component","withRouter","changeDefaultClassnames","mapActionToProps","receiveAuthUserAction","children","useEffect","Object","keys","Dashboard","React","lazy","Projects","Settings","Faq","Contact","Terms","Privacy","match","fallback","exact","from","url","path","render","Colxx","widths","Separator","withRef"],"mappings":"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","file":"static/js/views-app.132b9bdb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"/app/dashboard\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.dashboard\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/projects/list\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-briefcase d-block\" />{' '}\r\n            <IntlMessages id=\"menu.project-list\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/tools\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-wrench d-block\" />{' '}\r\n            <IntlMessages id=\"menu.tools\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/support\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-question d-block\" />{' '}\r\n            <IntlMessages id=\"menu.support\" />\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"/app/settings\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-settings d-block\" />{' '}\r\n            <IntlMessages id=\"menu.settings\" />\r\n          </NavLink>\r\n\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">© APIRender.com Pty Ltd</p>\r\n            </Colxx>\r\n            <Colxx className=\"col-sm-6 d-none d-sm-flex justify-content-end\">\r\n              <p className=\"mb-0 text-muted text-sm\">All Prices are in Australian Dollars and currency can be converted at checkout.</p>\r\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={'/app/privacy'}>\r\n                    Privacy Policy\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={`/app/terms`}>\r\n                    Terms & Conditions\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  changeLocale,\r\n} from '../../redux/actions';\r\n\r\nimport {\r\n  searchPath,\r\n  localeOptions,\r\n} from '../../constants/defaultValues';\r\n\r\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\r\nimport TopnavEasyAccess from './Topnav.EasyAccess';\r\n\r\nimport { getDirection, setDirection } from '../../helpers/Utils';\r\n\r\nconst TopNav = ({\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  locale,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n  changeLocaleAction,\r\n  loginUser,\r\n}) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword('');\r\n  };\r\n\r\n  const handleChangeLocale = (_locale, direction) => {\r\n    changeLocaleAction(_locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const isInFullScreenFn = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('navbar') ||\r\n        e.target.classList.contains('simple-icon-magnifier'))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains('simple-icon-magnifier')) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains('search')\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector('.mobile-view');\r\n      if (input && input.classList) input.classList.remove('mobile-view');\r\n      removeEventsSearch();\r\n      setSearchKeyword('');\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const isFS = isInFullScreenFn();\r\n\r\n    const docElm = document.documentElement;\r\n    if (!isFS) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n    // setIsInFullScreen(!isFS);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction();\r\n    history.push('/user/login');\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        <div className=\"d-inline-block\">\r\n          <UncontrolledDropdown className=\"ml-2\">\r\n            <DropdownToggle\r\n              caret\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              className=\"language-button\"\r\n            >\r\n              <span className=\"name\">{locale.toUpperCase()}</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              {localeOptions.map((l) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\r\n                    key={l.id}\r\n                  >\r\n                    {l.name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n      <a className=\"navbar-logo\" href=\"/\">\r\n        <span className=\"logo d-none d-xs-block\" />\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </a>\r\n\r\n      <div className=\"navbar-right\">\r\n        {loginUser.role === 'customer' && (\r\n          <NavLink to={'/app/projects/new-project'} className=\"mr-5\">\r\n            <img src={'/assets/img/start_project.png'} />\r\n          </NavLink>\r\n        )}\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span className=\"name mr-1\">{loginUser.first_name}&nbsp;{loginUser.last_name}</span>\r\n              <span>\r\n                <img alt=\"avatar\" src={loginUser.avatar ? `${loginUser.avatar}` : '/assets/img/avatar.png'} width=\"40px\" height=\"40px\" />\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <DropdownItem>Dashboard</DropdownItem>\r\n              <DropdownItem>Projects</DropdownItem>\r\n              <DropdownItem>Tools</DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink\r\n                  to=\"/app/settings\"\r\n                >\r\n                  Settings\r\n                </NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings, authUser }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { receiveAuthUser } = authUser;\r\n  const { locale } = settings;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n    receiveAuthUser,\r\n    loginUser\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale\r\n  })(TopNav)\r\n);\r\n","const data = [\r\n  {\r\n    id: 'dashboard',\r\n    icon: 'simple-icon-home',\r\n    label: 'menu.dashboard',\r\n    to: '/app/dashboard',\r\n  },\r\n  {\r\n    id: 'projects',\r\n    icon: 'simple-icon-briefcase',\r\n    label: 'menu.projects',\r\n    to: '/app/projects',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-plus',\r\n        label: 'menu.new-project',\r\n        to: '/app/projects/new-project',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.project-list',\r\n        to: '/app/projects/list',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'tools',\r\n    icon: 'simple-icon-wrench',\r\n    label: 'menu.tools',\r\n    to: '/app/tools',\r\n  },\r\n  {\r\n    id: 'support',\r\n    icon: 'simple-icon-question',\r\n    label: 'menu.support',\r\n    to: '/app/support',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-question',\r\n        label: 'menu.faq',\r\n        to: '/app/support/faq',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.contact-us',\r\n        to: '/app/support/contact',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'settings',\r\n    icon: 'simple-icon-settings',\r\n    label: 'menu.settings',\r\n    to: '/app/settings',\r\n  },\r\n];\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse, Badge } from 'reactstrap';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setProjectMenuItems,\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/menu';\r\nimport { getUserId } from '../../helpers/Utils';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: '',\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter((x) => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes('menu-sub-hidden') &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes('menu-hidden') ||\r\n      currentClasses.includes('menu-mobile')\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      '.third-level-menu  a.active'\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            ),\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n    this.props.setProjectMenuItems({userId: this.props.loginUser._id, role: this.props.loginUser.role});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter((x) => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  menuItems.map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                menuItems.map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                  {\r\n                                    item.id=='projects' && sub.id==='projects-list' && (\r\n                                      <Badge pill\r\n                                        color=\"primary\"\r\n                                        className=\"position-absolute badge-top-right\"\r\n                                        style={{right: \"15px\"}}>\r\n                                      {this.props.totalProjectsNumber}\r\n                                      </Badge>\r\n                                    )\r\n                                  }\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                        {\r\n                          item.id==='projects' && this.props.latestProjectMenus.map((project, index) => {\r\n                            return (\r\n                              <NavItem key={project._id}>\r\n                                <NavLink className=\"d-flex align-items-center pr-2\" to={`/app/projects/details/${project._id}`}>\r\n                                  <i className=\"simple-icon-doc\" />{' '}\r\n                                  {project.project_name}\r\n                                </NavLink>\r\n                              </NavItem>\r\n                            )\r\n                          })\r\n                        }\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n  } = menu;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n    loginUser\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n    setProjectMenuItems,\r\n  })(Sidebar)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TopNav from '../containers/navs/Topnav';\r\nimport Sidebar from '../containers/navs/Sidebar';\r\nimport Footer from '../containers/navs/Footer';\r\n\r\nimport {\r\n  receiveAuthUser,\r\n} from '../redux/actions';\r\n\r\nconst AppLayout = ({ containerClassnames, children, history, receiveAuthUserAction, loginUser }) => {\r\n\r\n  useEffect(() => {\r\n    receiveAuthUserAction(history);\r\n  }, []);\r\n\r\n  return Object.keys(loginUser).length == 0 ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const { containerClassnames } = menu;\r\n  const loginUser = authUser.user;\r\n  return { containerClassnames, loginUser};\r\n};\r\nconst mapActionToProps = {\r\n  receiveAuthUserAction: receiveAuthUser\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../layout/AppLayout';\r\n\r\nconst Dashboard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard\" */ './dashboard')\r\n);\r\nconst Projects = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './projects')\r\n);\r\nconst Settings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"settings\" */ './settings')\r\n);\r\nconst Faq = React.lazy(() =>\r\n  import(/* webpackChunkName: \"faq\" */ './faq')\r\n);\r\nconst Contact = React.lazy(() =>\r\n  import(/* webpackChunkName: \"faq\" */ './contact')\r\n);\r\nconst Terms = React.lazy(() =>\r\n  import(/* webpackChunkName: \"terms and condition\" */ \"./terms\")\r\n);\r\nconst Privacy = React.lazy(() =>\r\n  import(/* webpackChunkName: \"privacy policy\" */ \"./privacy\")\r\n);\r\nconst App = ({ match }) => {\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/dashboard`}\r\n            />\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <Settings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/support/faq`}\r\n              render={(props) => <Faq {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              render={(props) => <Dashboard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/projects`}\r\n              render={(props) => <Projects {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/terms`}\r\n              render={(props) => <Terms {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/privacy`}\r\n              render={(props) => <Privacy {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/support/contact`}\r\n              render={(props) => <Contact {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n"],"sourceRoot":""}
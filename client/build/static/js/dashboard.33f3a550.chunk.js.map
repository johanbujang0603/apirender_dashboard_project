{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","constants/status.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardBody.js","containers/dashboard/RecentProjects.js","containers/dashboard/NewComments.js","views/app/dashboard.js","components/cards/IconCard.js","containers/dashboard/Statistics.js","views/admin/dashboard.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","statusColor","CardTitle","CardBody","RecentProjects","data","type","IntlMessages","id","options","suppressScrollX","wheelPropagation","map","order","index","item","projectCategories","find","o","value","category","key","to","_id","src","img","alt","project_name","style","width","Badge","status","pill","desc","moment","date","format","NewComments","comments","user_details","avatar","first_name","last_name","height","service_id","message","injectIntl","connect","loginUser","authUser","user","match","useState","isLoading","setIsLoading","latestProjects","setLatestProjects","messages","setMessages","useEffect","unmounted","axios","post","user_id","role","then","res","projects","Row","xxs","length","exact","lg","xl","memo","icon","title","Statistics","Dashboard","someStatistics","setSomeStatistics","totalProjectsInProgress","totalPayments","totalProjectsAwaiting","totalProjectsCompleted"],"mappings":"mIAAA,6EAMIA,EAAY,CACdC,IAAKC,IACLC,QAASC,IAAUC,KACnBC,MAAOF,IAAUG,OACjBC,KAAMJ,IAAUC,KAChBI,QAASL,IAAUC,KACnBK,UAAWN,IAAUG,OACrBI,UAAWP,IAAUQ,OACrBC,SAAUT,IAAUU,UAAU,CAACV,IAAUQ,OAAQR,IAAUG,OAAQH,IAAUW,QAM3EC,EAAO,SAAcC,GACvB,IAAIP,EAAYO,EAAMP,UAClBC,EAAYM,EAAMN,UAClBL,EAAQW,EAAMX,MACdE,EAAOS,EAAMT,KACbL,EAAUc,EAAMd,QAChBM,EAAUQ,EAAMR,QAChBS,EAAMD,EAAMhB,IACZY,EAAWI,EAAMJ,SACjBM,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HI,EAAUC,YAAgBC,IAAWb,EAAW,SAAQP,GAAU,eAAsBK,GAAO,cAAqBF,IAASG,EAAU,SAAW,MAAQ,IAAMH,GAAgBK,GACpL,OAAOa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDT,UAAWW,EACXM,IAAKd,MAITG,EAAKhB,UAAYA,EACjBgB,EAAKY,aAvBc,CACjB3B,IAAK,OAuBQe,O,iCCxCf,kCAAO,IAAMa,EAAc,CACvB,MAAS,QACT,oBAAqB,UACrB,gBAAiB,UACjB,cAAe,WACf,OAAU,SACV,UAAa,c,iCCNjB,6EAMI7B,EAAY,CACdC,IAAKC,IACLQ,UAAWN,IAAUG,OACrBI,UAAWP,IAAUQ,QAMnBkB,EAAY,SAAmBb,GACjC,IAAIP,EAAYO,EAAMP,UAClBC,EAAYM,EAAMN,UAClBO,EAAMD,EAAMhB,IACZkB,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAWb,EAAW,cAAeC,GACnE,OAAOa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDT,UAAWW,MAIfS,EAAU9B,UAAYA,EACtB8B,EAAUF,aAjBS,CACjB3B,IAAK,OAiBQ6B,O,iCC7Bf,6EAMI9B,EAAY,CACdC,IAAKC,IACLQ,UAAWN,IAAUG,OACrBI,UAAWP,IAAUQ,OACrBC,SAAUT,IAAUU,UAAU,CAACV,IAAUQ,OAAQR,IAAUG,OAAQH,IAAUW,QAM3EgB,EAAW,SAAkBd,GAC/B,IAAIP,EAAYO,EAAMP,UAClBC,EAAYM,EAAMN,UAClBE,EAAWI,EAAMJ,SACjBK,EAAMD,EAAMhB,IACZkB,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFI,EAAUC,YAAgBC,IAAWb,EAAW,aAAcC,GAClE,OAAOa,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDT,UAAWW,EACXM,IAAKd,MAITkB,EAAS/B,UAAYA,EACrB+B,EAASH,aAnBU,CACjB3B,IAAK,OAmBQ8B,O,iOCyCAC,EA9DQ,SAACC,GACtB,OACE,kBAACjB,EAAA,EAAD,KACE,yBAAKN,UAAU,sCACb,4BAAQwB,KAAK,SAASxB,UAAU,oCAC9B,uBAAGA,UAAU,0BAGjB,kBAACqB,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAcC,GAAG,gCAEnB,yBAAK1B,UAAU,qCACb,kBAAC,IAAD,CACE2B,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,IAEnDN,EAAKA,KAAKO,KAAI,SAACC,EAAOC,GACrB,IAAIC,EAAOC,IAAkBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAUN,EAAMO,YACzD,OACE,yBAAKC,IAAKP,EAAOhC,UAAU,wBACzB,kBAAC,IAAD,CACEwC,GAAE,gCAA2BT,EAAMU,KACnCzC,UAAU,6BAEV,yBACE0C,IAAKT,EAAKU,IACVC,IAAKb,EAAMc,aACX7C,UAAU,WACV8C,MAAO,CAACC,MAAO,WAEjB,kBAACC,EAAA,EAAD,CACEpD,MAAOuB,IAAYY,EAAMkB,QACzBV,IAAKP,EACLhC,UAAU,oCACVkD,MAAI,GAEHnB,EAAMkB,SAIX,yBAAKjD,UAAU,uBACb,kBAAC,IAAD,CAASwC,GAAE,gCAA2BT,EAAMU,MAC1C,uBAAGzC,UAAU,qBAAqB+B,EAAMc,cACxC,yBAAK7C,UAAU,QACb,uBAAGA,UAAU,8BACViC,EAAKkB,OAGV,yBAAKnD,UAAU,gEACZoD,IAAOrB,EAAMsB,MAAMC,OAAO,oBCApCC,EAnDK,SAAC,GAAkC,IAAD,IAA/BvD,iBAA+B,MAAnB,GAAmB,EAAfwD,EAAe,EAAfA,SACrC,OACE,kBAAClD,EAAA,EAAD,CAAMN,UAAWA,GACf,kBAACqB,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAcC,GAAG,gCAEnB,yBAAK1B,UAAU,4BACb,kBAAC,IAAD,CACE2B,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,IAEnD2B,EAAS1B,KAAI,SAACG,EAAMD,GACnB,OACE,yBACEO,IAAKP,EACLhC,UAAU,2CAEV,kBAAC,IAAD,CAASwC,GAAG,KAGoB,MAA5BP,EAAKwB,aAAaC,OAChB,yBAAKd,IAAKX,EAAKwB,aAAaE,WAAa,IAAM1B,EAAKwB,aAAaG,UAC5D5D,UAAU,yCAAyC+C,MAAM,KAAKc,OAAO,KACrEnB,IAAG,WAAMT,EAAKwB,aAAaC,UAEhC,yBAAKd,IAAKX,EAAKwB,aAAaE,WAAa,IAAM1B,EAAKwB,aAAaG,UAC5D5D,UAAU,yCAAyC+C,MAAM,KAAKc,OAAO,KACrEnB,IAAI,4BAKf,yBAAK1C,UAAU,aACb,kBAAC,IAAD,CAASwC,GAAE,sCAAiCP,EAAK6B,aAC/C,uBAAG9D,UAAU,2BAA2BiC,EAAK8B,SAC7C,uBAAG/D,UAAU,8BACViC,EAAKwB,aAAaE,WAAa,IAAM1B,EAAKwB,aAAaG,UAD1D,YAEG3B,EAAKY,aAFR,MAEyBO,IAAOnB,EAAKoB,MAAMC,OAAO,oBCiCzDU,sBACbC,aAPsB,SAAC,GAEvB,MAAO,CACLC,UAHsC,EAAfC,SACEC,QAMF,GAAzBH,EArEgB,SAAC,GAAyB,EAAvBI,MAAwB,IAAjBH,EAAgB,EAAhBA,UAAgB,EAERI,oBAAS,GAFD,mBAEnCC,EAFmC,KAExBC,EAFwB,OAGEF,mBAAS,IAHX,mBAGnCG,EAHmC,KAGnBC,EAHmB,OAIVJ,mBAAS,IAJC,mBAInCK,EAJmC,KAIzBC,EAJyB,KAsB1C,OAhBAC,qBAAU,WACR,IAAIC,GAAY,EAYhB,OAXAC,IAAMC,KAAN,2BAAuC,CAACC,QAASf,EAAUzB,IAAKyC,KAAMhB,EAAUgB,OAC/EC,MAAK,SAACC,GACL,OAAOA,EAAI7D,QAEZ4D,MAAK,SAAC5D,GACAuD,IACHN,GAAa,GACbE,EAAkBnD,EAAK8D,UACvBT,EAAYrD,EAAKoD,cAGd,WAAQG,GAAY,KAC1B,CAACZ,IAGFK,EACI,yBAAKvE,UAAU,YAEnB,oCACE,kBAACsF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACP,yBAAKvF,UAAU,QACX,4BACE,kBAACyB,EAAA,EAAD,CAAcC,GAAG,iBADnB,cACyCwC,EAAUP,aAGvB,IAA1Bc,EAAee,QACb,yBAAKxF,UAAU,wCACb,kBAAC,IAAD,CACEyF,OAAO,EACPjD,GAAG,4BACHxC,UAAU,2CAEZ,kBAACyB,EAAA,EAAD,CAAcC,GAAG,wBAM3B,kBAAC,IAAD,CAAW1B,UAAU,WAG3B,kBAACsF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOI,GAAG,IAAIC,GAAG,IAAI3F,UAAU,QACD,IAA1ByE,EAAee,QAAiB,kBAAC,EAAD,CAAgBjE,KAAMkD,KAE1D,kBAAC,IAAD,CAAOiB,GAAG,IAAIC,GAAG,IAAI3F,UAAU,QACP,IAApB2E,EAASa,QAAiB,kBAAC,EAAD,CAAahC,SAAUmB,Y,gIC9C9C7D,MAAM8E,MAhBJ,SAAC,GAAgD,IAAD,IAA7C5F,iBAA6C,MAAjC,OAAiC,EAAzB6F,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,MACnD,OACE,yBAAKrC,UAAS,wBAAmBA,IAC/B,kBAACM,EAAA,EAAD,KACE,kBAACe,EAAA,EAAD,CAAUrB,UAAU,eAClB,uBAAGA,UAAW6F,IACd,uBAAG7F,UAAU,uCACX,kBAACyB,EAAA,EAAD,CAAcC,GAAIoE,KAEpB,uBAAG9F,UAAU,oBAAoBqC,SCM5B0D,EAbI,SAAC,GAAc,IAAZxE,EAAW,EAAXA,KACpB,OACE,kBAAC+D,EAAA,EAAD,CAAKtF,UAAU,kBACZuB,EAAKO,KAAI,SAACG,EAAMD,GACf,OACE,kBAAC,IAAD,CAAO0D,GAAG,IAAIC,GAAG,IAAI3F,UAAU,OAAOuC,IAAG,oBAAeP,IACtD,kBAAC,EAAD,iBAAcC,EAAd,CAAoBjC,UAAU,gBCgD3BgG,UArDG,SAAC,GAAc,EAAZ3B,MAAa,IAAD,EACaC,mBAAS,IADtB,mBACxB2B,EADwB,KACRC,EADQ,KAyB/B,OAvBArB,qBAAU,WACRE,IAAMC,KAAN,mCACCG,MAAK,SAACC,GACL,OAAOA,EAAI7D,QAEZ4D,MAAK,SAAC5D,GACL2E,EAAkB,CAChB,CACEJ,MAAO,wCAAyCD,KAAM,mBAAoBxD,MAAOd,EAAK4E,yBAExF,CACEL,MAAO,4BAA6BD,KAAM,mBAAoBxD,MAAO,MAAQd,EAAK6E,eAEpF,CACEN,MAAO,qCAAsCD,KAAM,mBAAoBxD,MAAOd,EAAK8E,uBAErF,CACEP,MAAO,sCAAuCD,KAAM,mBAAoBxD,MAAOd,EAAK+E,+BAIzF,IAGD,oCACE,kBAAChB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACP,yBAAKvF,UAAU,QACX,4BACI,kBAACyB,EAAA,EAAD,CAAcC,GAAG,qBAGzB,kBAAC,IAAD,CAAW1B,UAAU,WAG3B,kBAACsF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAOI,GAAG,KAAKC,GAAG,KAAK3F,UAAU,QAE7BiG,GACE,kBAAC,EAAD,CAAY1E,KAAM0E,KAIxB,kBAAC,IAAD,CAAOP,GAAG,IAAIC,GAAG,IAAI3F,UAAU","file":"static/js/dashboard.33f3a550.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","export const statusColor = {\r\n    \"DRAFT\": \"draft\",\r\n    \"WAITING FOR FILES\": \"waiting\",\r\n    \"REQUEST QUOTE\": \"waiting\",\r\n    \"IN PROGRESS\": \"progress\",\r\n    \"REVIEW\": \"review\",\r\n    \"COMPLETED\": \"completed\",\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport moment from 'moment';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Card, CardBody, CardTitle, Badge } from 'reactstrap';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { projectCategories } from '../../constants/projectValues';\r\nimport { statusColor } from '../../constants/status';\r\n\r\nconst RecentProjects = (data) => {\r\n  return (\r\n    <Card>\r\n      <div className=\"position-absolute card-top-buttons\">\r\n        <button type=\"button\" className=\"btn btn-header-light icon-button\">\r\n          <i className=\"simple-icon-refresh\" />\r\n        </button>\r\n      </div>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <IntlMessages id=\"dashboards.recent-projects\" />\r\n        </CardTitle>\r\n        <div className=\"scroll dashboard-list-with-thumbs\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            {data.data.map((order, index) => {\r\n              let item = projectCategories.find(o => o.value === order.category);\r\n              return (\r\n                <div key={index} className=\"d-flex flex-row mb-3\">\r\n                  <NavLink\r\n                    to={`/app/projects/details/${order._id}`}\r\n                    className=\"d-block position-relative\"\r\n                  >\r\n                    <img\r\n                      src={item.img}\r\n                      alt={order.project_name}\r\n                      className=\"border-0\"\r\n                      style={{width: \"110px\"}}\r\n                    />\r\n                    <Badge\r\n                      color={statusColor[order.status]}\r\n                      key={index}\r\n                      className=\"position-absolute badge-top-right\"\r\n                      pill\r\n                    >\r\n                      {order.status}\r\n                    </Badge>\r\n                  </NavLink>\r\n\r\n                  <div className=\"pl-3 pt-2 pr-2 pb-2\">\r\n                    <NavLink to={`/app/projects/details/${order._id}`}>\r\n                      <p className=\"list-item-heading\">{order.project_name}</p>\r\n                      <div className=\"pr-4\">\r\n                        <p className=\"text-muted mb-1 text-small\">\r\n                          {item.desc}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"text-primary text-small font-weight-medium d-none d-sm-block\">\r\n                        {moment(order.date).format('LLLL')}\r\n                      </div>\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default RecentProjects;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport moment from 'moment';\r\n\r\nconst NewComments = ({ className = '', comments }) => {\r\n  return (\r\n    <Card className={className}>\r\n      <CardBody>\r\n        <CardTitle>\r\n          <IntlMessages id=\"dashboards.recent-messages\" />\r\n        </CardTitle>\r\n        <div className=\"dashboard-list-with-user\">\r\n          <PerfectScrollbar\r\n            options={{ suppressScrollX: true, wheelPropagation: false }}\r\n          >\r\n            {comments.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"d-flex flex-row mb-3 pb-3 border-bottom\"\r\n                >\r\n                  <NavLink to=\"#\">\r\n                    \r\n                    {\r\n                      item.user_details.avatar != null ? (\r\n                        <img alt={item.user_details.first_name + ' ' + item.user_details.last_name}\r\n                             className=\"img-object-fit border-0 rounded-circle\" width=\"40\" height=\"40\"\r\n                             src={`/${item.user_details.avatar}`} />\r\n                      ): (\r\n                        <img alt={item.user_details.first_name + ' ' + item.user_details.last_name}\r\n                             className=\"img-object-fit border-0 rounded-circle\" width=\"40\" height=\"40\"\r\n                             src='/assets/img/avatar.png' />\r\n                      )\r\n                    }\r\n                  </NavLink>\r\n\r\n                  <div className=\"pl-3 pr-2\">\r\n                    <NavLink to={`/app/projects/view-briefing/${item.service_id}`}>\r\n                      <p className=\"font-weight-medium mb-0\">{item.message}</p>\r\n                      <p className=\"text-muted mb-0 text-small\">\r\n                        {item.user_details.first_name + ' ' + item.user_details.last_name}&nbsp;|&nbsp;\r\n                        {item.project_name} | {moment(item.date).format('LLLL')}\r\n                      </p>\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewComments;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport RecentProjects from '../../containers/dashboard/RecentProjects';\r\nimport NewComments from '../../containers/dashboard/NewComments';\r\n\r\nconst Dashboard = ({ match, loginUser }) => {\r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [latestProjects, setLatestProjects] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    axios.post(`/api/projects/get-latest`, {user_id: loginUser._id, role: loginUser.role})\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .then((data) => {\r\n      if (!unmounted) {\r\n        setIsLoading(false);\r\n        setLatestProjects(data.projects);\r\n        setMessages(data.messages);\r\n      }\r\n    });\r\n    return () => { unmounted = true };\r\n  }, [loginUser]);\r\n  \r\n  return (\r\n    isLoading ? (\r\n        <div className=\"loading\" />\r\n    ): (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">  \r\n            <div className=\"mb-2\">\r\n                <h1>\r\n                  <IntlMessages id=\"menu.welcome\" /> {`${loginUser.first_name}`}\r\n                </h1>\r\n                {\r\n                  latestProjects.length === 0 && (\r\n                    <div className=\"text-zero top-right-button-container\">\r\n                      <NavLink\r\n                        exact={true}\r\n                        to=\"/app/projects/new-project\"\r\n                        className=\"top-right-button btn btn-primary btn-lg\"\r\n                      >\r\n                      <IntlMessages id=\"projects.add-new\" />\r\n                      </NavLink>\r\n                  </div>\r\n                  )\r\n                }\r\n            </div>\r\n            <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx lg=\"8\" xl=\"4\" className=\"mb-4\">\r\n          { latestProjects.length !== 0 && (<RecentProjects data={latestProjects} />) }\r\n        </Colxx>\r\n        <Colxx lg=\"8\" xl=\"4\" className=\"mb-4\">\r\n          { messages.length !== 0 && (<NewComments comments={messages} />) }\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  ));\r\n};\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const loginUser = authUser.user;\r\n  return {\r\n    loginUser\r\n  };\r\n};\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {})(Dashboard)\r\n);\r\n","import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst IconCard = ({ className = 'mb-4', icon, title, value }) => {\r\n  return (\r\n    <div className={`icon-row-item ${className}`}>\r\n      <Card>\r\n        <CardBody className=\"text-center\">\r\n          <i className={icon} />\r\n          <p className=\"card-text font-weight-semibold mb-0\">\r\n            <IntlMessages id={title} />\r\n          </p>\r\n          <p className=\"lead text-center\">{value}</p>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(IconCard);\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport IconCard from '../../components/cards/IconCard';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Statistics = ({ data }) => {\r\n  return (\r\n    <Row className=\"icon-cards-row\">\r\n      {data.map((item, index) => {\r\n        return (\r\n          <Colxx lg=\"2\" xl=\"2\" className=\"mb-4\" key={`icon_card_${index}`}>\r\n            <IconCard {...item} className=\"mb-4\" />\r\n          </Colxx>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport Statistics from '../../containers/dashboard/Statistics';\r\n\r\nconst Dashboard = ({ match }) => {\r\n  const [someStatistics, setSomeStatistics] = useState([]);\r\n  useEffect(() => {\r\n    axios.post(`/api/dashboard/admin-statistics`)\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .then((data) => {\r\n      setSomeStatistics([\r\n        {\r\n          title: 'dashboards.total-projects-in-progress', icon: 'iconsminds-clock', value: data.totalProjectsInProgress\r\n        },\r\n        {\r\n          title: 'dashboards.total-payments', icon: 'iconsminds-clock', value: 'AU$' + data.totalPayments\r\n        },\r\n        {\r\n          title: 'dashboards.total-projects-awaiting', icon: 'iconsminds-clock', value: data.totalProjectsAwaiting\r\n        },\r\n        {\r\n          title: 'dashboards.total-projects-completed', icon: 'iconsminds-clock', value: data.totalProjectsCompleted\r\n        }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">  \r\n            <div className=\"mb-2\">\r\n                <h1>\r\n                    <IntlMessages id=\"menu.dashboard\" />\r\n                </h1>\r\n            </div>\r\n            <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n      <Row>\r\n        <Colxx lg=\"12\" xl=\"12\" className=\"mb-4\">\r\n          {\r\n            someStatistics && (\r\n              <Statistics data={someStatistics} />\r\n            )\r\n          }\r\n        </Colxx>\r\n        <Colxx lg=\"8\" xl=\"4\" className=\"mb-4\">\r\n          {/* { messages.length != 0 && (<NewComments comments={messages} />) } */}\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}